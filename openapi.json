{
    "openapi": "3.1.0",
    "info": {
        "title": "Vocera AI API",
        "version": "v1",
        "description": "Complete API documentation for Vocera AI Platform. This API provides endpoints for managing AI-powered conversations, call analytics, and quality monitoring features."
    },
    "paths": {
        "/a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7/run/": {
            "get": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_retrieve",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_create",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/discord/servers/": {
            "get": {
                "operationId": "discord_servers_list",
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DiscordServer"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "discord_servers_create",
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/discord/servers/{id}/": {
            "get": {
                "operationId": "discord_servers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "discord_servers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "discord_servers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "discord_servers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/discord/servers/{id}/verify/": {
            "get": {
                "operationId": "discord_servers_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/enums/": {
            "get": {
                "operationId": "enums_retrieve",
                "tags": [
                    "enums"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/call-logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "\nFilter results from this timestamp (e.g. 2025-01-01T00:00:00Z)\nExample: `2025-01-01T00:00:00Z`\n"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "\nFilter results to this timestamp (e.g. 2025-01-31T23:59:59Z)\nExample: `2025-01-31T23:59:59Z`\n"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nComma-separated list of call log IDs\nExample: `1,2,3`\n"
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter by agent ID\nExample: `2142`\n",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nFilter by assistant ID\nExample:\n- `\"asst_1234567890\"`\n- `\"agent_xyz789\"`\n"
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-list",
                        "description": "GET /observability/v1/call-logs/"
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_call_logs_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-create",
                        "description": "POST /observability/v1/call-logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "\nFilter results from this timestamp (e.g. 2025-01-01T00:00:00Z)\nExample: `2025-01-01T00:00:00Z`\n"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "\nFilter results to this timestamp (e.g. 2025-01-31T23:59:59Z)\nExample: `2025-01-31T23:59:59Z`\n"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nComma-separated list of call log IDs\nExample: `1,2,3`\n"
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter by agent ID\nExample: `2142`\n",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nFilter by assistant ID\nExample:\n- `\"asst_1234567890\"`\n- `\"agent_xyz789\"`\n"
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-list",
                        "description": "GET /observability/v1/call-logs-external/"
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_call_logs_external_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-create",
                        "description": "POST /observability/v1/call-logs-external/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-retrieve",
                        "description": "GET /observability/v1/call-logs-external/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_call_logs_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-update",
                        "description": "PUT /observability/v1/call-logs-external/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_call_logs_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-partial-update",
                        "description": "PATCH /observability/v1/call-logs-external/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_call_logs_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-destroy",
                        "description": "DELETE /observability/v1/call-logs-external/{id}/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenario_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-create-scenario-create",
                        "description": "POST /observability/v1/call-logs-external/{id}/create_scenario/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_mark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-mark-critical-scenario-wrong-create",
                        "description": "POST /observability/v1/call-logs-external/{id}/mark_critical_scenario_wrong/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/mark_metric_vote/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_mark_metric_vote_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-mark-metric-vote-create",
                        "description": "POST /observability/v1/call-logs-external/{id}/mark_metric_vote/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_unmark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-unmark-critical-scenario-wrong-create",
                        "description": "POST /observability/v1/call-logs-external/{id}/unmark_critical_scenario_wrong/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/analyze_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_analyze_call_logs_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-analyze-call-logs-retrieve",
                        "description": "GET /observability/v1/call-logs-external/analyze_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenarios_create",
                "description": "Create scenarios from call logs in background using Celery tasks.\nReturns a progress_id immediately for tracking progress.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-create-scenarios-create",
                        "description": "Create scenarios from call logs in background using Celery tasks.\nReturns a progress_id immediately for tracking progress."
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/create_scenarios_progress/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_create_scenarios_progress_retrieve",
                "description": "Get the progress of background scenario creation by progress_id.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-create-scenarios-progress-retrieve",
                        "description": "Get the progress of background scenario creation by progress_id."
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_delete_call_logs_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-delete-call-logs-create",
                        "description": "POST /observability/v1/call-logs-external/delete_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_evaluate_metrics_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-evaluate-metrics-create",
                        "description": "POST /observability/v1/call-logs-external/evaluate_metrics/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_export_call_logs_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-export-call-logs-retrieve",
                        "description": "GET /observability/v1/call-logs-external/export_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-filters-retrieve",
                        "description": "GET /observability/v1/call-logs-external/filters/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_call_id_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-filters-call-id-retrieve",
                        "description": "GET /observability/v1/call-logs-external/filters_call_id/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_customer_number_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-filters-customer-number-retrieve",
                        "description": "GET /observability/v1/call-logs-external/filters_customer_number/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-improve-prompt-create",
                        "description": "POST /observability/v1/call-logs-external/improve_prompt/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_issues_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-improve-prompt-issues-create",
                        "description": "POST /observability/v1/call-logs-external/improve_prompt_issues/"
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_rerun_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            },
                            "examples": {
                                "With-list-of-call-ids": {
                                    "value": {
                                        "agent_id": "1",
                                        "call_logs": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "summary": "with-list-of-call-ids"
                                },
                                "With-call-id": {
                                    "value": {
                                        "agent_id": "1",
                                        "assistant_id": "1"
                                    },
                                    "summary": "with-call-id"
                                },
                                "With-all-call-logs": {
                                    "value": {
                                        "agent_id": "1",
                                        "call_logs": "all"
                                    },
                                    "summary": "with-all-call-logs"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallLogDetail"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-external-rerun-evaluation-create",
                        "description": "POST /observability/v1/call-logs-external/rerun_evaluation/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/": {
            "get": {
                "operationId": "observability_v1_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-retrieve",
                        "description": "GET /observability/v1/call-logs/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_call_logs_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-update",
                        "description": "PUT /observability/v1/call-logs/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_call_logs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-partial-update",
                        "description": "PATCH /observability/v1/call-logs/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_call_logs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-destroy",
                        "description": "DELETE /observability/v1/call-logs/{id}/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenario_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-create-scenario-create",
                        "description": "POST /observability/v1/call-logs/{id}/create_scenario/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_mark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-mark-critical-scenario-wrong-create",
                        "description": "POST /observability/v1/call-logs/{id}/mark_critical_scenario_wrong/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/mark_metric_vote/": {
            "post": {
                "operationId": "observability_v1_call_logs_mark_metric_vote_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-mark-metric-vote-create",
                        "description": "POST /observability/v1/call-logs/{id}/mark_metric_vote/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_unmark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-unmark-critical-scenario-wrong-create",
                        "description": "POST /observability/v1/call-logs/{id}/unmark_critical_scenario_wrong/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/analyze_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_analyze_call_logs_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-analyze-call-logs-retrieve",
                        "description": "GET /observability/v1/call-logs/analyze_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenarios_create",
                "description": "Create scenarios from call logs in background using Celery tasks.\nReturns a progress_id immediately for tracking progress.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-create-scenarios-create",
                        "description": "Create scenarios from call logs in background using Celery tasks.\nReturns a progress_id immediately for tracking progress."
                    }
                }
            }
        },
        "/observability/v1/call-logs/create_scenarios_progress/": {
            "get": {
                "operationId": "observability_v1_call_logs_create_scenarios_progress_retrieve",
                "description": "Get the progress of background scenario creation by progress_id.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-create-scenarios-progress-retrieve",
                        "description": "Get the progress of background scenario creation by progress_id."
                    }
                }
            }
        },
        "/observability/v1/call-logs/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_delete_call_logs_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-delete-call-logs-create",
                        "description": "POST /observability/v1/call-logs/delete_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_evaluate_metrics_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-evaluate-metrics-create",
                        "description": "POST /observability/v1/call-logs/evaluate_metrics/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_export_call_logs_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-export-call-logs-retrieve",
                        "description": "GET /observability/v1/call-logs/export_call_logs/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-filters-retrieve",
                        "description": "GET /observability/v1/call-logs/filters/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_call_id_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-filters-call-id-retrieve",
                        "description": "GET /observability/v1/call-logs/filters_call_id/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_customer_number_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-filters-customer-number-retrieve",
                        "description": "GET /observability/v1/call-logs/filters_customer_number/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-improve-prompt-create",
                        "description": "POST /observability/v1/call-logs/improve_prompt/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_issues_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-improve-prompt-issues-create",
                        "description": "POST /observability/v1/call-logs/improve_prompt_issues/"
                    }
                }
            }
        },
        "/observability/v1/call-logs/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_rerun_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            },
                            "examples": {
                                "With-list-of-call-ids": {
                                    "value": {
                                        "agent_id": "1",
                                        "call_logs": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "summary": "with-list-of-call-ids"
                                },
                                "With-call-id": {
                                    "value": {
                                        "agent_id": "1",
                                        "assistant_id": "1"
                                    },
                                    "summary": "with-call-id"
                                },
                                "With-all-call-logs": {
                                    "value": {
                                        "agent_id": "1",
                                        "call_logs": "all"
                                    },
                                    "summary": "with-all-call-logs"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RerunEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallLogDetail"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-call-logs-rerun-evaluation-create",
                        "description": "POST /observability/v1/call-logs/rerun_evaluation/"
                    }
                }
            }
        },
        "/observability/v1/elevenlabs/observe/": {
            "post": {
                "operationId": "observability_v1_elevenlabs_observe_create",
                "description": "Handle incoming ElevenLabs webhook requests.\n\nThis endpoint processes webhook requests from the ElevenLabs service, validates the request data,\nand creates a call log entry based on the received data. ElevenLabs sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-elevenlabs-observe-create",
                        "description": "Handle incoming ElevenLabs webhook requests.\n\nThis endpoint processes webhook requests from the ElevenLabs service, validates the request data,\nand creates a call log entry based on the received data. ElevenLabs sends webhooks at the end of the call,\nproviding important information about the interaction."
                    }
                }
            }
        },
        "/observability/v1/observe/": {
            "post": {
                "operationId": "observability_v1_observe_create",
                "description": "Send a call to an Agent.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCallLog"
                            },
                            "examples": {
                                "CreateCallLogWithVoiceRecordingURL": {
                                    "value": {
                                        "call_id": "call_12345678",
                                        "agent": 1,
                                        "voice_recording_url": "https://example.com/recordings/call_12345678.mp3",
                                        "transcript_type": "vapi",
                                        "transcript_json": [
                                            {
                                                "role": "agent",
                                                "message": "Hello, how can I help you today?",
                                                "time": 0.0
                                            },
                                            {
                                                "role": "user",
                                                "message": "I need help with my account",
                                                "time": 2.5
                                            }
                                        ],
                                        "call_ended_reason": "completed",
                                        "customer_number": "+1234567890",
                                        "metadata": {
                                            "customer_id": "cust_123",
                                            "campaign_id": "camp_456"
                                        },
                                        "timestamp": "2025-10-03T10:30:00Z",
                                        "dynamic_variables": {
                                            "customer_name": "John Doe",
                                            "order_id": "ORD-12345"
                                        }
                                    },
                                    "summary": "Create Call Log with Voice Recording URL"
                                },
                                "CreateCallLogWithAssistantID": {
                                    "value": {
                                        "call_id": "call_87654321",
                                        "assistant_id": "asst_abc123",
                                        "voice_recording_url": "https://example.com/recordings/call_87654321.mp3",
                                        "transcript_type": "retell",
                                        "transcript_json": [
                                            {
                                                "role": "agent",
                                                "message": "Thank you for calling. How may I assist you?",
                                                "time": 0.0
                                            }
                                        ],
                                        "call_ended_reason": "user-hangup",
                                        "customer_number": "+9876543210"
                                    },
                                    "summary": "Create Call Log with Assistant ID"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCallLog"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCallLog"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-observe-create",
                        "description": "Send a call to an Agent."
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_list",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OverallEvaluation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-list",
                        "description": "GET /observability/v1/overall_evaluation/"
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_overall_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-create",
                        "description": "POST /observability/v1/overall_evaluation/"
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/{id}/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-retrieve",
                        "description": "GET /observability/v1/overall_evaluation/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_overall_evaluation_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-update",
                        "description": "PUT /observability/v1/overall_evaluation/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_overall_evaluation_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-partial-update",
                        "description": "PATCH /observability/v1/overall_evaluation/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_overall_evaluation_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-destroy",
                        "description": "DELETE /observability/v1/overall_evaluation/{id}/"
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/generate_overall_summary/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_generate_overall_summary_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-generate-overall-summary-retrieve",
                        "description": "GET /observability/v1/overall_evaluation/generate_overall_summary/"
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/realtime/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_realtime_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Agent ID.\nExample: `2142`",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Start time for filtering data.\nExample: `\"2024-03-15T00:00:00Z\"`",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "End time for filtering data.\nExample: `\"2024-03-15T23:59:59Z\"`"
                    },
                    {
                        "in": "query",
                        "name": "aggregation_period",
                        "schema": {
                            "enum": [
                                "hour",
                                "day",
                                "week"
                            ],
                            "type": "string",
                            "x-spec-enum-id": "70a362aa6ae6ba48",
                            "default": "day",
                            "minLength": 1
                        },
                        "description": "Time period for data aggregation.\nExample: `\"day\"`, `\"week\"`, or `\"month\"`\n\n* `hour` - Hour\n* `day` - Day\n* `week` - Week"
                    },
                    {
                        "in": "query",
                        "name": "category_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the critical metric category.\nExample: `5`"
                    },
                    {
                        "in": "query",
                        "name": "issue_type",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Type of issue for filtering results.\nExample: `\"new_issues\"`, `\"continued_issues\"`, or `\"new_agents\"`"
                    },
                    {
                        "in": "query",
                        "name": "metric_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the specific metric to filter by.\nExample: `18`"
                    },
                    {
                        "in": "query",
                        "name": "topic",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter results by conversation topic.\nExample: `\"billing_inquiry\"` or `\"technical_support\"`"
                    },
                    {
                        "in": "query",
                        "name": "dropoff_point",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter by specific dropoff point in conversation.\nExample: `\"after_greeting\"` or `\"during_payment\"`"
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-overall-evaluation-realtime-retrieve",
                        "description": "GET /observability/v1/overall_evaluation/realtime/"
                    }
                }
            }
        },
        "/observability/v1/retell/observe/": {
            "post": {
                "operationId": "observability_v1_retell_observe_create",
                "description": "Handle incoming Retell webhook requests.\n\nThis endpoint processes webhook requests from the Retell service, validates the request data,\nand creates a call log entry based on the received data. Retell sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-retell-observe-create",
                        "description": "Handle incoming Retell webhook requests.\n\nThis endpoint processes webhook requests from the Retell service, validates the request data,\nand creates a call log entry based on the received data. Retell sends webhooks at the end of the call,\nproviding important information about the interaction."
                    }
                }
            }
        },
        "/observability/v1/vapi/observe/": {
            "post": {
                "operationId": "observability_v1_vapi_observe_create",
                "description": "Handle incoming VAPI webhook requests.\n\nThis endpoint processes webhook requests from the VAPI service, validates the API key,\nand creates a call log entry based on the received data. VAPI sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "observability-v1-vapi-observe-create",
                        "description": "Handle incoming VAPI webhook requests.\n\nThis endpoint processes webhook requests from the VAPI service, validates the API key,\nand creates a call log entry based on the received data. VAPI sends webhooks at the end of the call,\nproviding important information about the interaction."
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by agent id\nExample: `123`\n"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by project id\nExample: `123`\n"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            },
                            "examples": {
                                "CreateScheduledJobWithScenarios": {
                                    "value": {
                                        "name": "Daily Agent Test",
                                        "scenarios": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 9 * * 1-5",
                                        "timezone": "America/New_York"
                                    },
                                    "summary": "Create Scheduled Job with Scenarios"
                                },
                                "CreateScheduledJobWithTags": {
                                    "value": {
                                        "name": "Weekly Regression Test",
                                        "tags": [
                                            "regression",
                                            "high-priority"
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 0 * * 0",
                                        "timezone": "UTC"
                                    },
                                    "summary": "Create Scheduled Job with Tags"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs-external/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_external_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by agent id\nExample: `123`\n"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by project id\nExample: `123`\n"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_external_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            },
                            "examples": {
                                "CreateScheduledJobWithScenarios": {
                                    "value": {
                                        "name": "Daily Agent Test",
                                        "scenarios": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 9 * * 1-5",
                                        "timezone": "America/New_York"
                                    },
                                    "summary": "Create Scheduled Job with Scenarios"
                                },
                                "CreateScheduledJobWithTags": {
                                    "value": {
                                        "name": "Weekly Regression Test",
                                        "tags": [
                                            "regression",
                                            "high-priority"
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 0 * * 0",
                                        "timezone": "UTC"
                                    },
                                    "summary": "Create Scheduled Job with Tags"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs-external/{id}/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_external_retrieve",
                "description": "Retrieve a scheduled job by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_external_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            },
                            "examples": {
                                "UpdateScheduledJob": {
                                    "value": {
                                        "name": "Updated Daily Agent Test",
                                        "scenarios": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 10 * * 1-5",
                                        "timezone": "America/Los_Angeles"
                                    },
                                    "summary": "Update Scheduled Job"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_external_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            },
                            "examples": {
                                "UpdateScheduleTimeOnly": {
                                    "value": {
                                        "crontab_expression": "0 8 * * 1-5"
                                    },
                                    "summary": "Update Schedule Time Only"
                                },
                                "UpdateScenariosOnly": {
                                    "value": {
                                        "scenarios": [
                                            5,
                                            6,
                                            7
                                        ]
                                    },
                                    "summary": "Update Scenarios Only"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_external_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs/{id}/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_retrieve",
                "description": "Retrieve a scheduled job by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            },
                            "examples": {
                                "UpdateScheduledJob": {
                                    "value": {
                                        "name": "Updated Daily Agent Test",
                                        "scenarios": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ],
                                        "agent": 1,
                                        "crontab_expression": "0 10 * * 1-5",
                                        "timezone": "America/Los_Angeles"
                                    },
                                    "summary": "Update Scheduled Job"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            },
                            "examples": {
                                "UpdateScheduleTimeOnly": {
                                    "value": {
                                        "crontab_expression": "0 8 * * 1-5"
                                    },
                                    "summary": "Update Schedule Time Only"
                                },
                                "UpdateScenariosOnly": {
                                    "value": {
                                        "scenarios": [
                                            5,
                                            6,
                                            7
                                        ]
                                    },
                                    "summary": "Update Scenarios Only"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/events/": {
            "post": {
                "operationId": "slack_events_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/interact/": {
            "post": {
                "operationId": "slack_interact_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/oauth/": {
            "post": {
                "operationId": "slack_oauth_create",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/": {
            "get": {
                "operationId": "slack_slack_workspaces_list",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "slack_slack_workspaces_create",
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/": {
            "get": {
                "operationId": "slack_slack_workspaces_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "slack_slack_workspaces_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "slack_slack_workspaces_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "slack_slack_workspaces_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/get_channels/": {
            "get": {
                "operationId": "slack_slack_workspaces_get_channels_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/verify/": {
            "get": {
                "operationId": "slack_slack_workspaces_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/create-checkout-session/": {
            "post": {
                "operationId": "subscriptions_create_checkout_session_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/packs/": {
            "get": {
                "operationId": "subscriptions_packs_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pack"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/{id}/": {
            "get": {
                "operationId": "subscriptions_packs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this pack.",
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/add_pack/": {
            "post": {
                "operationId": "subscriptions_packs_add_pack_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/stripe/webhook/": {
            "post": {
                "operationId": "subscriptions_stripe_webhook_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/subscriptions/": {
            "get": {
                "operationId": "subscriptions_subscriptions_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/": {
            "get": {
                "operationId": "subscriptions_subscriptions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/cancel/": {
            "post": {
                "operationId": "subscriptions_subscriptions_cancel_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/reactivate/": {
            "post": {
                "operationId": "subscriptions_subscriptions_reactivate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/update_payment_method/": {
            "post": {
                "operationId": "subscriptions_subscriptions_update_payment_method_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/create_portal_session/": {
            "post": {
                "operationId": "subscriptions_subscriptions_create_portal_session_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/": {
            "get": {
                "operationId": "test_framework_billing_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Billing"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/runs/": {
            "get": {
                "operationId": "test_framework_billing_runs_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/status/": {
            "get": {
                "operationId": "test_framework_billing_status_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/critical-categories/{id}/": {
            "put": {
                "operationId": "test_framework_critical_categories_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_critical_categories_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/custom-provider-transcript-webhook/": {
            "post": {
                "operationId": "test_framework_custom_provider_transcript_webhook_create",
                "description": "Handle incoming webhook POST requests.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/generate_scenarios/": {
            "post": {
                "operationId": "test_framework_generate_scenarios_create",
                "description": "Generate scenarios for a given agent.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/{id}/": {
            "put": {
                "operationId": "test_framework_metric_reviews_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_metric_reviews_partial_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_metric_reviews_destroy",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metric-reviews/{id}/process_feedback/": {
            "post": {
                "operationId": "test_framework_metric_reviews_process_feedback_create",
                "description": "Process feedback for a metric description and evaluation trigger.\n\nThis endpoint takes agent description, transcript, current metric description,\ncurrent evaluation trigger, and feedback to generate improved versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/delete_reviews/": {
            "post": {
                "operationId": "test_framework_metric_reviews_delete_reviews_create",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/process_feedbacks/": {
            "post": {
                "operationId": "test_framework_metric_reviews_process_feedbacks_create",
                "description": "Process multiple feedbacks for a metric across multiple test sets.\n\nThis endpoint takes a metric ID and test set IDs, retrieves the associated\nmetric reviews with feedback, and calls process_metric_feedbacks to generate\nimproved metric description and evaluation trigger.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/process_feedbacks_progress/": {
            "get": {
                "operationId": "test_framework_metric_reviews_process_feedbacks_progress_retrieve",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/process-message-response/": {
            "post": {
                "operationId": "test_framework_process_message_response_create",
                "description": "API view to process incoming message responses from VAPI.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/process-patronus-message-response/": {
            "post": {
                "operationId": "test_framework_process_patronus_message_response_create",
                "description": "API view to process incoming message responses from Patronus.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/project-default-metrics/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_list",
                "description": "List API not supported",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_project_default_metrics_create",
                "description": "Create or update user's default metrics",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/project-default-metrics/{project}/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_retrieve",
                "description": "Get user's default metrics for a specific organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_project_default_metrics_update",
                "description": "Update user's default metrics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_project_default_metrics_partial_update",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_project_default_metrics_destroy",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-outbound-caller/": {
            "post": {
                "operationId": "test_framework_test_outbound_caller_create",
                "description": "API view to test outbound calls.\nThis view allows users to run scenarios associated with a specific agent\nby updating the phone number in the VAPI system.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/": {
            "get": {
                "operationId": "test_framework_test_sets_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TestSetList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_test_sets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/": {
            "get": {
                "operationId": "test_framework_test_sets_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_test_sets_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_test_sets_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_test_sets_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/add_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_add_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/review_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_review_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/voice_recording_url/": {
            "get": {
                "operationId": "test_framework_test_sets_voice_recording_url_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/add/{metric_id}/": {
            "get": {
                "operationId": "test_framework_test_sets_add_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "metric_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_log/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_log_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "call_log_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the call log to create test set from",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent that owns the call log",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string",
                            "default": ""
                        },
                        "description": "Optional name for the test set. If not provided, call log ID will be used"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "array",
                            "items": {}
                        },
                        "description": "List of metrics with optional notes to include in the test set",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_logs/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_logs_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "call_logs",
                        "schema": {},
                        "description": "Can be 'all', a positive integer (number of call logs), or a list of call log IDs",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent that owns the call logs",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "array",
                            "items": {}
                        },
                        "description": "List of metrics with optional notes to include in the test set",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_run/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_run_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the run to create test set from",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent that owns the run",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string",
                            "default": ""
                        },
                        "description": "Optional name for the test set. If not provided, run ID will be used"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "array",
                            "items": {}
                        },
                        "description": "List of metrics with optional notes to include in the test set",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_testsets/": {
            "post": {
                "operationId": "test_framework_test_sets_create_testsets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/tools/sleep/": {
            "get": {
                "operationId": "test_framework_tools_sleep_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "test_framework_tools_sleep_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_external_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_delete_knowledge_base_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_disable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_duplicate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_enable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_knowledge_base_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_personalities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_runs_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_upload_knowledge_base_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_short_list_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAIAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_delete_knowledge_base_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_disable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_duplicate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_enable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_knowledge_base_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_personalities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_runs_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_upload_knowledge_base_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_short_list_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/configurations/": {
            "get": {
                "operationId": "test_framework_v1_configurations_list",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_configurations_create",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/configurations/{id}/": {
            "get": {
                "operationId": "test_framework_v1_configurations_retrieve",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_configurations_update",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_configurations_partial_update",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_configurations_destroy",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_list",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_critical_metric_categories_external_create",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_retrieve",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_categories_external_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_categories_external_partial_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_critical_metric_categories_external_destroy",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_retrieve",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_retrieve",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/": {
            "get": {
                "operationId": "test_framework_v1_metrics_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter by agent ID\nExample: `123`\n"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by assistant ID\nExample: `asst_1234567890`\n"
                    },
                    {
                        "in": "query",
                        "name": "include_scores",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "\nInclude Overall and Total scores in Metric List\nExample: `true` or `false`\n                "
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                },
                                "examples": {
                                    "MetricList": {
                                        "value": [
                                            {
                                                "id": 123,
                                                "agent": 123,
                                                "name": "<string>",
                                                "description": "<string>",
                                                "function_name": "<string>",
                                                "type": "basic",
                                                "eval_type": "binary_workflow_adherence",
                                                "enum_values": [
                                                    "<string>"
                                                ],
                                                "audio_enabled": true,
                                                "observability_enabled": true,
                                                "simulation_enabled": true,
                                                "prompt": "<string>",
                                                "evaluation_trigger": "always",
                                                "evaluation_trigger_prompt": "<string>",
                                                "priority_assignment_prompt": "<string>",
                                                "vocera_defined_metric_code": "<string>",
                                                "configuration": {
                                                    "infra_issues_timeout": "<integer>",
                                                    "key": "value"
                                                },
                                                "kb_file_ids": [
                                                    "<integer>"
                                                ],
                                                "knowledge_base_files": [
                                                    {
                                                        "id": "<integer>",
                                                        "agent": "<integer>",
                                                        "file_url": "<string>",
                                                        "file_name": "<string>",
                                                        "file_type": "<string>",
                                                        "file_size": "<integer>",
                                                        "created_at": "<datetime>",
                                                        "updated_at": "<datetime>"
                                                    }
                                                ],
                                                "metric_cost": "<float>"
                                            }
                                        ]
                                    },
                                    "MetricListWithOverallScore": {
                                        "value": [
                                            {
                                                "id": "<integer>",
                                                "agent": "<integer>",
                                                "name": "<string>",
                                                "description": "<string>",
                                                "function_name": "<string>",
                                                "type": "basic",
                                                "eval_type": "binary_workflow_adherence",
                                                "enum_values": [
                                                    "<string>"
                                                ],
                                                "audio_enabled": true,
                                                "observability_enabled": true,
                                                "simulation_enabled": true,
                                                "prompt": "<string>",
                                                "evaluation_trigger": "always",
                                                "evaluation_trigger_prompt": "<string>",
                                                "priority_assignment_prompt": "<string>",
                                                "vocera_defined_metric_code": "<string>",
                                                "configuration": {
                                                    "infra_issues_timeout": "<integer>",
                                                    "key": "value"
                                                },
                                                "kb_file_ids": [
                                                    "<integer>"
                                                ],
                                                "knowledge_base_files": [
                                                    {
                                                        "id": "<integer>",
                                                        "agent": "<int>",
                                                        "file_url": "<string>",
                                                        "file_name": "<string>",
                                                        "file_type": "<string>",
                                                        "file_size": "<integer>",
                                                        "created_at": "<datetime>",
                                                        "updated_at": "<datetime>"
                                                    }
                                                ],
                                                "metric_cost": "<float>",
                                                "overall_score": "<integer>",
                                                "total_score": "<integer>"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter by agent ID\nExample: `123`\n"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nFilter by assistant ID\nExample: `asst_1234567890`\n"
                    },
                    {
                        "in": "query",
                        "name": "include_scores",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "\nInclude Overall and Total scores in Metric List\nExample: `true` or `false`\n                "
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                },
                                "examples": {
                                    "MetricList": {
                                        "value": [
                                            {
                                                "id": 123,
                                                "agent": 123,
                                                "name": "<string>",
                                                "description": "<string>",
                                                "function_name": "<string>",
                                                "type": "basic",
                                                "eval_type": "binary_workflow_adherence",
                                                "enum_values": [
                                                    "<string>"
                                                ],
                                                "audio_enabled": true,
                                                "observability_enabled": true,
                                                "simulation_enabled": true,
                                                "prompt": "<string>",
                                                "evaluation_trigger": "always",
                                                "evaluation_trigger_prompt": "<string>",
                                                "priority_assignment_prompt": "<string>",
                                                "vocera_defined_metric_code": "<string>",
                                                "configuration": {
                                                    "infra_issues_timeout": "<integer>",
                                                    "key": "value"
                                                },
                                                "kb_file_ids": [
                                                    "<integer>"
                                                ],
                                                "knowledge_base_files": [
                                                    {
                                                        "id": "<integer>",
                                                        "agent": "<integer>",
                                                        "file_url": "<string>",
                                                        "file_name": "<string>",
                                                        "file_type": "<string>",
                                                        "file_size": "<integer>",
                                                        "created_at": "<datetime>",
                                                        "updated_at": "<datetime>"
                                                    }
                                                ],
                                                "metric_cost": "<float>"
                                            }
                                        ]
                                    },
                                    "MetricListWithOverallScore": {
                                        "value": [
                                            {
                                                "id": "<integer>",
                                                "agent": "<integer>",
                                                "name": "<string>",
                                                "description": "<string>",
                                                "function_name": "<string>",
                                                "type": "basic",
                                                "eval_type": "binary_workflow_adherence",
                                                "enum_values": [
                                                    "<string>"
                                                ],
                                                "audio_enabled": true,
                                                "observability_enabled": true,
                                                "simulation_enabled": true,
                                                "prompt": "<string>",
                                                "evaluation_trigger": "always",
                                                "evaluation_trigger_prompt": "<string>",
                                                "priority_assignment_prompt": "<string>",
                                                "vocera_defined_metric_code": "<string>",
                                                "configuration": {
                                                    "infra_issues_timeout": "<integer>",
                                                    "key": "value"
                                                },
                                                "kb_file_ids": [
                                                    "<integer>"
                                                ],
                                                "knowledge_base_files": [
                                                    {
                                                        "id": "<integer>",
                                                        "agent": "<int>",
                                                        "file_url": "<string>",
                                                        "file_name": "<string>",
                                                        "file_type": "<string>",
                                                        "file_size": "<integer>",
                                                        "created_at": "<datetime>",
                                                        "updated_at": "<datetime>"
                                                    }
                                                ],
                                                "metric_cost": "<float>",
                                                "overall_score": "<integer>",
                                                "total_score": "<integer>"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_external_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_external_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_external_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_external_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_advance_metric_create",
                "description": "Evaluate an advance metric in the background.\n\nReturns a progress_id to poll for results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_basic_metric_create",
                "description": "Evaluate a basic metric in the background.\n\nReturns a progress_id to poll for results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_run_reviews_create",
                "description": "Triggers background processing of metric reviews using Celery tasks.\nReturns a progress_id that can be used to poll for completion status.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/evaluate_metric_progress/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_evaluate_metric_progress_retrieve",
                "description": "Poll for metric evaluation progress.\n\nQuery params:\n    progress_id: The progress_id returned from evaluate_basic_metric or evaluate_advance_metric\n\nReturns:\n    State object with status, output, error, etc.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/fetch_call_details/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_fetch_call_details_retrieve",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/run_reviews_progress/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_run_reviews_progress_retrieve",
                "description": "Polls the progress of background review processing.\nReturns current progress state including completed/failed counts and metric data.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/save_result/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_save_result_create",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/": {
            "get": {
                "operationId": "test_framework_v1_metrics_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_advance_metric_create",
                "description": "Evaluate an advance metric in the background.\n\nReturns a progress_id to poll for results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_basic_metric_create",
                "description": "Evaluate a basic metric in the background.\n\nReturns a progress_id to poll for results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_run_reviews_create",
                "description": "Triggers background processing of metric reviews using Celery tasks.\nReturns a progress_id that can be used to poll for completion status.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/evaluate_metric_progress/": {
            "get": {
                "operationId": "test_framework_v1_metrics_evaluate_metric_progress_retrieve",
                "description": "Poll for metric evaluation progress.\n\nQuery params:\n    progress_id: The progress_id returned from evaluate_basic_metric or evaluate_advance_metric\n\nReturns:\n    State object with status, output, error, etc.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/fetch_call_details/": {
            "get": {
                "operationId": "test_framework_v1_metrics_fetch_call_details_retrieve",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/run_reviews_progress/": {
            "get": {
                "operationId": "test_framework_v1_metrics_run_reviews_progress_retrieve",
                "description": "Polls the progress of background review processing.\nReturns current progress state including completed/failed counts and metric data.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/save_result/": {
            "post": {
                "operationId": "test_framework_v1_metrics_save_result_create",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/": {
            "get": {
                "operationId": "test_framework_v1_personalities_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_external_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_retrieve",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_personalities_external_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_external_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_external_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/{id}/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_external_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/{id}/": {
            "get": {
                "operationId": "test_framework_v1_personalities_retrieve",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_personalities_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/personalities/{id}/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_external_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_retrieve",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_external_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_external_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_external_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/{id}/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_retrieve",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_retrieve",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_external_update",
                "description": "Update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_external_partial_update",
                "description": "Partially update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_external_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/{id}/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_retrieve",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_update",
                "description": "Update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_partial_update",
                "description": "Partially update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/": {
            "get": {
                "operationId": "test_framework_v1_results_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by agent ID",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by Result name"
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by scenarios (comma-separated list of scenario IDs)"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_results_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/": {
            "get": {
                "operationId": "test_framework_v1_results_external_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by agent ID",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by Result name"
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by scenarios (comma-separated list of scenario IDs)"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_results_external_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_results_external_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "id": "integer",
                                            "name": "string",
                                            "agent": "integer",
                                            "status": "string",
                                            "met_expected_outcome_count": "integer",
                                            "total_expected_outcome_count": "integer",
                                            "success_rate": "float",
                                            "run_as_text": "boolean",
                                            "is_cronjob": "boolean",
                                            "runs": {
                                                "run_id": {
                                                    "id": "integer",
                                                    "scenario": "integer",
                                                    "outbound_number": "string",
                                                    "expected_outcome": {
                                                        "score": 100,
                                                        "explanation": [
                                                            "✅ Positive outcome explanation with checkmark emoji",
                                                            "❌ Negative outcome explanation with X emoji"
                                                        ],
                                                        "outcome_alignments": [
                                                            {
                                                                "outcome": "string",
                                                                "prompt_part": "string",
                                                                "aligned": "boolean"
                                                            }
                                                        ]
                                                    },
                                                    "success": "boolean",
                                                    "evaluation": {
                                                        "metrics": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "type": "binary_workflow_adherence | binary_qualitative | continuous_qualitative | numeric | enum",
                                                                "score": "number",
                                                                "explanation": "string | array",
                                                                "function_name": "string (optional)",
                                                                "extra": {
                                                                    "categories": [
                                                                        {
                                                                            "category": "string",
                                                                            "deviation": "string (optional)",
                                                                            "priority": "string (optional)"
                                                                        }
                                                                    ],
                                                                    "percentiles": {
                                                                        "p50": "number"
                                                                    }
                                                                },
                                                                "enum": "string (for enum type metrics only)"
                                                            }
                                                        ]
                                                    },
                                                    "timestamp": "datetime",
                                                    "executed_at": "datetime",
                                                    "error_message": "string",
                                                    "status": "string",
                                                    "duration": "string (MM:SS format)",
                                                    "scenario_name": "string",
                                                    "personality_name": "string",
                                                    "metadata": "object",
                                                    "inbound_number": "string"
                                                }
                                            },
                                            "overall_evaluation": {
                                                "success_rate": "number",
                                                "metric_summary": {
                                                    "metric_id": {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "type": "string",
                                                        "score": "number",
                                                        "explanation": "string (optional)",
                                                        "function_name": "string",
                                                        "vocera_defined_metric_code": "string (optional)",
                                                        "p50": "number (for numeric metrics)"
                                                    }
                                                },
                                                "worst_performing_metrics": {
                                                    "binary_adherence": [
                                                        "array of metric_ids"
                                                    ]
                                                },
                                                "numeric_metrics": [
                                                    {
                                                        "name": "string",
                                                        "type": "numeric",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number"
                                                        }
                                                    }
                                                ],
                                                "enum_metrics": [
                                                    "array of metric_ids"
                                                ],
                                                "extra_metrics": [
                                                    {
                                                        "name": "string (e.g., 'Expected Outcome', 'Average Ringing Duration')",
                                                        "type": "string",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number (optional)"
                                                        }
                                                    }
                                                ]
                                            },
                                            "total_duration": "string (MM:SS format)",
                                            "total_runs_count": "integer",
                                            "completed_runs_count": "integer",
                                            "success_runs_count": "integer",
                                            "failed_runs_count": "integer",
                                            "scenarios": [
                                                {
                                                    "id": "integer",
                                                    "name": "string"
                                                }
                                            ],
                                            "critical_categories": "array",
                                            "metrics": "array",
                                            "domain": "string (nullable)",
                                            "domain_logo": "string (nullable)",
                                            "runs_by_tags": "object",
                                            "latency_data": "object",
                                            "failed_reasons": "array",
                                            "created_at": "datetime",
                                            "updated_at": "datetime"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_results_external_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_results_external_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_results_external_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_external_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_external_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_external_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_external_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_external_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/reports/": {
            "get": {
                "operationId": "test_framework_v1_results_external_reports_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/reports/share/": {
            "post": {
                "operationId": "test_framework_v1_results_external_reports_share_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_external_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/": {
            "get": {
                "operationId": "test_framework_v1_results_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "id": "integer",
                                            "name": "string",
                                            "agent": "integer",
                                            "status": "string",
                                            "met_expected_outcome_count": "integer",
                                            "total_expected_outcome_count": "integer",
                                            "success_rate": "float",
                                            "run_as_text": "boolean",
                                            "is_cronjob": "boolean",
                                            "runs": {
                                                "run_id": {
                                                    "id": "integer",
                                                    "scenario": "integer",
                                                    "outbound_number": "string",
                                                    "expected_outcome": {
                                                        "score": 100,
                                                        "explanation": [
                                                            "✅ Positive outcome explanation with checkmark emoji",
                                                            "❌ Negative outcome explanation with X emoji"
                                                        ],
                                                        "outcome_alignments": [
                                                            {
                                                                "outcome": "string",
                                                                "prompt_part": "string",
                                                                "aligned": "boolean"
                                                            }
                                                        ]
                                                    },
                                                    "success": "boolean",
                                                    "evaluation": {
                                                        "metrics": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "type": "binary_workflow_adherence | binary_qualitative | continuous_qualitative | numeric | enum",
                                                                "score": "number",
                                                                "explanation": "string | array",
                                                                "function_name": "string (optional)",
                                                                "extra": {
                                                                    "categories": [
                                                                        {
                                                                            "category": "string",
                                                                            "deviation": "string (optional)",
                                                                            "priority": "string (optional)"
                                                                        }
                                                                    ],
                                                                    "percentiles": {
                                                                        "p50": "number"
                                                                    }
                                                                },
                                                                "enum": "string (for enum type metrics only)"
                                                            }
                                                        ]
                                                    },
                                                    "timestamp": "datetime",
                                                    "executed_at": "datetime",
                                                    "error_message": "string",
                                                    "status": "string",
                                                    "duration": "string (MM:SS format)",
                                                    "scenario_name": "string",
                                                    "personality_name": "string",
                                                    "metadata": "object",
                                                    "inbound_number": "string"
                                                }
                                            },
                                            "overall_evaluation": {
                                                "success_rate": "number",
                                                "metric_summary": {
                                                    "metric_id": {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "type": "string",
                                                        "score": "number",
                                                        "explanation": "string (optional)",
                                                        "function_name": "string",
                                                        "vocera_defined_metric_code": "string (optional)",
                                                        "p50": "number (for numeric metrics)"
                                                    }
                                                },
                                                "worst_performing_metrics": {
                                                    "binary_adherence": [
                                                        "array of metric_ids"
                                                    ]
                                                },
                                                "numeric_metrics": [
                                                    {
                                                        "name": "string",
                                                        "type": "numeric",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number"
                                                        }
                                                    }
                                                ],
                                                "enum_metrics": [
                                                    "array of metric_ids"
                                                ],
                                                "extra_metrics": [
                                                    {
                                                        "name": "string (e.g., 'Expected Outcome', 'Average Ringing Duration')",
                                                        "type": "string",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number (optional)"
                                                        }
                                                    }
                                                ]
                                            },
                                            "total_duration": "string (MM:SS format)",
                                            "total_runs_count": "integer",
                                            "completed_runs_count": "integer",
                                            "success_runs_count": "integer",
                                            "failed_runs_count": "integer",
                                            "scenarios": [
                                                {
                                                    "id": "integer",
                                                    "name": "string"
                                                }
                                            ],
                                            "critical_categories": "array",
                                            "metrics": "array",
                                            "domain": "string (nullable)",
                                            "domain_logo": "string (nullable)",
                                            "runs_by_tags": "object",
                                            "latency_data": "object",
                                            "failed_reasons": "array",
                                            "created_at": "datetime",
                                            "updated_at": "datetime"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_results_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_results_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_results_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token_2",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/reports/": {
            "get": {
                "operationId": "test_framework_v1_results_reports_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/reports/share/": {
            "post": {
                "operationId": "test_framework_v1_results_reports_share_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/": {
            "get": {
                "operationId": "test_framework_v1_runs_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__contains",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__agent_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ]
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenario__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "scenario__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personality__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "personality__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__run_as_text",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personalities",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_runs_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__contains",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__agent_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ]
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenario__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "scenario__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personality__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "personality__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__run_as_text",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personalities",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_runs_external_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_runs_external_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_runs_external_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_runs_external_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/mark_expected_outcome_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_expected_outcome_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/mark_metric_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_metric_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_bulk_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Run"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/": {
            "get": {
                "operationId": "test_framework_v1_runs_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_runs_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_runs_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_runs_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/mark_expected_outcome_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_expected_outcome_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/mark_metric_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_metric_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_bulk_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Run"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter evaluators by agent ID\nExample: `2142`\n"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nFilter evaluators by assistant ID\nExample: `asst_1234567890`\n"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nComma-separated list of tags to filter evaluators by\nExample: `tag1,tag2,tag3`\n"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "\nFilter evaluators by agent ID\nExample: `2142`\n"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nFilter evaluators by assistant ID\nExample: `asst_1234567890`\n"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "\nComma-separated list of tags to filter evaluators by\nExample: `tag1,tag2,tag3`\n"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_external_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_external_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_external_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_create",
                "description": "Generate scenarios for a given agent.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate-bg/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_bg_create",
                "description": "Generate scenarios for a given agent.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "progress_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate-progress/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_generate_progress_retrieve",
                "description": "Get progress of scenarios being generated.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "progress_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "UUID progress identifier returned from generate-bg endpoint",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_scenarios": {
                                            "type": "integer",
                                            "description": "Total number of scenarios"
                                        },
                                        "completed_scenarios": {
                                            "type": "integer",
                                            "description": "Number of completed scenarios"
                                        },
                                        "failed_scenarios": {
                                            "type": "integer",
                                            "description": "Number of failed scenarios"
                                        },
                                        "scenarios_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Unique identifier for the scenario"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "agent": {
                                                        "type": "integer",
                                                        "description": "ID of the AI agent this scenario belongs to"
                                                    },
                                                    "assistant_id": {
                                                        "type": "string",
                                                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                                    },
                                                    "personality": {
                                                        "type": "integer",
                                                        "description": "ID of the personality used in this scenario"
                                                    },
                                                    "personality_name": {
                                                        "type": "string",
                                                        "description": "Name of the personality used in this scenario"
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Tags associated with this scenario."
                                                    },
                                                    "runs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "description": "List of IDs for the last run of this scenario"
                                                    },
                                                    "metrics": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "description": "List of metric IDs to associate with this scenario"
                                                    },
                                                    "metric_names": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "List of metric names associated with this scenario"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "description": "Phone number used for outbound calls in this scenario"
                                                    },
                                                    "phone_number_queue_length": {
                                                        "type": "integer",
                                                        "description": "Number of runs in queue for this phone number"
                                                    },
                                                    "first_message": {
                                                        "type": "string",
                                                        "description": "First message to be sent in the scenario"
                                                    },
                                                    "inbound_phone_number": {
                                                        "type": "integer",
                                                        "description": "ID of the phone number used for inbound calls"
                                                    },
                                                    "inbound_phone_number_data": {
                                                        "type": "object",
                                                        "description": "Details of the phone number used for inbound calls",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "description": "ID of the inbound phone number"
                                                            },
                                                            "number": {
                                                                "type": "string",
                                                                "description": "The actual phone number"
                                                            },
                                                            "phone_number_id": {
                                                                "type": "string",
                                                                "description": "External ID of the phone number"
                                                            }
                                                        }
                                                    },
                                                    "instructions": {
                                                        "type": "string",
                                                        "description": "Instructions for the AI agent in this scenario"
                                                    },
                                                    "simulation_description": {
                                                        "type": "string",
                                                        "description": "Description of the simulation if this scenario was created by simulation"
                                                    },
                                                    "information_fields": {
                                                        "type": "object",
                                                        "description": "Additional information fields for the scenario"
                                                    },
                                                    "expected_outcome_prompt": {
                                                        "type": "string",
                                                        "description": "Expected outcome prompt for the scenario"
                                                    },
                                                    "scenario_language": {
                                                        "type": "string",
                                                        "description": "Language of the scenario"
                                                    },
                                                    "is_simulating": {
                                                        "type": "boolean",
                                                        "description": "Whether this scenario was created by simulation"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                },
                                "examples": {
                                    "InboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": null,
                                                    "inbound_number": "+11234567891"
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Inbound Scenario"
                                    },
                                    "OutboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890",
                                                    "inbound_number": null
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891",
                                                    "inbound_number": null
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Outbound Scenario"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_livekit_v2/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_livekit_v2_create",
                "description": "Run scenarios with LiveKit using project credentials.\nAutomatically creates rooms with configuration and generates access tokens.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_pipecat/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_pipecat_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_create",
                "description": "Generate scenarios for a given agent.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate-bg/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_bg_create",
                "description": "Generate scenarios for a given agent.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "progress_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate-progress/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_generate_progress_retrieve",
                "description": "Get progress of scenarios being generated.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "progress_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "UUID progress identifier returned from generate-bg endpoint",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_scenarios": {
                                            "type": "integer",
                                            "description": "Total number of scenarios"
                                        },
                                        "completed_scenarios": {
                                            "type": "integer",
                                            "description": "Number of completed scenarios"
                                        },
                                        "failed_scenarios": {
                                            "type": "integer",
                                            "description": "Number of failed scenarios"
                                        },
                                        "scenarios_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Unique identifier for the scenario"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "agent": {
                                                        "type": "integer",
                                                        "description": "ID of the AI agent this scenario belongs to"
                                                    },
                                                    "assistant_id": {
                                                        "type": "string",
                                                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                                    },
                                                    "personality": {
                                                        "type": "integer",
                                                        "description": "ID of the personality used in this scenario"
                                                    },
                                                    "personality_name": {
                                                        "type": "string",
                                                        "description": "Name of the personality used in this scenario"
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Tags associated with this scenario."
                                                    },
                                                    "runs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "description": "List of IDs for the last run of this scenario"
                                                    },
                                                    "metrics": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "description": "List of metric IDs to associate with this scenario"
                                                    },
                                                    "metric_names": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "List of metric names associated with this scenario"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "description": "Phone number used for outbound calls in this scenario"
                                                    },
                                                    "phone_number_queue_length": {
                                                        "type": "integer",
                                                        "description": "Number of runs in queue for this phone number"
                                                    },
                                                    "first_message": {
                                                        "type": "string",
                                                        "description": "First message to be sent in the scenario"
                                                    },
                                                    "inbound_phone_number": {
                                                        "type": "integer",
                                                        "description": "ID of the phone number used for inbound calls"
                                                    },
                                                    "inbound_phone_number_data": {
                                                        "type": "object",
                                                        "description": "Details of the phone number used for inbound calls",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "description": "ID of the inbound phone number"
                                                            },
                                                            "number": {
                                                                "type": "string",
                                                                "description": "The actual phone number"
                                                            },
                                                            "phone_number_id": {
                                                                "type": "string",
                                                                "description": "External ID of the phone number"
                                                            }
                                                        }
                                                    },
                                                    "instructions": {
                                                        "type": "string",
                                                        "description": "Instructions for the AI agent in this scenario"
                                                    },
                                                    "simulation_description": {
                                                        "type": "string",
                                                        "description": "Description of the simulation if this scenario was created by simulation"
                                                    },
                                                    "information_fields": {
                                                        "type": "object",
                                                        "description": "Additional information fields for the scenario"
                                                    },
                                                    "expected_outcome_prompt": {
                                                        "type": "string",
                                                        "description": "Expected outcome prompt for the scenario"
                                                    },
                                                    "scenario_language": {
                                                        "type": "string",
                                                        "description": "Language of the scenario"
                                                    },
                                                    "is_simulating": {
                                                        "type": "boolean",
                                                        "description": "Whether this scenario was created by simulation"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                },
                                "examples": {
                                    "InboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": null,
                                                    "inbound_number": "+11234567891"
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Inbound Scenario"
                                    },
                                    "OutboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890",
                                                    "inbound_number": null
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891",
                                                    "inbound_number": null
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Outbound Scenario"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_livekit_v2/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_livekit_v2_create",
                "description": "Run scenarios with LiveKit using project credentials.\nAutomatically creates rooms with configuration and generates access tokens.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_pipecat/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_pipecat_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosPipecat"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                },
                                "examples": {
                                    "ListTestProfiles": {
                                        "value": [
                                            {
                                                "agent": 123,
                                                "name": "<string>",
                                                "information": {
                                                    "user_name": "<string>",
                                                    "user_email": "<string>"
                                                }
                                            }
                                        ],
                                        "summary": "List Test Profiles"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            },
                            "examples": {
                                "CreateTestProfile": {
                                    "value": {
                                        "agent": 123,
                                        "name": "<string>",
                                        "information": {
                                            "user_name": "<string>",
                                            "user_email": "<string>"
                                        }
                                    },
                                    "summary": "Create Test Profile"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "CreateTestProfileResponse": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "John Doe",
                                                "user_email": "john.doe@example.com"
                                            }
                                        },
                                        "summary": "Create Test Profile Response"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles-external/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_external_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                },
                                "examples": {
                                    "ListTestProfiles": {
                                        "value": [
                                            {
                                                "agent": 123,
                                                "name": "<string>",
                                                "information": {
                                                    "user_name": "<string>",
                                                    "user_email": "<string>"
                                                }
                                            }
                                        ],
                                        "summary": "List Test Profiles"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_external_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            },
                            "examples": {
                                "CreateTestProfile": {
                                    "value": {
                                        "agent": 123,
                                        "name": "<string>",
                                        "information": {
                                            "user_name": "<string>",
                                            "user_email": "<string>"
                                        }
                                    },
                                    "summary": "Create Test Profile"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "CreateTestProfileResponse": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "John Doe",
                                                "user_email": "john.doe@example.com"
                                            }
                                        },
                                        "summary": "Create Test Profile Response"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "GetTestProfile": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "<string>",
                                                "user_email": "<string>"
                                            }
                                        },
                                        "summary": "Get Test Profile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            },
                            "examples": {
                                "PartialUpdateTestProfile": {
                                    "value": {
                                        "name": "<string>",
                                        "information": {
                                            "user_name": "<string>",
                                            "user_email": "<string>"
                                        }
                                    },
                                    "summary": "Partial Update Test Profile"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "PartialUpdateTestProfileResponse": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "<string>",
                                                "user_email": "<string>"
                                            }
                                        },
                                        "summary": "Partial Update Test Profile Response"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles/{id}/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "GetTestProfile": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "<string>",
                                                "user_email": "<string>"
                                            }
                                        },
                                        "summary": "Get Test Profile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            },
                            "examples": {
                                "PartialUpdateTestProfile": {
                                    "value": {
                                        "name": "<string>",
                                        "information": {
                                            "user_name": "<string>",
                                            "user_email": "<string>"
                                        }
                                    },
                                    "summary": "Partial Update Test Profile"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                },
                                "examples": {
                                    "PartialUpdateTestProfileResponse": {
                                        "value": {
                                            "id": 123,
                                            "agent": 123,
                                            "name": "<string>",
                                            "information": {
                                                "user_name": "<string>",
                                                "user_email": "<string>"
                                            }
                                        },
                                        "summary": "Partial Update Test Profile Response"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAPIKey"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_api_v1_user_api_key_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/{id}/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_api_v1_user_api_key_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_api_v1_user_api_key_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_api_v1_user_api_key_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/embedded-token-detail/": {
            "get": {
                "operationId": "user_embedded_token_detail_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/": {
            "get": {
                "operationId": "user_invites_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invite"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/": {
            "get": {
                "operationId": "user_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_invites_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_invites_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/{id}/accept_invite/": {
            "post": {
                "operationId": "user_invites_accept_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/reject_invite/": {
            "post": {
                "operationId": "user_invites_reject_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/my_invites/": {
            "get": {
                "operationId": "user_invites_my_invites_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/send_invites/": {
            "post": {
                "operationId": "user_invites_send_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/is-active/": {
            "get": {
                "operationId": "user_is_active_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/memberships/": {
            "get": {
                "operationId": "user_memberships_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserMembership"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/memberships/{id}/": {
            "get": {
                "operationId": "user_memberships_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_memberships_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_memberships_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_memberships_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/": {
            "get": {
                "operationId": "user_organizations_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_organizations_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/": {
            "get": {
                "operationId": "user_organizations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_organizations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_organizations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_organizations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/{id}/onboarding-tasks/": {
            "get": {
                "operationId": "user_organizations_onboarding_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/": {
            "get": {
                "operationId": "user_organizations_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/agents/": {
            "get": {
                "operationId": "user_organizations_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_organizations_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/name/": {
            "patch": {
                "operationId": "user_organizations_name_partial_update",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/overview/critical-categories/": {
            "get": {
                "operationId": "user_organizations_overview_critical_categories_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/": {
            "get": {
                "operationId": "user_provider_credentials_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProviderCredentialList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_provider_credentials_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/{id}/": {
            "get": {
                "operationId": "user_provider_credentials_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_provider_credentials_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_provider_credentials_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_provider_credentials_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/embedded/login/": {
            "post": {
                "operationId": "user_v1_embedded_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/embedded/refresh/": {
            "post": {
                "operationId": "user_v1_embedded_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/": {
            "get": {
                "operationId": "user_v1_projects_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/": {
            "get": {
                "operationId": "user_v1_projects_external_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_external_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/": {
            "get": {
                "operationId": "user_v1_projects_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_v1_projects_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_v1_projects_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_v1_projects_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/add_member/": {
            "post": {
                "operationId": "user_v1_projects_external_add_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_retrieve",
                "description": "Get comprehensive project overview with optimized parallel execution.\n\nReturns call statistics, agent counts, latency analysis, critical categories,\nand issues analysis with percentage changes from the previous period.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_external_remove_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/test-webhook/": {
            "post": {
                "operationId": "user_v1_projects_external_test_webhook_create",
                "description": "Test webhook endpoint that sends mock webhook data to the project's webhook URL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/members/": {
            "get": {
                "operationId": "user_v1_projects_external_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/": {
            "get": {
                "operationId": "user_v1_projects_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_v1_projects_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_v1_projects_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_v1_projects_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/projects/{id}/add_member/": {
            "post": {
                "operationId": "user_v1_projects_add_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/": {
            "get": {
                "operationId": "user_v1_projects_overview_retrieve",
                "description": "Get comprehensive project overview with optimized parallel execution.\n\nReturns call statistics, agent counts, latency analysis, critical categories,\nand issues analysis with percentage changes from the previous period.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_remove_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/test-webhook/": {
            "post": {
                "operationId": "user_v1_projects_test_webhook_create",
                "description": "Test webhook endpoint that sends mock webhook data to the project's webhook URL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/members/": {
            "get": {
                "operationId": "user_v1_projects_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/webhook/supabase/": {
            "post": {
                "operationId": "user_webhook_supabase_create",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/webpage/domain/": {
            "get": {
                "operationId": "webpage_domain_list",
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomDomainList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "webpage_domain_create",
                "description": "Create a new custom domain",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/domain/{organization}/": {
            "get": {
                "operationId": "webpage_domain_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "webpage_domain_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "webpage_domain_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "webpage_domain_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/webpage/domain/{organization}/verify/": {
            "get": {
                "operationId": "webpage_domain_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/page/": {
            "post": {
                "operationId": "webpage_page_create",
                "description": "POST method to create/update a webpage\nExpected request data:\n{\n    \"domain\": \"example.com\", # Can be full URL like https://www.example.com\n    \"html_content\": \"<html>...</html>\"\n}",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/page/{organization}/": {
            "get": {
                "operationId": "webpage_page_retrieve",
                "description": "GET method to retrieve a webpage's HTML content\npk should be the organization id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "webpage_page_destroy",
                "description": "DELETE method to remove a webpage\npk should be the organization id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/edges/": {
            "get": {
                "operationId": "workflows_edges_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Edge"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-list",
                        "description": "GET /workflows/edges/"
                    }
                }
            },
            "post": {
                "operationId": "workflows_edges_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-create",
                        "description": "POST /workflows/edges/"
                    }
                }
            }
        },
        "/workflows/edges/{id}/": {
            "get": {
                "operationId": "workflows_edges_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-retrieve",
                        "description": "GET /workflows/edges/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "workflows_edges_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-update",
                        "description": "PUT /workflows/edges/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "workflows_edges_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-partial-update",
                        "description": "PATCH /workflows/edges/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "workflows_edges_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-edges-destroy",
                        "description": "DELETE /workflows/edges/{id}/"
                    }
                }
            }
        },
        "/workflows/node-metrics/": {
            "get": {
                "operationId": "workflows_node_metrics_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-list",
                        "description": "GET /workflows/node-metrics/"
                    }
                }
            },
            "post": {
                "operationId": "workflows_node_metrics_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetricCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-create",
                        "description": "POST /workflows/node-metrics/"
                    }
                }
            }
        },
        "/workflows/node-metrics/{id}/": {
            "get": {
                "operationId": "workflows_node_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-retrieve",
                        "description": "GET /workflows/node-metrics/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "workflows_node_metrics_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-update",
                        "description": "PUT /workflows/node-metrics/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "workflows_node_metrics_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-partial-update",
                        "description": "PATCH /workflows/node-metrics/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "workflows_node_metrics_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-node-metrics-destroy",
                        "description": "DELETE /workflows/node-metrics/{id}/"
                    }
                }
            }
        },
        "/workflows/nodes/": {
            "get": {
                "operationId": "workflows_nodes_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-list",
                        "description": "GET /workflows/nodes/"
                    }
                }
            },
            "post": {
                "operationId": "workflows_nodes_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-create",
                        "description": "POST /workflows/nodes/"
                    }
                }
            }
        },
        "/workflows/nodes/{id}/": {
            "get": {
                "operationId": "workflows_nodes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-retrieve",
                        "description": "GET /workflows/nodes/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "workflows_nodes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-update",
                        "description": "PUT /workflows/nodes/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "workflows_nodes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-partial-update",
                        "description": "PATCH /workflows/nodes/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "workflows_nodes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-nodes-destroy",
                        "description": "DELETE /workflows/nodes/{id}/"
                    }
                }
            }
        },
        "/workflows/workflows/": {
            "get": {
                "operationId": "workflows_workflows_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workflow"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-list",
                        "description": "GET /workflows/workflows/"
                    }
                }
            },
            "post": {
                "operationId": "workflows_workflows_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-create",
                        "description": "POST /workflows/workflows/"
                    }
                }
            }
        },
        "/workflows/workflows/{id}/": {
            "get": {
                "operationId": "workflows_workflows_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-retrieve",
                        "description": "GET /workflows/workflows/{id}/"
                    }
                }
            },
            "put": {
                "operationId": "workflows_workflows_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-update",
                        "description": "PUT /workflows/workflows/{id}/"
                    }
                }
            },
            "patch": {
                "operationId": "workflows_workflows_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-partial-update",
                        "description": "PATCH /workflows/workflows/{id}/"
                    }
                }
            },
            "delete": {
                "operationId": "workflows_workflows_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-mint": {
                    "mcp": {
                        "enabled": true,
                        "name": "workflows-workflows-destroy",
                        "description": "DELETE /workflows/workflows/{id}/"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AIAgent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Agent ID.\nExample: `2142`"
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this agent belongs to"
                    },
                    "organization": {
                        "type": "integer",
                        "writeOnly": true,
                        "description": "The organization this agent belongs to"
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "\nA descriptive name for your agent\nExample: \n- `\"Customer Service Assistant\"`\n- `\"Sales Bot\"`\n",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "\nPhone number assigned to this agent for calls (must start with + followed by digits, min 8 chars)\nExample: `\"+1234567890\"`\n",
                        "maxLength": 30
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether this agent handles inbound calls.\n- If true, our agent will call you on above number.\n- If false, your agent will have to call our agent.\n\nExample: `true` or `false`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "\nA detailed description of what this agent does and how it should interact\nExample: \n```text\nAI agent for handling customer support inquiries and resolving technical issues\n```\n"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "default": "en",
                        "description": "\nThe primary language this agent uses for communication (e.g. 'en' for English)\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nExternal assistant service identifier (minimum 10 characters)\nExample: `\"asst_abc123xyz\"`\n",
                        "maxLength": 255
                    },
                    "chat_assistant_id": {
                        "type": "string",
                        "description": "\nChat-specific assistant service identifier (minimum 10 characters)\nExample: `\"chat_asst_abc123xyz\"`\n",
                        "maxLength": 255
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "\nWebSocket endpoint URL for real-time communication\nExample: `\"wss://api.example.com/ws\"`\n"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nHeaders to be sent to the websocket server\n"
                    },
                    "llm_system_prompt": {
                        "type": "string",
                        "description": "\nSystem prompt that defines the agent's behavior and personality\nExample: \n```text\nYou are a helpful customer service agent. Always be polite and professional.\n```\n"
                    },
                    "llm_model": {
                        "enum": [
                            "gpt-4o",
                            "gpt-4o-mini",
                            "gpt-4.1",
                            "gpt-4.1-mini",
                            "claude-3-5-sonnet-20240620"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "02d77b09852d740b",
                        "default": "gpt-4o",
                        "description": "\nThe LLM model to use for simulating user responses\n\n\n* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `gpt-4.1` - gpt-4.1\n* `gpt-4.1-mini` - gpt-4.1-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620"
                    },
                    "llm_temperature": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "\nControls randomness in responses (0.0-2.0, lower = more focused)\nExample: `0.5`\n"
                    },
                    "llm_max_tokens": {
                        "type": "integer",
                        "default": 4096,
                        "description": "\nMaximum length of simulated responses in tokens\nExample: `4096`\n"
                    },
                    "predefined_metrics": {
                        "writeOnly": true,
                        "description": "predefined metrics to use for the agent"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of knowledge base files attached to the agent\nExample: `[1, 2, 3]`\n"
                    },
                    "transcript_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "vocera",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "livekit",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bb79656d7f7c8a24",
                        "default": "vocera",
                        "description": "\nService provider for speech-to-text transcription\n\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `livekit` - Livekit\n* `custom` - Custom"
                    },
                    "assistant_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "elevenlabs",
                            "vocera",
                            "sms",
                            "self_hosted"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "1970aa91677177a3",
                        "default": "self_hosted",
                        "description": "\nService provider for the AI assistant functionality\n\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `elevenlabs` - Elevenlabs\n* `vocera` - Vocera\n* `sms` - Sms\n* `self_hosted` - Self Hosted"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "\nAPI key for VAPI service provider\nExample: `\"vapi_api_key_123\"`\n"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Retell service provider\nExample: `\"retell_api_key_123\"`\n"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "\nAPI key for ElevenLabs voice synthesis service\nExample: `\"elevenlabs_api_key_123\"`\n"
                    },
                    "bland_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Bland service provider\nExample: `\"bland_api_key_123\"`\n"
                    },
                    "livekit_api_key": {
                        "type": "string",
                        "description": "\nAPI key for LiveKit service provider\nExample: `\"livekit_api_key_123\"`\n"
                    },
                    "livekit_data": {
                        "type": "string",
                        "description": "\nLiveKit additional data (api_secret, url, and config)\n"
                    },
                    "custom_provider_api_key": {
                        "type": "string",
                        "description": "\nAPI key for custom service provider\nExample: `\"custom_api_key_123\"`\n"
                    },
                    "custom_provider_data": {
                        "type": "string",
                        "description": "\nAdditional configuration data for custom service provider\n"
                    },
                    "synthflow_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Synthflow service provider\nExample: `\"synthflow_api_key_123\"`\n"
                    },
                    "enabled_personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nPersonality profiles enabled for this agent\nExample: `[1, 2, 3]`\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the agent was created\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the agent was last updated\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    }
                }
            },
            "AIAgentTestProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "\nInformation fields for the test profile\nExample:\n```json\n{\n    \"user_name\": \"John Doe\",\n    \"user_email\": \"john.doe@example.com\",\n}\n```\n"
                    }
                }
            },
            "Billing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "text_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "non_text_runs_minutes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_logs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "num_test_cases": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "total_run_minutes": {
                        "type": "string"
                    },
                    "total_call_log_minutes": {
                        "type": "string"
                    },
                    "balance_expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "CallLogCriticalCategories": {
                "type": "object",
                "properties": {
                    "category_id": {
                        "type": "integer",
                        "description": "Category ID"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category name"
                    },
                    "deviation": {
                        "type": "number",
                        "format": "double",
                        "description": "Deviation"
                    },
                    "wrongly_marked": {
                        "type": "boolean",
                        "description": "Whether the category was wrongly marked"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "description": "Priority\n\n* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug"
                    }
                }
            },
            "CallLogDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording.\nExample: `\"https://storage.example.com/recordings/call_123_20240315.mp3\"`"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogCriticalCategories"
                        },
                        "readOnly": true,
                        "description": "Critical categories from call evaluation"
                    },
                    "transcript_object": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogTranscriptObject"
                        },
                        "readOnly": true,
                        "description": "Structured transcript data with timestamps.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"Hello\",\n        \"start_time\": 1.2,\n        \"end_time\": 1.8\n    },\n    {\n        \"role\": \"Main Agent\",\n        \"content\": \"Hello, how can I help you today?\",\n        \"start_time\": 1.8,\n        \"end_time\": 2.5\n    }\n]`"
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "description": "* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "Agent ID.\nExample: `2142`"
                    },
                    "evaluation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Evaluation"
                            }
                        ],
                        "readOnly": true,
                        "description": "Evaluation results for the call.\nExample: \n```json\n{\n    \"metrics\": [\n        {\n            \"id\": 35,\n            \"name\": \"Instruction Follow\",\n            \"type\": \"binary_workflow_adherence\",\n            \"score\": 0,\n            \"explanation\": [\"Agent failed to follow the opening script\", \"Missed key product information\"],\n            \"vocera_defined_metric_code\": \"5dedc41b\",\n            \"function_name\": \"check_critical_deviations\",\n            \"extra\": {\n                \"categories\": [\n                    {\n                        \"category_id\": 5,\n                        \"category\": \"Script Adherence Issue\",\n                        \"deviation\": \"Agent deviated from required script\",\n                        \"priority\": \"critical\"\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": 18,\n            \"name\": \"Customer Satisfaction\",\n            \"type\": \"binary_qualitative\",\n            \"score\": 5,\n            \"explanation\": [\"Customer expressed satisfaction with service\"]\n        }\n    ]\n}\n```"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Additional call metadata.\nExample: \n```json\n{\n    \"ended_reason\": \"customer-ended-call\",\n    \"ringing_duration\": 3.941,\n    \"call_type\": \"inbound\"\n}\n```"
                    },
                    "dynamic_variables": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Dynamic Variables used in the call.\nExample: \n```json\n{\n    \"customer_name\": \"John Doe\",\n    \"order_id\": \"ORD-12345\",\n    \"product_type\": \"premium\"\n}\n```"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the call occurred.\nExample: `2024-03-15T10:15:45Z`"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether the call was successful.\nExample: `true` or `false`"
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether the call has been reviewed.\nExample: `true` or `false`"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback about the call.\nExample: `\"Great Call\"`"
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "description": "Point in conversation where user disengaged.\nExample: `\"end of conversation as no queries remaining\"`",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic of the call.\nExample: \n- `\"product_inquiry\"`\n- `\"technical_support\"`\n",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "Customer's phone number or identifier.\nExample: \n- `\"+1234567890\"`\n- `\"customer_abc123\"`\n",
                        "maxLength": 100
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Manually created or corrected transcript data.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"I need help with my order\",\n        \"timestamp\": \"00:15\"\n    }\n]`"
                    },
                    "error_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Unique identifier for the call.\nExample: \n- `\"call_abc123xyz\"`\n- `\"stereo_audio_session_456\"`",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Agent ID"
                    }
                }
            },
            "CallLogList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether the call was successful.\nExample: `true` or `false`"
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether the call has been reviewed.\nExample: `true` or `false`"
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce",
                        "description": "Status of the call or conversation.\nExample: `\"completed\"` or `\"failed\"`\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback about the call.\nExample: `\"Great Call\"`"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogListSerializerMetrics"
                        },
                        "readOnly": true,
                        "description": "Metrics of the call"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 100
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "Customer's phone number or identifier.\nExample: \n- `\"+1234567890\"`\n- `\"customer_abc123\"`\n",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Agent ID"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Unique identifier for the call.\nExample: \n- `\"call_abc123xyz\"`\n- `\"stereo_audio_session_456\"`",
                        "maxLength": 100
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the call occurred.\nExample: `2024-03-15T10:15:45Z`"
                    },
                    "error_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "CallLogListSerializerMetrics": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Metric ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Metric name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Metric type"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "Evaluated metric score, Present if metrictype is not enum"
                    },
                    "enum": {
                        "type": "string",
                        "description": "Metric enum, Present if type is enum"
                    },
                    "value": {
                        "type": "string",
                        "description": "Evaluated metric value, Present if metric type is enum"
                    }
                }
            },
            "CallLogListSerializerMetricsWithExplanation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Metric ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Metric name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Metric type"
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "Evaluated metric score, Present if metrictype is not enum"
                    },
                    "enum": {
                        "type": "string",
                        "description": "Metric enum, Present if type is enum"
                    },
                    "value": {
                        "type": "string",
                        "description": "Evaluated metric value, Present if metric type is enum"
                    },
                    "explanation": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Explanation of the metric"
                        }
                    },
                    "extra": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Evaluated metric extra data"
                    }
                }
            },
            "CallLogTranscriptObject": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "Role of the message"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of the message"
                    },
                    "timestamp": {
                        "type": "number",
                        "format": "double",
                        "description": "Timestamp of the message"
                    }
                }
            },
            "CreateCallLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Unique identifier for the call.\nExample: \n- `\"call_abc123xyz\"`\n- `\"stereo_audio_session_456\"`",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID, required if assistant_id not provided\nExample: `2421`\n"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nProvider's Assistant ID, required if agent not provided\nExample: \n- `\"asst_abc123xyz\"`\n- `\"agent_xyz789\"`\n"
                    },
                    "voice_recording": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "Audio recording file of the call.\nExample: Binary data `\"recordings/call_123_20240315.mp3\"`"
                    },
                    "voice_recording_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "\nURL to call recording audio file\nExample: `\"https://storage.example.com/recordings/call_123.mp3\"`\n"
                    },
                    "transcript_type": {
                        "enum": [
                            "cekura",
                            "vocera",
                            "vapi",
                            "retell",
                            "deepgram",
                            "pipecat",
                            "livekit",
                            "elevenlabs",
                            "none-mono"
                        ],
                        "type": "string",
                        "description": "* `cekura` - cekura\n* `vocera` - vocera\n* `vapi` - vapi\n* `retell` - retell\n* `deepgram` - deepgram\n* `pipecat` - pipecat\n* `livekit` - livekit\n* `elevenlabs` - elevenlabs\n* `none-mono` - none-mono",
                        "x-spec-enum-id": "cf3e002831f464f4",
                        "writeOnly": true
                    },
                    "transcript_json": {
                        "description": "\nCall transcript in supported format (Vapi, Retell, Deepgram, ElevenLabs, Cekura)\n\nCheck the [Transcript Format](/documentation/advanced/transcript-format) documentation for more details.\n\nCekura Transcript Format Example:\n```json\n[\n   {\n      \"role\": \"Testing Agent\",\n      \"content\": \"Hello.\",\n      \"end_time\": 1.9399999,\n      \"start_time\": 1.4399999\n   },\n   {\n      \"role\": \"Main Agent\",\n      \"content\": \"Hello. I want to book appointment today. My name is John.\",\n      \"end_time\": 7.539999511718751,\n      \"start_time\": 3.1\n   },\n   {\n      \"role\": \"Testing Agent\",\n      \"content\": \"Well, I mean, sure. What time exactly are we talking about here\",\n      \"end_time\": 15.71,\n      \"start_time\": 12.01\n   },\n   {\n      \"role\": \"Main Agent\",\n      \"content\": \"6 PM.\",\n      \"end_time\": 18.269999,\n      \"start_time\": 17.609999\n   }\n]\n```\n"
                    },
                    "call_ended_reason": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nReason why the call ended\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n"
                    },
                    "customer_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nCustomer's phone number or identifier\nExample: \n- `\"+1234567890\"`\n- `\"customer_abc123\"`\n"
                    },
                    "metadata": {
                        "description": "\nAdditional call metadata\nExample:\n```json\n{\n    \"customer_id\": \"123\",\n    \"order_id\": \"ORD-12345\",\n    \"name\": \"John Doe\"\n}\n```\n"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the call occurred.\nExample: `2024-03-15T10:15:45Z`"
                    },
                    "dynamic_variables": {
                        "description": "\nDynamic variables used to replace {{variables}} in agent description.\nExample:\n```json\n{\n    \"subscription_id\": \"SUB-12345\",\n    \"product_type\": \"premium\"\n}\n```\n"
                    },
                    "feedback": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nFeedback about the call\nExample: `\"Great call\"`\n"
                    }
                },
                "required": [
                    "call_id",
                    "id"
                ]
            },
            "CreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the personality\nExample: `\"Customer Service\"`\n",
                        "maxLength": 255
                    },
                    "prompt": {
                        "type": "string",
                        "description": "\nPrompt of the personality\nExample: `\"You are a friendly and helpful customer service agent who is always willing to help\"`\n"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "\nLanguage of the personality\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "accent": {
                        "type": "string",
                        "description": "\nAccent of the personality\nExample: `\"American\"`\n",
                        "maxLength": 255
                    },
                    "background_noise": {
                        "type": "string",
                        "description": "\nBackground noise\n"
                    },
                    "voice_model": {
                        "type": "string",
                        "description": "\nVoice model name\n"
                    },
                    "voice_id": {
                        "type": "string",
                        "description": "\nVoice ID\nExample: `\"TX3LPaxmHKxFdv7VOQHJ\"`\n"
                    },
                    "interruption_level": {
                        "type": "string",
                        "description": "\nInterruption level\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "\nSpeed of the voice\n"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nProvider agent ID\nExample: `\"assistant_123\"`\n"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "\nWhether the end call is enabled\n"
                    },
                    "provider": {
                        "enum": [
                            "11labs",
                            "cartesia"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "82a968d406c39bf3",
                        "description": "\nProvider of the voice\n\n\n* `11labs` - Elevenlabs\n* `cartesia` - Cartesia"
                    }
                }
            },
            "CriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "CriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the scenario"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "description": "Priority of the Critical Metric Scenario\n\n* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "CronJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID for the cron job\nExample: `123`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob",
                        "maxLength": 255
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "\nCrontab expression for the cron job\nExample: \n- `\"0 9 * * 1-5\"`\n- `\"0 0 * * 0\"`\n",
                        "maxLength": 255
                    },
                    "timezone": {
                        "type": "string",
                        "description": "\nTimezone for the cron job\nExample: `\"America/Los_Angeles\"`\n"
                    },
                    "scenarios": {
                        "writeOnly": true,
                        "description": "\nList of scenario IDs for the cron job\nExample: `[123, 456, 789]`\n"
                    },
                    "scenario_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "\nList of scenario IDs for the cron job\nExample: `[123, 456, 789]`\n"
                    },
                    "scenarios_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioInline"
                        },
                        "readOnly": true
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags for the cron job\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "\nFrequency for the cron job\nExample: `1`\n"
                    },
                    "notify_on": {
                        "enum": [
                            "never",
                            "success",
                            "failure",
                            "both"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "d06ae6855e4121c0",
                        "description": "\nSelect when to notify \n\n\n* `never` - Never\n* `success` - Success\n* `failure` - Failure\n* `both` - Both"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the cron job was created\nExample: `2021-01-01 00:00:00`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the cron job was last updated\nExample: `2021-01-01 00:00:00`\n"
                    }
                }
            },
            "CustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "CustomDomainList": {
                "type": "object",
                "description": "Serializer for listing CustomDomain objects with limited fields",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "CustomTokenObtainPair": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string"
                    },
                    "agent_id": {
                        "type": "integer"
                    }
                }
            },
            "DiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Edge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Evaluation": {
                "type": "object",
                "properties": {
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogListSerializerMetricsWithExplanation"
                        }
                    }
                }
            },
            "ExpectedOutcome": {
                "type": "object",
                "properties": {
                    "score": {
                        "type": "number",
                        "format": "double",
                        "description": "Score of the expected outcome"
                    },
                    "explanation": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Explanation of the expected outcome"
                        }
                    },
                    "outcome_alignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OutcomeAlignment"
                        }
                    }
                }
            },
            "Invite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected",
                        "x-spec-enum-id": "4874309ac8d0a714",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "KnowledgeBaseFile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "Knowledge base file",
                        "pattern": "(?:pdf|txt|json|csv|xml|md)$"
                    },
                    "file_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL of the Knowledge file"
                    },
                    "file_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the Knowledge file"
                    },
                    "file_type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "MIME type of the Knowledge file"
                    },
                    "file_size": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Size in bytes.\nExample: `1048576`"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "MembershipInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Metric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the metric.\nExample: `\"Customer Satisfaction\"` or `\"Appointment Booking\"`\n        ",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "\nDescription of what the metric measures.\nExample: `\"Measures how satisfied customers are with the service provided\"`\n        "
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "enum_values": {
                        "description": "\nList of possible enum values for enum type metrics.\nExample: `[\"satisfied\", \"unsatisfied\"]`\n"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "\nDisplay order for the metric.\nExample: `1`\n"
                    }
                }
            },
            "MetricBasicList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the metric.\nExample: `\"Customer Satisfaction\"` or `\"Appointment Booking\"`\n        ",
                        "maxLength": 255
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "enum_values": {
                        "description": "\nList of possible enum values for enum type metrics.\nExample: `[\"satisfied\", \"unsatisfied\"]`\n"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for observability.\nExample: `true` or `false`\n        "
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for simulations.\nExample: `true` or `false`\n        "
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nPredefined function name\nExample: `\"get_latency\"` or `\"check_critical_deviations\"`\n",
                        "maxLength": 255
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "\nVocera defined metric code for the metric.\nExample: `\"7fd534f5\"`\n",
                        "maxLength": 255
                    }
                }
            },
            "MetricDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the metric.\nExample: `\"Customer Satisfaction\"` or `\"Appointment Booking\"`\n        ",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "\nDescription of what the metric measures.\nExample: `\"Measures how satisfied customers are with the service provided\"`\n        "
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "enum_values": {
                        "description": "\nList of possible enum values for enum type metrics.\nExample: `[\"satisfied\", \"unsatisfied\"]`\n"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "\nWhether this metric requires audio analysis.\nExample: `true` or `false`\n        "
                    },
                    "prompt": {
                        "type": "string",
                        "description": "\nEvaluation prompt for the metric.\nExample: `\"Evaluate customer satisfaction based on conversation\"`\n"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "\nEvaluation trigger prompt for the metric.\nExample: `\"Evaluate metric only if call ended reason is main-agent-ended-call\"`\n"
                    },
                    "priority_assignment_prompt": {
                        "type": "string",
                        "description": "\nPriority assignment prompt for the metric.\n"
                    },
                    "configuration": {
                        "description": "\nCustom configuration parameters for specific metrics if metric supports it.\nExample:\n- For Infrastructure issues\n```json\n{\n    \"infra_issues_timeout\": 10\n}\n```\n"
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Knowledge base files associated with this metric"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for observability.\nExample: `true` or `false`\n        "
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for simulations.\nExample: `true` or `false`\n        "
                    },
                    "alert_enabled": {
                        "type": "boolean",
                        "description": "\nEnable alerts for this metric when it fails.\nExample: `true` or `false`\n        "
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nPredefined function name\nExample: `\"get_latency\"` or `\"check_critical_deviations\"`\n",
                        "maxLength": 255
                    },
                    "custom_code": {
                        "type": "string",
                        "description": "\nPython custom code for the metric.\nExample:\n```python\n_resul = True\n_explanation = None\nif  \"call_end_reason\" in data and data[\"call_end_reason\"] == \"customer_satisfaction\":\n    _result = True\n    _explanation = \"Customer expressed satisfaction with service\"\n```\n"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "\nVocera defined metric code for the metric.\nExample: `\"7fd534f5\"`\n",
                        "maxLength": 255
                    },
                    "scenarios": {
                        "writeOnly": true
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricReviewDetail"
                        },
                        "readOnly": true,
                        "description": "Reviews associated with the metric"
                    }
                }
            },
            "MetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the metric.\nExample: `\"Customer Satisfaction\"` or `\"Appointment Booking\"`\n        ",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "\nDescription of what the metric measures.\nExample: `\"Measures how satisfied customers are with the service provided\"`\n        "
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nPredefined function name\nExample: `\"get_latency\"` or `\"check_critical_deviations\"`\n",
                        "maxLength": 255
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "enum_values": {
                        "description": "\nList of possible enum values for enum type metrics.\nExample: `[\"satisfied\", \"unsatisfied\"]`\n"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "\nWhether this metric requires audio analysis.\nExample: `true` or `false`\n        "
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for observability.\nExample: `true` or `false`\n        "
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "\nEnable this metric for simulations.\nExample: `true` or `false`\n        "
                    },
                    "prompt": {
                        "type": "string",
                        "description": "\nEvaluation prompt for the metric.\nExample: `\"Evaluate customer satisfaction based on conversation\"`\n"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "\nDisplay order for the metric.\nExample: `1`\n"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "\nEvaluation trigger prompt for the metric.\nExample: `\"Evaluate metric only if call ended reason is main-agent-ended-call\"`\n"
                    },
                    "priority_assignment_prompt": {
                        "type": "string",
                        "description": "\nPriority assignment prompt for the metric.\n"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "\nVocera defined metric code for the metric.\nExample: `\"7fd534f5\"`\n",
                        "maxLength": 255
                    },
                    "configuration": {
                        "description": "\nCustom configuration parameters for specific metrics if metric supports it.\nExample:\n- For Infrastructure issues\n```json\n{\n    \"infra_issues_timeout\": 10\n}\n```\n"
                    },
                    "kb_file_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of knowledge base file IDs for the metric.\nExample: `[123, 456]`\n"
                    },
                    "knowledge_base_files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseFile"
                        },
                        "readOnly": true
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "writeOnly": true
                        },
                        "writeOnly": true
                    },
                    "custom_code": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "metric_cost": {
                        "type": "number",
                        "format": "double",
                        "description": "\nMetric Cost\nExample: `0.10`\n",
                        "readOnly": true
                    }
                }
            },
            "MetricReviewDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "test_set": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TestSetInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer"
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nMetric expected value\nExample:\n- `5` or `0`\n- `one`, `two` or `three` [ enum type ]\n"
                    },
                    "actual_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nMetric actual value\nExample:\n- `5` or `0`\n- `one`, `two` or `three` [ enum type ]\n"
                    },
                    "explanation": {
                        "description": "\nMetric explanation\nExample:\n```json\n[\"Agent failed to follow the opening script\", \"Missed key product information\"]\n```\n"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "\nMetric feedback\nExample:\n- `\"Great Call\"`\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the metric review was created\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the metric review was last updated\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    }
                }
            },
            "MetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_enum_values": {
                        "readOnly": true
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nMetric expected value\nExample:\n- `5` or `0`\n- `one`, `two` or `three` [ enum type ]\n"
                    },
                    "explanation": {
                        "readOnly": true,
                        "description": "\nMetric explanation\nExample:\n```json\n[\"Agent failed to follow the opening script\", \"Missed key product information\"]\n```\n"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "\nMetric feedback\nExample:\n- `\"Great Call\"`\n"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "NodeCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metric": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "NodeInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "main_metric": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "NodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "NodeMetricCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer"
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_no_calls": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean"
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "notify_metric_significant_shift": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "syntflow_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "x-spec-enum-id": "6e7339d971185fa9"
                    },
                    "is_2fa_required": {
                        "type": "boolean"
                    },
                    "skip_onboarding": {
                        "type": "boolean"
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_refill": {
                        "type": "boolean"
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    }
                }
            },
            "OrganizationInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "OutcomeAlignment": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "type": "string",
                        "description": "Outcome of the expected outcome"
                    },
                    "prompt_part": {
                        "type": "string",
                        "description": "Prompt part of the expected outcome"
                    },
                    "aligned": {
                        "type": "boolean",
                        "description": "Whether the outcome aligns with the prompt part"
                    }
                }
            },
            "OverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Overall evaluation results across all calls.\nExample:\n```json\n{\n    \"metrics\": [\n        {\n            \"id\": 1,\n            \"name\": \"Average Response Time\",\n            \"value\": 2.8,\n            \"explanation\": [\n                \"Average response time improved by 15%\",\n                \"Peak performance during business hours\"\n            ]\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Success Rate\",\n            \"value\": 0.92,\n            \"explanation\": [\n                \"92% of calls completed successfully\",\n                \"Higher success rate in technical support\"\n            ]\n        }\n    ]\n}\n```"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Agent ID"
                    }
                }
            },
            "Pack": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "interval": {
                        "enum": [
                            "month",
                            "quarter",
                            "year"
                        ],
                        "type": "string",
                        "description": "* `month` - Monthly\n* `quarter` - Quarterly\n* `year` - Yearly",
                        "x-spec-enum-id": "493dc6126f399b59"
                    },
                    "trial_period_days": {
                        "type": "string",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "monitoring_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "premium_slack_support": {
                        "type": "boolean"
                    },
                    "custom_api_integrations": {
                        "type": "boolean"
                    },
                    "dedicated_support_engineer": {
                        "type": "boolean"
                    },
                    "sla_hours": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "custom_feature_requests": {
                        "type": "boolean"
                    },
                    "simulate_scenarios": {
                        "type": "boolean"
                    },
                    "downloadable_reports": {
                        "type": "boolean"
                    },
                    "slack_alerts": {
                        "type": "boolean"
                    },
                    "custom_sso": {
                        "type": "boolean"
                    },
                    "dedicated_cloud_instance": {
                        "type": "boolean"
                    },
                    "on_prem_deployment": {
                        "type": "boolean"
                    },
                    "multiple_organizations": {
                        "type": "boolean"
                    },
                    "hippa_compliance": {
                        "type": "boolean"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PackInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "subscription_overage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$"
                    }
                }
            },
            "PaginatedCallLogListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogList"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricCategoryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricCategory"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricScenarioList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricScenario"
                        }
                    }
                }
            },
            "PaginatedResultList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        }
                    }
                }
            },
            "PaginatedRunListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunList"
                        }
                    }
                }
            },
            "PaginatedScenarioListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioList"
                        }
                    }
                }
            },
            "PaginatedUserConfigurationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserConfiguration"
                        }
                    }
                }
            },
            "PatchedAIAgent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Agent ID.\nExample: `2142`"
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this agent belongs to"
                    },
                    "organization": {
                        "type": "integer",
                        "writeOnly": true,
                        "description": "The organization this agent belongs to"
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "\nA descriptive name for your agent\nExample: \n- `\"Customer Service Assistant\"`\n- `\"Sales Bot\"`\n",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "\nPhone number assigned to this agent for calls (must start with + followed by digits, min 8 chars)\nExample: `\"+1234567890\"`\n",
                        "maxLength": 30
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether this agent handles inbound calls.\n- If true, our agent will call you on above number.\n- If false, your agent will have to call our agent.\n\nExample: `true` or `false`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "\nA detailed description of what this agent does and how it should interact\nExample: \n```text\nAI agent for handling customer support inquiries and resolving technical issues\n```\n"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "default": "en",
                        "description": "\nThe primary language this agent uses for communication (e.g. 'en' for English)\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\nExternal assistant service identifier (minimum 10 characters)\nExample: `\"asst_abc123xyz\"`\n",
                        "maxLength": 255
                    },
                    "chat_assistant_id": {
                        "type": "string",
                        "description": "\nChat-specific assistant service identifier (minimum 10 characters)\nExample: `\"chat_asst_abc123xyz\"`\n",
                        "maxLength": 255
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "\nWebSocket endpoint URL for real-time communication\nExample: `\"wss://api.example.com/ws\"`\n"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nHeaders to be sent to the websocket server\n"
                    },
                    "llm_system_prompt": {
                        "type": "string",
                        "description": "\nSystem prompt that defines the agent's behavior and personality\nExample: \n```text\nYou are a helpful customer service agent. Always be polite and professional.\n```\n"
                    },
                    "llm_model": {
                        "enum": [
                            "gpt-4o",
                            "gpt-4o-mini",
                            "gpt-4.1",
                            "gpt-4.1-mini",
                            "claude-3-5-sonnet-20240620"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "02d77b09852d740b",
                        "default": "gpt-4o",
                        "description": "\nThe LLM model to use for simulating user responses\n\n\n* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `gpt-4.1` - gpt-4.1\n* `gpt-4.1-mini` - gpt-4.1-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620"
                    },
                    "llm_temperature": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "\nControls randomness in responses (0.0-2.0, lower = more focused)\nExample: `0.5`\n"
                    },
                    "llm_max_tokens": {
                        "type": "integer",
                        "default": 4096,
                        "description": "\nMaximum length of simulated responses in tokens\nExample: `4096`\n"
                    },
                    "predefined_metrics": {
                        "writeOnly": true,
                        "description": "predefined metrics to use for the agent"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of knowledge base files attached to the agent\nExample: `[1, 2, 3]`\n"
                    },
                    "transcript_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "vocera",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "livekit",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bb79656d7f7c8a24",
                        "default": "vocera",
                        "description": "\nService provider for speech-to-text transcription\n\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `livekit` - Livekit\n* `custom` - Custom"
                    },
                    "assistant_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "elevenlabs",
                            "vocera",
                            "sms",
                            "self_hosted"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "1970aa91677177a3",
                        "default": "self_hosted",
                        "description": "\nService provider for the AI assistant functionality\n\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `elevenlabs` - Elevenlabs\n* `vocera` - Vocera\n* `sms` - Sms\n* `self_hosted` - Self Hosted"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "\nAPI key for VAPI service provider\nExample: `\"vapi_api_key_123\"`\n"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Retell service provider\nExample: `\"retell_api_key_123\"`\n"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "\nAPI key for ElevenLabs voice synthesis service\nExample: `\"elevenlabs_api_key_123\"`\n"
                    },
                    "bland_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Bland service provider\nExample: `\"bland_api_key_123\"`\n"
                    },
                    "livekit_api_key": {
                        "type": "string",
                        "description": "\nAPI key for LiveKit service provider\nExample: `\"livekit_api_key_123\"`\n"
                    },
                    "livekit_data": {
                        "type": "string",
                        "description": "\nLiveKit additional data (api_secret, url, and config)\n"
                    },
                    "custom_provider_api_key": {
                        "type": "string",
                        "description": "\nAPI key for custom service provider\nExample: `\"custom_api_key_123\"`\n"
                    },
                    "custom_provider_data": {
                        "type": "string",
                        "description": "\nAdditional configuration data for custom service provider\n"
                    },
                    "synthflow_api_key": {
                        "type": "string",
                        "description": "\nAPI key for Synthflow service provider\nExample: `\"synthflow_api_key_123\"`\n"
                    },
                    "enabled_personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nPersonality profiles enabled for this agent\nExample: `[1, 2, 3]`\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the agent was created\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when the agent was last updated\nExample: `\"2021-01-01T00:00:00Z\"`\n"
                    }
                }
            },
            "PatchedCallLogDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording.\nExample: `\"https://storage.example.com/recordings/call_123_20240315.mp3\"`"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogCriticalCategories"
                        },
                        "readOnly": true,
                        "description": "Critical categories from call evaluation"
                    },
                    "transcript_object": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogTranscriptObject"
                        },
                        "readOnly": true,
                        "description": "Structured transcript data with timestamps.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"Hello\",\n        \"start_time\": 1.2,\n        \"end_time\": 1.8\n    },\n    {\n        \"role\": \"Main Agent\",\n        \"content\": \"Hello, how can I help you today?\",\n        \"start_time\": 1.8,\n        \"end_time\": 2.5\n    }\n]`"
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "description": "* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "Agent ID.\nExample: `2142`"
                    },
                    "evaluation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Evaluation"
                            }
                        ],
                        "readOnly": true,
                        "description": "Evaluation results for the call.\nExample: \n```json\n{\n    \"metrics\": [\n        {\n            \"id\": 35,\n            \"name\": \"Instruction Follow\",\n            \"type\": \"binary_workflow_adherence\",\n            \"score\": 0,\n            \"explanation\": [\"Agent failed to follow the opening script\", \"Missed key product information\"],\n            \"vocera_defined_metric_code\": \"5dedc41b\",\n            \"function_name\": \"check_critical_deviations\",\n            \"extra\": {\n                \"categories\": [\n                    {\n                        \"category_id\": 5,\n                        \"category\": \"Script Adherence Issue\",\n                        \"deviation\": \"Agent deviated from required script\",\n                        \"priority\": \"critical\"\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": 18,\n            \"name\": \"Customer Satisfaction\",\n            \"type\": \"binary_qualitative\",\n            \"score\": 5,\n            \"explanation\": [\"Customer expressed satisfaction with service\"]\n        }\n    ]\n}\n```"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Additional call metadata.\nExample: \n```json\n{\n    \"ended_reason\": \"customer-ended-call\",\n    \"ringing_duration\": 3.941,\n    \"call_type\": \"inbound\"\n}\n```"
                    },
                    "dynamic_variables": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Dynamic Variables used in the call.\nExample: \n```json\n{\n    \"customer_name\": \"John Doe\",\n    \"order_id\": \"ORD-12345\",\n    \"product_type\": \"premium\"\n}\n```"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the call occurred.\nExample: `2024-03-15T10:15:45Z`"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether the call was successful.\nExample: `true` or `false`"
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether the call has been reviewed.\nExample: `true` or `false`"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback about the call.\nExample: `\"Great Call\"`"
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "description": "Point in conversation where user disengaged.\nExample: `\"end of conversation as no queries remaining\"`",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic of the call.\nExample: \n- `\"product_inquiry\"`\n- `\"technical_support\"`\n",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "Customer's phone number or identifier.\nExample: \n- `\"+1234567890\"`\n- `\"customer_abc123\"`\n",
                        "maxLength": 100
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Manually created or corrected transcript data.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"I need help with my order\",\n        \"timestamp\": \"00:15\"\n    }\n]`"
                    },
                    "error_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Unique identifier for the call.\nExample: \n- `\"call_abc123xyz\"`\n- `\"stereo_audio_session_456\"`",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Agent ID"
                    }
                }
            },
            "PatchedCreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the personality\nExample: `\"Customer Service\"`\n",
                        "maxLength": 255
                    },
                    "prompt": {
                        "type": "string",
                        "description": "\nPrompt of the personality\nExample: `\"You are a friendly and helpful customer service agent who is always willing to help\"`\n"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "\nLanguage of the personality\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "accent": {
                        "type": "string",
                        "description": "\nAccent of the personality\nExample: `\"American\"`\n",
                        "maxLength": 255
                    },
                    "background_noise": {
                        "type": "string",
                        "description": "\nBackground noise\n"
                    },
                    "voice_model": {
                        "type": "string",
                        "description": "\nVoice model name\n"
                    },
                    "voice_id": {
                        "type": "string",
                        "description": "\nVoice ID\nExample: `\"TX3LPaxmHKxFdv7VOQHJ\"`\n"
                    },
                    "interruption_level": {
                        "type": "string",
                        "description": "\nInterruption level\n"
                    },
                    "speed": {
                        "type": "string",
                        "description": "\nSpeed of the voice\n"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nProvider agent ID\nExample: `\"assistant_123\"`\n"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "\nWhether the end call is enabled\n"
                    },
                    "provider": {
                        "enum": [
                            "11labs",
                            "cartesia"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "82a968d406c39bf3",
                        "description": "\nProvider of the voice\n\n\n* `11labs` - Elevenlabs\n* `cartesia` - Cartesia"
                    }
                }
            },
            "PatchedCriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "PatchedCustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "PatchedDiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "PatchedEdge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected",
                        "x-spec-enum-id": "4874309ac8d0a714",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedMetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_enum_values": {
                        "readOnly": true
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nMetric expected value\nExample:\n- `5` or `0`\n- `one`, `two` or `three` [ enum type ]\n"
                    },
                    "explanation": {
                        "readOnly": true,
                        "description": "\nMetric explanation\nExample:\n```json\n[\"Agent failed to follow the opening script\", \"Missed key product information\"]\n```\n"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "\nMetric feedback\nExample:\n- `\"Great Call\"`\n"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedNode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedNodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_no_calls": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean"
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "notify_metric_significant_shift": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "syntflow_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "x-spec-enum-id": "6e7339d971185fa9"
                    },
                    "is_2fa_required": {
                        "type": "boolean"
                    },
                    "skip_onboarding": {
                        "type": "boolean"
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_refill": {
                        "type": "boolean"
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    }
                }
            },
            "PatchedOverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Overall evaluation results across all calls.\nExample:\n```json\n{\n    \"metrics\": [\n        {\n            \"id\": 1,\n            \"name\": \"Average Response Time\",\n            \"value\": 2.8,\n            \"explanation\": [\n                \"Average response time improved by 15%\",\n                \"Peak performance during business hours\"\n            ]\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Success Rate\",\n            \"value\": 0.92,\n            \"explanation\": [\n                \"92% of calls completed successfully\",\n                \"Higher success rate in technical support\"\n            ]\n        }\n    ]\n}\n```"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Agent ID"
                    }
                }
            },
            "PatchedPhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "description": "Call service provider this phone number is associated with.\nExample: `\"vapi\"` or `\"retell\"`\n\n* `vapi` - VAPI\n* `patronus` - Patronus"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedPredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the metric.\nExample: \n- `\"Customer Satisfaction\"`\n- `\"Response Time\"`",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what the metric measures.\nExample: `\"Measures how satisfied customers are with the service provided\"`"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique code identifier for the metric"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Evaluation prompt for the metric"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true,
                        "description": "Python function name for custom metric evaluation"
                    },
                    "enum_values": {
                        "description": "List of possible enum values for enum type metrics"
                    },
                    "custom_code": {
                        "type": "string",
                        "description": "Custom evaluation code for the metric"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations.\nExample: `true` or `false`"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability.\nExample: `true` or `false`"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric.\nExample: ```json\n{\n    \n}\n```\n```"
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "readOnly": true,
                        "description": "Cost in credits for evaluating this metric.\nExample: `0.005000`"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "description": "When to trigger this metric evaluation\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt to determine when to trigger metric evaluation"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedProject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the project\nExample: `\"Default Project\"`\n"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "\nOutbound timeout in seconds\nExample: `300`\n"
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "\nMax call duration in seconds\nExample: `300`\n"
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "\nMin call duration in seconds\nExample: `30`\n"
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "\nMax messages chat runs limit\nExample: `100`\n"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "\nWebhook URL\nExample: `\"https://yourdomain.com/webhook\"`\n"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "\nWebhook secret\nExample: `\"your-webhook-secret\"`\n"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "\nEvaluate relevant metrics enabled\nExample: `true` or `false`\n"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "\nEnd call enabled\nExample: `true` or `false`\n"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "\nGenerate scenario auto assign numbers enabled\nExample: `true` or `false`\n"
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "\nEnable client side testing\nExample: `true` or `false`\n"
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "\nShould show powered by\nExample: `true` or `false`\n"
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "\nNotify on result completion\nExample: `true` or `false`\n"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "\nNotify critical workflow adherence\nExample: `true` or `false`\n"
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "\nNotify daily report\nExample: `true` or `false`\n"
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "\nNotify cron failure\nExample: `true` or `false`\n"
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "\nNotify cron success\nExample: `true` or `false`\n"
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "\nNotify infra issues\nExample: `true` or `false`\n"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "\nNotify binary workflow metrics\nExample: `true` or `false`\n"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "\nNotify latency spikes\nExample: `true` or `false`\n"
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "\nNotify no calls\nExample: `true` or `false`\n"
                    },
                    "no_calls_notify_time_period": {
                        "description": "\nConfiguration for no calls notification time periods and timeframes\nExample:\n```json\n{\n    \"time_periods\": [\n        {\n            \"start_time\": \"09:00\", \n            \"end_time\": \"17:00\", \n            \"time_frame\": 30\n        },\n        {\n            \"start_time\": \"18:00\", \n            \"end_time\": \"23:59\", \n            \"time_frame\": 60\n        }\n    ]\n}\n```\n"
                    },
                    "notify_daily_report_webhook": {
                        "type": "boolean",
                        "description": "\nNotify daily report webhook\nExample: `true` or `false`\n"
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify result webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify result webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify cronjob webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify cronjob webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify call log webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify call log webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean"
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "\nForward vapi webhook\nExample: `true` or `false`\n"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "\nForward retell webhook\nExample: `true` or `false`\n"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "\nIs send emails enabled\nExample: `true` or `false`\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "\nProject Timezone\n"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "\nVAPI API key\nExample: `\"vapi_api_key_123\"`\n"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "\nRetell API key\nExample: `\"retell_api_key_123\"`\n"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "\nSyntflow API key\nExample: `\"syntflow_api_key_123\"`\n"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "\nElevenLabs API key\nExample: `\"elevenlabs_api_key_123\"`\n"
                    },
                    "livekit_api_key": {
                        "type": "string",
                        "description": "\nLiveKit API key\nExample: `\"livekit_api_key_123\"`\n"
                    },
                    "is_deleted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "PatchedProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "livekit",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `livekit` - Livekit\n* `custom` - Custom",
                        "x-spec-enum-id": "51af6b11c88816e4"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedRequestCriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "description": "Priority of the Critical Metric Scenario\n\n* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug"
                    }
                }
            },
            "PatchedResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the result\nExample: `\"Test Result 1\"`\n",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "description": "\nCurrent status of the result\n\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "description": "\nSuccess rate of the test runs\n"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "\nWhether this test was run in text mode instead of voice mode\nExample: `true` or `false`\n"
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "runs": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nRuns\n```json\n        {\n    \"<run_id>\": {\n      \"id\": \"<integer>\",\n      \"scenario\": \"<integer>\",\n      \"expected_outcome\": {\n        \"score\": 0,\n        \"explanation\": [\n          \"❌ The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n          \"❌ The main agent did not explain the distinction between Nacogdoches Health Partners and FastTrack Express Clinic (entire call).\"\n        ],\n        \"outcome_alignments\": [\n          {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n            \"prompt_part\": \"The main agent should provide the standard greeting and emergency disclaimer, asking how they can help.\"\n          },\n          {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not explain the distinction between Nacogdoches Health Partners and FastTrack Express Clinic (entire call).\",\n            \"prompt_part\": \"The main agent should explain the distinction between Nacogdoches Health Partners (focused on comprehensive primary care and chronic conditions) and FastTrack Express Clinic (focused on acute or urgent matters).\"\n          }\n        ]\n      }\n}\n```\n",
                        "readOnly": true
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nOverall evaluation of the test runs\nExample:\n```json\n{\n    \"success_rate\": \"number\",\n    \"metric_summary\": {\n      \"metric_id\": {\n        \"id\": \"integer\",\n        \"name\": \"string\",\n        \"type\": \"string\",\n        \"score\": \"number\",\n        \"explanation\": \"string (optional)\",\n        \"function_name\": \"string\",\n        \"vocera_defined_metric_code\": \"string (optional)\",\n        \"p50\": \"number (for numeric metrics)\"\n      }\n    },\n    \"worst_performing_metrics\": {\n      \"binary_adherence\": [\n        \"array of metric_ids\"\n      ]\n    },\n    \"numeric_metrics\": [\n      {\n        \"name\": \"string\",\n        \"type\": \"numeric\",\n        \"value\": \"number\",\n        \"percentiles\": {\n          \"p50\": \"number\"\n        }\n      }\n    ],\n    \"enum_metrics\": [\n      \"array of metric_ids\"\n    ],\n    \"extra_metrics\": [\n      {\n        \"name\": \"string (e.g., 'Expected Outcome', 'Average Ringing Duration')\",\n        \"type\": \"string\",\n        \"value\": \"number\",\n        \"percentiles\": {\n          \"p50\": \"number (optional)\"\n        }\n      }\n    ]\n}\n"
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal duration of the test runs for this result\nExample: `22:30`\n"
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal number of test runs associated with this result\nExample: `10`\n"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that have completed successfully\nExample: `10`\n"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that were marked as successful\nExample: `10`\n"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that failed or encountered errors\nExample: `10`\n"
                    },
                    "scenarios": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of scenario names used in the test runs for this result\nExample: ```\n```json\n[\n    {\n        \"id\": 123,\n        \"name\": \"Scenario 1\"\n    },\n    {\n        \"id\": 456,\n        \"name\": \"Scenario 2\"\n    }\n]\n```\n"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of critical categories for this result\nExample:\n```json\n[\n    {\n      \"id\": 2950,\n      \"name\": \"Pronunciation Analysis\",\n      \"eval_type\": \"continuous_qualitative\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": true\n    },\n    {\n      \"id\": 3284,\n      \"name\": \"Latency\",\n      \"eval_type\": \"numeric\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": false\n    },\n    {\n      \"id\": 3295,\n      \"name\": \"Detect Silence in Conversation\",\n      \"eval_type\": \"binary_qualitative\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": true\n    }\n  ]\n```\n"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runs_by_tags": {
                        "type": "string",
                        "readOnly": true
                    },
                    "latency_data": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_reasons": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nFailed reasons of the test runs\nExample:\n```json\n{\n    \"issues\": [\n      {\n        \"rank\": 1,\n        \"run_ids\": [\n          34588\n        ],\n        \"description\": \"The agent did not provide the standard greeting, emergency disclaimer, or ask how they could help.\",\n        \"affected_count\": 1\n      },\n      {\n        \"rank\": 2,\n        \"run_ids\": [\n          34588\n        ],\n        \"description\": \"The agent did not explain the distinction between the primary care and express clinics.\",\n        \"affected_count\": 1\n      }\n    ],\n    \"total_failed_runs\": 1\n  }\n```\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\nTimestamp when this test result was created\nExample: `2021-01-01 00:00:00`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when this test result was last updated\nExample: `2021-01-01 00:00:00`\n"
                    }
                }
            },
            "PatchedRun": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "description": "\nCall ID from the Assistant provider\nExample: `call_abc123`\n",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "ID of the agent associated with this run"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExpectedOutcome"
                            }
                        ],
                        "readOnly": true
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "evaluation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Evaluation"
                            }
                        ],
                        "readOnly": true,
                        "description": "Run Evaluation"
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "transcript_object": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunListTranscriptObject"
                        },
                        "readOnly": true,
                        "description": "Transcript object"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true
                    },
                    "metadata": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunListCriticalCategories"
                        },
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "scenario_instructions": {
                        "type": "string"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "test_profile_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "ID of the test profile associated with this run",
                        "readOnly": true
                    },
                    "test_profile_data": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "additionalProperties": {},
                        "description": "\nInformation of the test profile\nExample:\n```json\n{\n    \"user_name\": \"John Doe\",\n    \"user_email\": \"john.doe@example.com\",\n}\n```\n",
                        "readOnly": true
                    }
                }
            },
            "PatchedSchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile"
                    }
                }
            },
            "PatchedSchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of scenario IDs to execute\nExample: `[123, 456, 789]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nAlternative to scenarios - List of tags to filter scenario\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nRequired when tags are provided\nExample: `123`\n"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "\nCron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)\nExample: \n- `\"0 9 * * 1-5\"`\n- `\"0 0 * * 0\"`\n"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "description": "\nTimezone for the cronjob (default: Project timezone)\n\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC"
                    }
                }
            },
            "PatchedSchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI"
                    }
                }
            },
            "PatchedSchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID\nExample: `2142`\n"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality of the evaluator"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Scenario Instructions"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "\nExpected Outcome Prompt\nExample: `\"The user should be able to complete the order\"`\n"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of metric IDs to associate with this evaluator\nExample: `[123, 456, 789]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags to associate with the evaluator\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for evaluator",
                        "example": [
                            "TOOL_DTMF",
                            "TOOL_END_CALL",
                            "TOOL_END_CALL_ONLY_ON_TRANSFER"
                        ]
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for the evaluator"
                    }
                }
            },
            "PatchedSlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedTestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the test set\nExample: `\"Test Set 1\"`\n",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Structured transcript data with timestamps.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"Hello\",\n        \"start_time\": 1.2,\n        \"end_time\": 1.8\n    },\n    {\n        \"role\": \"Main Agent\",\n        \"content\": \"Hello, how can I help you today?\",\n        \"start_time\": 1.8,\n        \"end_time\": 2.5\n    }\n]`"
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Audio URL"
                    },
                    "call_end_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run"
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricReviewInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "PatchedUserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserConfiguration": {
                "type": "object",
                "description": "Serializer for UserConfiguration model to handle user settings.\nSupports key-value data storage for various configuration types.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this configuration belongs to"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent this configuration belongs to"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the configuration",
                        "maxLength": 255
                    },
                    "configuration_type": {
                        "enum": [
                            "undefined",
                            "runs_overview"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bf0bea22f65083a0",
                        "description": "Type of configuration\n\n* `undefined` - Undefined\n* `runs_overview` - Runs Overview"
                    },
                    "data": {
                        "description": "Configuration data stored as key-value pairs"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "description": "Call service provider this phone number is associated with.\nExample: `\"vapi\"` or `\"retell\"`\n\n* `vapi` - VAPI\n* `patronus` - Patronus"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PhoneNumberInbound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the metric.\nExample: \n- `\"Customer Satisfaction\"`\n- `\"Response Time\"`",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what the metric measures.\nExample: `\"Measures how satisfied customers are with the service provided\"`"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique code identifier for the metric"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Evaluation prompt for the metric"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true,
                        "description": "Python function name for custom metric evaluation"
                    },
                    "enum_values": {
                        "description": "List of possible enum values for enum type metrics"
                    },
                    "custom_code": {
                        "type": "string",
                        "description": "Custom evaluation code for the metric"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations.\nExample: `true` or `false`"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability.\nExample: `true` or `false`"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric.\nExample: ```json\n{\n    \n}\n```\n```"
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "readOnly": true,
                        "description": "Cost in credits for evaluating this metric.\nExample: `0.005000`"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "description": "When to trigger this metric evaluation\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt to determine when to trigger metric evaluation"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the project\nExample: `\"Default Project\"`\n"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "\nOutbound timeout in seconds\nExample: `300`\n"
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "\nMax call duration in seconds\nExample: `300`\n"
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "\nMin call duration in seconds\nExample: `30`\n"
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "\nMax messages chat runs limit\nExample: `100`\n"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "\nWebhook URL\nExample: `\"https://yourdomain.com/webhook\"`\n"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "\nWebhook secret\nExample: `\"your-webhook-secret\"`\n"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "\nEvaluate relevant metrics enabled\nExample: `true` or `false`\n"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "\nEnd call enabled\nExample: `true` or `false`\n"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "\nGenerate scenario auto assign numbers enabled\nExample: `true` or `false`\n"
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "\nEnable client side testing\nExample: `true` or `false`\n"
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "\nShould show powered by\nExample: `true` or `false`\n"
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "\nNotify on result completion\nExample: `true` or `false`\n"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "\nNotify critical workflow adherence\nExample: `true` or `false`\n"
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "\nNotify daily report\nExample: `true` or `false`\n"
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "\nNotify cron failure\nExample: `true` or `false`\n"
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "\nNotify cron success\nExample: `true` or `false`\n"
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "\nNotify infra issues\nExample: `true` or `false`\n"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "\nNotify binary workflow metrics\nExample: `true` or `false`\n"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "\nNotify latency spikes\nExample: `true` or `false`\n"
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "\nNotify no calls\nExample: `true` or `false`\n"
                    },
                    "no_calls_notify_time_period": {
                        "description": "\nConfiguration for no calls notification time periods and timeframes\nExample:\n```json\n{\n    \"time_periods\": [\n        {\n            \"start_time\": \"09:00\", \n            \"end_time\": \"17:00\", \n            \"time_frame\": 30\n        },\n        {\n            \"start_time\": \"18:00\", \n            \"end_time\": \"23:59\", \n            \"time_frame\": 60\n        }\n    ]\n}\n```\n"
                    },
                    "notify_daily_report_webhook": {
                        "type": "boolean",
                        "description": "\nNotify daily report webhook\nExample: `true` or `false`\n"
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify result webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify result webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify cronjob webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify cronjob webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "\nNotify call log webhook failed\nExample: `true` or `false`\n"
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "\nNotify call log webhook success\nExample: `true` or `false`\n"
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean"
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "\nForward vapi webhook\nExample: `true` or `false`\n"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "\nForward retell webhook\nExample: `true` or `false`\n"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "\nIs send emails enabled\nExample: `true` or `false`\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "\nProject Timezone\n"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "\nVAPI API key\nExample: `\"vapi_api_key_123\"`\n"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "\nRetell API key\nExample: `\"retell_api_key_123\"`\n"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "\nSyntflow API key\nExample: `\"syntflow_api_key_123\"`\n"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "\nElevenLabs API key\nExample: `\"elevenlabs_api_key_123\"`\n"
                    },
                    "livekit_api_key": {
                        "type": "string",
                        "description": "\nLiveKit API key\nExample: `\"livekit_api_key_123\"`\n"
                    },
                    "is_deleted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "ProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "ProjectInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "ProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "livekit",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `livekit` - Livekit\n* `custom` - Custom",
                        "x-spec-enum-id": "51af6b11c88816e4"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "ProviderCredentialList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "livekit",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `livekit` - Livekit\n* `custom` - Custom",
                        "x-spec-enum-id": "51af6b11c88816e4"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "RerunEvaluation": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "\nAgent ID, required if assistant_id is not provided\nExample: `2142`\n"
                    },
                    "assistant_id": {
                        "type": "integer",
                        "description": "\nAssistant ID, required if agent_id is not provided\nExample: `asst_1234567890`\n"
                    },
                    "call_logs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nCall logs IDs\nExample: `[1, 2, 3]`\n"
                    }
                },
                "required": [
                    "agent_id",
                    "assistant_id",
                    "call_logs"
                ]
            },
            "Result": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "\nUnique identifier for the Result\nExample: `123`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the Result\nExample: `\"Test Result 1\"`\n",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "\nID of the AI agent that was tested\nExample: `123`\n"
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "default": "pending",
                        "description": "\nCurrent status of the result\n\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "Success rate of the test runs as a decimal (0.0 to 1.0)"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "default": false,
                        "description": "\nWhether this test was run in text mode instead of voice mode\nExample: `true` or `false`\n"
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nWhether this result was created by a scheduled cronjob\nExample: `true` or `false`\n"
                    },
                    "runs": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nList of test runs associated with this result, including run details, status, scenario information, and phone numbers used\nExample:\n```json\n{\n    \"run_id\": {\n      \"id\": \"integer\",\n      \"scenario\": \"integer\",\n      \"outbound_number\": \"string\",\n      \"expected_outcome\": {\n        \"score\": 100,\n        \"explanation\": [\n          \"✅ Positive outcome explanation with checkmark emoji\",\n          \"❌ Negative outcome explanation with X emoji\"\n        ],\n        \"outcome_alignments\": [\n          {\n            \"outcome\": \"string\",\n            \"prompt_part\": \"string\",\n            \"aligned\": \"boolean\"\n          }\n        ]\n      },\n      \"success\": \"boolean\",\n      \"evaluation\": {\n        \"metrics\": [\n          {\n            \"id\": \"integer\",\n            \"name\": \"string\",\n            \"type\": \"binary_workflow_adherence | binary_qualitative | continuous_qualitative | numeric | enum\",\n            \"score\": \"number\",\n            \"explanation\": \"string | array\",\n            \"function_name\": \"string (optional)\",\n            \"extra\": {\n              \"categories\": [\n                {\n                  \"category\": \"string\",\n                  \"deviation\": \"string (optional)\",\n                  \"priority\": \"string (optional)\"\n                }\n              ],\n              \"percentiles\": {\n                \"p50\": \"number\"\n              }\n            },\n            \"enum\": \"string (for enum type metrics only)\"\n          }\n        ]\n      },\n      \"timestamp\": \"datetime\",\n      \"executed_at\": \"datetime\",\n      \"error_message\": \"string\",\n      \"status\": \"string\",\n      \"duration\": \"string (MM:SS format)\",\n      \"scenario_name\": \"string\",\n      \"personality_name\": \"string\",\n      \"metadata\": \"object\",\n      \"inbound_number\": \"string\"\n    }\n}\n```\n",
                        "readOnly": true
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that met the expected outcome criteria\nExample: `10`\n"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal number of test runs that were evaluated for expected outcomes\nExample: `10`\n"
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal number of test runs associated with this result\nExample: `10`\n"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that have completed successfully\nExample: `10`\n"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that were marked as successful\nExample: `10`\n"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that failed or encountered errors\nExample: `10`\n"
                    },
                    "scenarios": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nList of scenario names used in the test runs for this result\nExample:\n```json\n[\n    {\n        \"id\": 123,\n        \"name\": \"Scenario 1\"\n    },\n    {\n        \"id\": 456,\n        \"name\": \"Scenario 2\"\n    }\n]\n```\n",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when this test result was created\nExample: `2021-01-01 00:00:00`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this test result was last updated"
                    }
                }
            },
            "ResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the result\nExample: `\"Test Result 1\"`\n",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "description": "\nCurrent status of the result\n\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "description": "\nSuccess rate of the test runs\n"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "\nWhether this test was run in text mode instead of voice mode\nExample: `true` or `false`\n"
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "runs": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nRuns\n```json\n        {\n    \"<run_id>\": {\n      \"id\": \"<integer>\",\n      \"scenario\": \"<integer>\",\n      \"expected_outcome\": {\n        \"score\": 0,\n        \"explanation\": [\n          \"❌ The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n          \"❌ The main agent did not explain the distinction between Nacogdoches Health Partners and FastTrack Express Clinic (entire call).\"\n        ],\n        \"outcome_alignments\": [\n          {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n            \"prompt_part\": \"The main agent should provide the standard greeting and emergency disclaimer, asking how they can help.\"\n          },\n          {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not explain the distinction between Nacogdoches Health Partners and FastTrack Express Clinic (entire call).\",\n            \"prompt_part\": \"The main agent should explain the distinction between Nacogdoches Health Partners (focused on comprehensive primary care and chronic conditions) and FastTrack Express Clinic (focused on acute or urgent matters).\"\n          }\n        ]\n      }\n}\n```\n",
                        "readOnly": true
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nOverall evaluation of the test runs\nExample:\n```json\n{\n    \"success_rate\": \"number\",\n    \"metric_summary\": {\n      \"metric_id\": {\n        \"id\": \"integer\",\n        \"name\": \"string\",\n        \"type\": \"string\",\n        \"score\": \"number\",\n        \"explanation\": \"string (optional)\",\n        \"function_name\": \"string\",\n        \"vocera_defined_metric_code\": \"string (optional)\",\n        \"p50\": \"number (for numeric metrics)\"\n      }\n    },\n    \"worst_performing_metrics\": {\n      \"binary_adherence\": [\n        \"array of metric_ids\"\n      ]\n    },\n    \"numeric_metrics\": [\n      {\n        \"name\": \"string\",\n        \"type\": \"numeric\",\n        \"value\": \"number\",\n        \"percentiles\": {\n          \"p50\": \"number\"\n        }\n      }\n    ],\n    \"enum_metrics\": [\n      \"array of metric_ids\"\n    ],\n    \"extra_metrics\": [\n      {\n        \"name\": \"string (e.g., 'Expected Outcome', 'Average Ringing Duration')\",\n        \"type\": \"string\",\n        \"value\": \"number\",\n        \"percentiles\": {\n          \"p50\": \"number (optional)\"\n        }\n      }\n    ]\n}\n"
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal duration of the test runs for this result\nExample: `22:30`\n"
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nTotal number of test runs associated with this result\nExample: `10`\n"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that have completed successfully\nExample: `10`\n"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that were marked as successful\nExample: `10`\n"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nNumber of test runs that failed or encountered errors\nExample: `10`\n"
                    },
                    "scenarios": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of scenario names used in the test runs for this result\nExample: ```\n```json\n[\n    {\n        \"id\": 123,\n        \"name\": \"Scenario 1\"\n    },\n    {\n        \"id\": 456,\n        \"name\": \"Scenario 2\"\n    }\n]\n```\n"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of critical categories for this result\nExample:\n```json\n[\n    {\n      \"id\": 2950,\n      \"name\": \"Pronunciation Analysis\",\n      \"eval_type\": \"continuous_qualitative\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": true\n    },\n    {\n      \"id\": 3284,\n      \"name\": \"Latency\",\n      \"eval_type\": \"numeric\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": false\n    },\n    {\n      \"id\": 3295,\n      \"name\": \"Detect Silence in Conversation\",\n      \"eval_type\": \"binary_qualitative\",\n      \"simulation_enabled\": true,\n      \"observability_enabled\": true\n    }\n  ]\n```\n"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runs_by_tags": {
                        "type": "string",
                        "readOnly": true
                    },
                    "latency_data": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_reasons": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nFailed reasons of the test runs\nExample:\n```json\n{\n    \"issues\": [\n      {\n        \"rank\": 1,\n        \"run_ids\": [\n          34588\n        ],\n        \"description\": \"The agent did not provide the standard greeting, emergency disclaimer, or ask how they could help.\",\n        \"affected_count\": 1\n      },\n      {\n        \"rank\": 2,\n        \"run_ids\": [\n          34588\n        ],\n        \"description\": \"The agent did not explain the distinction between the primary care and express clinics.\",\n        \"affected_count\": 1\n      }\n    ],\n    \"total_failed_runs\": 1\n  }\n```\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\nTimestamp when this test result was created\nExample: `2021-01-01 00:00:00`\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "\nTimestamp when this test result was last updated\nExample: `2021-01-01 00:00:00`\n"
                    }
                }
            },
            "Run": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "description": "\nCall ID from the Assistant provider\nExample: `call_abc123`\n",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "ID of the agent associated with this run"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExpectedOutcome"
                            }
                        ],
                        "readOnly": true
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "evaluation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Evaluation"
                            }
                        ],
                        "readOnly": true,
                        "description": "Run Evaluation"
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "transcript_object": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunListTranscriptObject"
                        },
                        "readOnly": true,
                        "description": "Transcript object"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true
                    },
                    "metadata": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunListCriticalCategories"
                        },
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "scenario_instructions": {
                        "type": "string"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "test_profile_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "ID of the test profile associated with this run",
                        "readOnly": true
                    },
                    "test_profile_data": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "additionalProperties": {},
                        "description": "\nInformation of the test profile\nExample:\n```json\n{\n    \"user_name\": \"John Doe\",\n    \"user_email\": \"john.doe@example.com\",\n}\n```\n",
                        "readOnly": true
                    }
                }
            },
            "RunList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "description": "\nCall ID from the Assistant provider\nExample: `call_abc123`\n",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a"
                    },
                    "expected_outcome": {
                        "description": "\nExpected outcome of the run\nExample:\n```json\n{\n    \"score\": 100,\n    \"explanation\": [\n        \"❌ The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n    ],\n    \"outcome_alignments\": [\n        {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not provide the standard greeting, emergency disclaimer, or ask how they can help (00:21).\",\n            \"prompt_part\": \"The main agent should provide the standard greeting and emergency disclaimer, asking how they can help.\"\n        },\n        {\n            \"aligned\": false,\n            \"outcome\": \"The main agent did not explain the distinction between Nacogdoches Health Partners and FastTrack Express Clinic (entire call).\",\n            \"prompt_part\": \"The main agent should explain the distinction between Nacogdoches Health Partners (focused on comprehensive primary care and chronic conditions) and FastTrack Express Clinic (focused on acute or urgent matters).\"\n        }\n    ]\n}\n```\n"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "metadata": {},
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "RunListCriticalCategories": {
                "type": "object",
                "properties": {
                    "category_id": {
                        "type": "integer",
                        "description": "Category ID"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category name"
                    },
                    "deviation": {
                        "type": "number",
                        "format": "double",
                        "description": "Deviation"
                    },
                    "wrongly_marked": {
                        "type": "boolean",
                        "description": "Whether the category was wrongly marked"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "description": "Priority\n\n* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug"
                    }
                }
            },
            "RunListTranscriptObject": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "Role of the message"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of the message"
                    },
                    "timestamp": {
                        "type": "number",
                        "format": "double",
                        "description": "Timestamp of the message"
                    }
                }
            },
            "RunScenariosWithWebsockets": {
                "type": "object",
                "properties": {
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioWithWebsocket"
                        },
                        "description": "Scenarios with Websocket url"
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Frequency to run"
                    }
                },
                "required": [
                    "frequency",
                    "scenarios"
                ]
            },
            "Scenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID\nExample: `2142`\n"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "\nPersonality ID\nExample: `123`\n"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nName of the personality used in this scenario\nExample: `\"Normal Male\"`\n"
                    },
                    "tags": {
                        "description": "\nTags associated with the scenario\nExample: `[\"tag1\", \"tag2\"]`\n"
                    },
                    "tool_ids": {
                        "description": "\nList of tool IDs to associate with this scenario\nExample: `[\"TOOL_DTMF\", \"TOOL_END_CALL\"]`\n"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of IDs for the last run of this scenario\nExample: `[123, 456]`\n"
                    },
                    "metrics": {
                        "writeOnly": true,
                        "description": "\nList of metric IDs to associate with this scenario\nExample: `[123, 456]`\n"
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of metric names associated with this scenario\nExample: `[\"Metric 1\", \"Metric 2\"]`\n"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nPhone number used for outbound calls in this scenario\nExample: `\"+1234567890\"`\n"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message to be sent to the Main Agent",
                        "maxLength": 1000
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nPhone number used for inbound calls in this scenario\nExample: `\"+1234567890\"`\n"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Scenario Instructions"
                    },
                    "simulation_description": {
                        "type": "string",
                        "description": "Simulation Description"
                    },
                    "information_fields": {
                        "description": "\nInformation fields associated with the scenario\nExample: `{\"user_name\": \"John Doe\", \"user_email\": \"john.doe@example.com\", \"order_id\": \"1234567890\"}`\n"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "\nExpected Outcome Prompt\nExample: `\"The user should be able to complete the order\"`\n"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "\nLanguage of the scenario\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nDetails of the test profile associated with this scenario\nExample: \n```json\n{\n    \"id\": \"<integer>\",\n    \"agent_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"information\": {\n        \"user_name\": \"<string>\",\n        \"user_email\": \"<string>\",\n        \"order_id\": \"<string>\",\n    },\n}\n```\n"
                    }
                }
            },
            "ScenarioInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ScenarioInstructionsRequest": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer"
                    },
                    "extra_instructions": {
                        "type": "string"
                    },
                    "current_instructions": {
                        "type": "string"
                    }
                },
                "required": [
                    "agent",
                    "extra_instructions"
                ]
            },
            "ScenarioInstructionsResponse": {
                "type": "object",
                "properties": {
                    "instructions": {
                        "type": "string"
                    },
                    "expected_outcome_prompt": {
                        "type": "string"
                    }
                }
            },
            "ScenarioList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "\nUnique identifier for the AI agent\nExample: `123`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the personality used in this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nName of the personality used in this scenario\nExample: `\"Normal Male\"`\n"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nExpected outcome prompt for the scenario\nExample: `\"The user should be able to complete the order\"`\n"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Detailed instructions that guide the AI agent's behavior in this scenario"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi",
                            null
                        ],
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language code for the scenario (ISO language code)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "tags": {
                        "description": "\nList of tags associated with this scenario for categorization\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Foreign key reference to the AI agent that owns this scenario"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the phone number used for inbound calls"
                    },
                    "inbound_phone_number_data": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of metrics associated with this scenario for evaluation"
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "\nList of metric names associated with this scenario\nExample: `[\"Metric 1\", \"Metric 2\", \"Metric 3\"]`\n"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "The initial message that the AI agent will send when the scenario starts",
                        "maxLength": 1000
                    },
                    "tool_ids": {
                        "description": "\nList of tool IDs that are available for use in this scenario\nExample: `[\"TOOL_DTML\", \"TOOL_END_CALL\"]`\n"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "\nTest profile ID\nExample: `123`\n"
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nDetails of the test profile associated with this scenario\nExample:\n```json\n{\n    \"id\": '<,\n    \"agent\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"information\": {\n        \"user_name\": \"John Doe\",\n        \"user_email\": \"john.doe@example.com\",\n    }\n}\n```\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was last updated"
                    }
                }
            },
            "ScenarioWithWebsocket": {
                "type": "object",
                "properties": {
                    "scenario": {
                        "type": "integer"
                    },
                    "websocket_url": {
                        "type": "string"
                    }
                },
                "required": [
                    "scenario"
                ]
            },
            "SchemaCreateShareableLinkTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Unique token identifier for the shareable link, used for authentication and access control"
                    },
                    "shareable_link": {
                        "type": "string",
                        "description": "Complete URL for the shareable link that can be distributed to external users"
                    },
                    "custom_link": {
                        "type": "string",
                        "description": "Customized branded URL for the shareable link with organization-specific branding"
                    },
                    "custom_domain": {
                        "type": "boolean",
                        "description": "Whether the organization has whitelabel custom domain enabled for branded links"
                    }
                }
            },
            "SchemaGenerateMetricsMetricCreate": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the AI agent to generate metrics for, either agent_id or assistant_id must be provided"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID to generate metrics for, either agent_id or assistant_id must be provided"
                    },
                    "num_metrics": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 1,
                        "description": "Number of metrics to generate"
                    }
                },
                "required": [
                    "agent_id",
                    "assistant_id"
                ]
            },
            "SchemaGenerateScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "ID of the agent to generate evaluator for"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Alternative to agent_id - the assistant ID to generate evaluators for"
                    },
                    "personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to use for generated evaluators"
                    },
                    "num_scenarios": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Number of evaluators to generate (1-100)"
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "ID of the test profile to assign to generated evaluators"
                    },
                    "scenario_type": {
                        "enum": [
                            "happy",
                            "sad",
                            "toxicity",
                            "bias",
                            "jailbreak",
                            "hallucination",
                            null
                        ],
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-spec-enum-id": "85704d81b5484593",
                        "description": "Type of scenarios to generate: happy path, sad path, toxicity, bias, jailbreak, or hallucination\n\n* `happy` - happy\n* `sad` - sad\n* `toxicity` - toxicity\n* `bias` - bias\n* `jailbreak` - jailbreak\n* `hallucination` - hallucination"
                    },
                    "extra_instructions": {
                        "type": "string",
                        "description": "Additional instructions to guide evaluator generation"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Phone number ID to use for inbound evaluator"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "Initial message to start the conversation",
                        "maxLength": 1000
                    },
                    "generate_expected_outcomes": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, expected outcomes will be generated for each evaluator"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to apply to all generated scenarios"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for generated evaluators",
                        "example": [
                            "TOOL_DTMF",
                            "TOOL_END_CALL",
                            "TOOL_END_CALL_ONLY_ON_TRANSFER"
                        ]
                    }
                },
                "required": [
                    "num_scenarios"
                ]
            },
            "SchemaPipecatScenario": {
                "type": "object",
                "description": "Schema for individual scenario configuration in Pipecat WebRTC runs.",
                "properties": {
                    "scenario": {
                        "type": "integer",
                        "description": "ID of the scenario to run"
                    },
                    "pipecat_room_url": {
                        "type": "string",
                        "description": "Pipecat WebRTC room URL to connect to"
                    },
                    "pipecat_token": {
                        "type": "string",
                        "description": "Authentication token for the Pipecat room (optional)"
                    },
                    "publish_data_message": {
                        "description": "Optional JSON data message to publish during the session"
                    }
                },
                "required": [
                    "pipecat_room_url",
                    "scenario"
                ]
            },
            "SchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile"
                    }
                },
                "required": [
                    "agent",
                    "name"
                ]
            },
            "SchemaPostCopyAgent": {
                "type": "object",
                "properties": {
                    "copy_scenarios": {
                        "type": "boolean",
                        "description": "\nIf true, scenarios will be copied\nExample: `true` or `fase`\n"
                    }
                }
            },
            "SchemaPostCreateShareableLinkToken": {
                "type": "object",
                "properties": {
                    "expire_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Optional expiration date/time for the token (ISO 8601 format)"
                    }
                }
            },
            "SchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of scenario IDs to execute\nExample: `[123, 456, 789]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nAlternative to scenarios - List of tags to filter scenario\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nRequired when tags are provided\nExample: `123`\n"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "\nCron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)\nExample: \n- `\"0 9 * * 1-5\"`\n- `\"0 0 * * 0\"`\n"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "description": "\nTimezone for the cronjob (default: Project timezone)\n\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC"
                    }
                },
                "required": [
                    "crontab_expression"
                ]
            },
            "SchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI"
                    }
                },
                "required": [
                    "assistant_id",
                    "audio_enabled",
                    "description",
                    "display_order",
                    "enum_values",
                    "eval_type",
                    "name",
                    "prompt",
                    "type"
                ]
            },
            "SchemaPostMetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what the metric evaluates"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "description": "Type of evaluation (e.g., boolean, enum, score)\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether audio evaluation is enabled for this metric"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "84eea6139237739a",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)\n\n* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "description": "The evaluation trigger used for this metric\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "The evaluation trigger prompt used for this metric"
                    }
                },
                "required": [
                    "agent",
                    "description",
                    "eval_type",
                    "name"
                ]
            },
            "SchemaPostReRunResultDetail": {
                "type": "object",
                "properties": {
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of run IDs",
                        "minItems": 1
                    },
                    "metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of metric IDs to evaluate",
                        "minItems": 1
                    }
                },
                "required": [
                    "metric_ids",
                    "run_ids"
                ]
            },
            "SchemaPostRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Prompt to improve"
                    },
                    "category_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of category IDs"
                    },
                    "workflow_metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of workflow metric IDs"
                    },
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of run IDs to analyze (max 3)",
                        "maxItems": 3
                    }
                },
                "required": [
                    "prompt",
                    "run_ids"
                ]
            },
            "SchemaPostRunScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent this evaluator is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of evaluator IDs to run. Either evaluators or tags must be provided.\nExample: `[11, 22, 33]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags to filter evaluators to run. Either evaluators or tags must be provided.\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "\nThe number of times each evaluator will run\nExample: `1`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for result"
                    },
                    "outbound_phone_number": {
                        "type": "string",
                        "description": "\nOverride the phone number to use for outbound calls.\nExample: \"+1234567890\"\n"
                    },
                    "personality_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of personality IDs to override for this run. If not provided, uses the scenario's default personality.\nExample: `[123, 456, 789]`\n"
                    },
                    "test_profile_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of test profile IDs to override for this run. If not provided, uses the scenario's default test profile.\nExample: `[123, 456, 789]`\n"
                    },
                    "mode": {
                        "enum": [
                            "same_number",
                            "different_numbers"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "9ea0c9743bd9d873",
                        "default": "same_number",
                        "description": "Using same or different phone numbers for each evaluation\n\n* `same_number` - same_number\n* `different_numbers` - different_numbers"
                    }
                }
            },
            "SchemaPostRunScenariosPipecat": {
                "type": "object",
                "description": "Schema for the run_scenarios_pipecat endpoint, which runs scenarios using Pipecat WebRTC.",
                "properties": {
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SchemaPipecatScenario"
                        },
                        "description": "List of scenarios to run with their Pipecat WebRTC configuration"
                    }
                },
                "required": [
                    "scenarios"
                ]
            },
            "SchemaPostRunScenariosText": {
                "type": "object",
                "description": "Schema for the run_scenarios_text endpoint, which runs scenarios in text mode.",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent this evaluator is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for result"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of evaluator IDs to run. Either evaluators or tags must be provided.\nExample: `[11, 22, 33]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags to filter evaluators to run. Either evaluators or tags must be provided.\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "\nThe number of times each evaluator will run\nExample: `1`\n"
                    },
                    "websocket_url": {
                        "type": "string"
                    },
                    "personality_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to override for this run. If not provided, uses the scenario's default personality."
                    },
                    "test_profile_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of test profile IDs to override for this run. If not provided, uses the scenario's default test profile."
                    }
                }
            },
            "SchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID\nExample: `2142`\n"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality of the evaluator"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Scenario Instructions"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "\nExpected Outcome Prompt\nExample: `\"The user should be able to complete the order\"`\n"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of metric IDs to associate with this evaluator\nExample: `[123, 456, 789]`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags to associate with the evaluator\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for evaluator",
                        "example": [
                            "TOOL_DTMF",
                            "TOOL_END_CALL",
                            "TOOL_END_CALL_ONLY_ON_TRANSFER"
                        ]
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for the evaluator"
                    }
                },
                "required": [
                    "personality"
                ]
            },
            "SchemaPostSimulateScenario": {
                "type": "object",
                "properties": {
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality to use in the simulation"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent to use in the simulation"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Assistant ID to use in the simulation"
                    },
                    "transcript_json": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogTranscriptObject"
                        },
                        "description": "JSON representation of the conversation transcript"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the simulated scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of the scenario"
                    }
                },
                "required": [
                    "transcript_json"
                ]
            },
            "SchemaResponseRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "improved_prompt": {
                        "type": "string",
                        "description": "Improved prompt for the AI agent"
                    },
                    "summary_of_changes": {
                        "type": "string",
                        "description": "Summary of changes made to the prompt"
                    }
                }
            },
            "SchemaScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the evaluator"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "\nAgent ID\nExample: `2142`\n"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "\nAlternative to agent ID - the assistant ID to use for this scenario\nExample: `\"asst_1234567890\"`\n"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality"
                    },
                    "personality_name": {
                        "type": "string",
                        "description": "Name of the personality"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of tags of the evaluators\nExample: `[\"tag1\", \"tag2\", \"tag3\"]`\n"
                    },
                    "tool_ids": {
                        "description": "\nList of tool IDs to associate with this scenario\nExample: `[\"TOOL_DTMF\", \"TOOL_END_CALL\"]`\n"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of run IDs\nExample: `[123, 456, 789]`\n"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "\nList of metric IDs\nExample: `[123, 456, 789]`\n"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\nList of metric names\nExample: `[\"Metric 1\", \"Metric 2\", \"Metric 3\"]`\n"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number eg: +17776666333"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message of the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nPhone number used for inbound calls in this scenario\nExample: `\"+1234567890\"`\n"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions of the evaluator"
                    },
                    "simulation_description": {
                        "type": "string",
                        "description": "Simulation Description"
                    },
                    "information_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "\nInformation fields of the evaluator\nExample:\n```json\n{\n    \"user_name\": \"John Doe\",\n    \"user_email\": \"john.doe@example.com\",\n}\n```\n"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "\nExpected outcome prompt of the evaluator\nExample: `\"The user should be able to complete the order\"`\n"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "\nLanguage of the scenario\n\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "\nDetails of the test profile associated with this scenario\nExample: \n```json\n{\n    \"id\": \"<integer>\",\n    \"agent_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"information\": {\n        \"user_name\": \"<string>\",\n        \"user_email\": \"<string>\",\n        \"order_id\": \"<string>\",\n    },\n}\n```\n"
                    }
                }
            },
            "SlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "stripe_subscription_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_trial": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pack": {
                        "$ref": "#/components/schemas/PackInline"
                    },
                    "last_payment_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "TestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the test set\nExample: `\"Test Set 1\"`\n",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Structured transcript data with timestamps.\nExample: \n```json\n[\n    {\n        \"role\": \"Testing Agent\",\n        \"content\": \"Hello\",\n        \"start_time\": 1.2,\n        \"end_time\": 1.8\n    },\n    {\n        \"role\": \"Main Agent\",\n        \"content\": \"Hello, how can I help you today?\",\n        \"start_time\": 1.8,\n        \"end_time\": 2.5\n    }\n]`"
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Audio URL"
                    },
                    "call_end_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run"
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricReviewInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "TestSetInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the test set\nExample: `\"Test Set 1\"`\n",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Full text transcript of the call.\nExample: \n```text\n[00:01] Testing Agent: Hello. \n[00:02] Main Agent: Hello, how can I help you today?\n[00:03] Testing Agent: Well, I mean, sure. What time exactly are we talking about here\n[00:04] Main Agent: 6 PM.\n[00:05] Testing Agent: Great. I'll book that for you. Just a sec.\n[00:06] Main Agent: Okay.\n```\n"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_end_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string"
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run"
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "TestSetList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "\nName of the test set\nExample: `\"Test Set 1\"`\n",
                        "maxLength": 255
                    },
                    "transcript_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_end_reason": {
                        "type": "string",
                        "description": "Reason why the call ended.\nExample: \n- `\"customer-ended-call\"`\n- `\"agent-ended-call\"`\n",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string",
                        "description": "Call duration in minutes in MM:SS format.\nExample: `01:10`"
                    },
                    "has_recording": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether the test set has a voice recording"
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run",
                            ""
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac"
                    },
                    "source_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was created.\nExample: `2024-03-15T10:30:45Z`"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this record was last updated.\nExample: `2024-03-15T10:35:11Z`"
                    }
                }
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                }
            },
            "UserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "UserConfiguration": {
                "type": "object",
                "description": "Serializer for UserConfiguration model to handle user settings.\nSupports key-value data storage for various configuration types.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this configuration belongs to"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent this configuration belongs to"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the configuration",
                        "maxLength": 255
                    },
                    "configuration_type": {
                        "enum": [
                            "undefined",
                            "runs_overview"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bf0bea22f65083a0",
                        "description": "Type of configuration\n\n* `undefined` - Undefined\n* `runs_overview` - Runs Overview"
                    },
                    "data": {
                        "description": "Configuration data stored as key-value pairs"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "UserInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    }
                }
            },
            "UserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Workflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "WorkflowDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeInline"
                        },
                        "readOnly": true
                    },
                    "edges": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "X-CEKURA-API-KEY",
                "in": "header",
                "description": "API Key Authentication. It should be included in the header of each request."
            }
        }
    },
    "servers": [
        {
            "url": "https://api.cekura.ai"
        }
    ],
    "x-mint": {
        "mcp": {
            "enabled": true
        }
    }
}