{
    "openapi": "3.1.0",
    "info": {
        "title": "Vocera AI API",
        "version": "v1",
        "description": "Complete API documentation for Vocera AI Platform. This API provides endpoints for managing AI-powered conversations, call analytics, and quality monitoring features."
    },
    "paths": {
        "/a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7/run/": {
            "get": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_retrieve",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_create",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/discord/servers/": {
            "get": {
                "operationId": "discord_servers_list",
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DiscordServer"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "discord_servers_create",
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/enums/": {
            "get": {
                "operationId": "enums_retrieve",
                "tags": [
                    "enums"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/call-logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_list",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "Filter by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "completed"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "+1234567890"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string",
                            "example": "+1234567890"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "call_abc123xyz"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        },
                        "description": "Filter results from this timestamp (e.g. 2025-01-01T00:00:00Z)"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        },
                        "description": "Filter results to this timestamp (e.g. 2025-01-31T23:59:59Z)"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 123
                        },
                        "description": "Comma-separated list of call log IDs (e.g., 1,2,3)"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 42
                        },
                        "description": "Filter by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z,2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogV2List"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/?timestamp__gte=2024-01-01T00%3A00%3A00Z&timestamp__lte=2024-12-31T23%3A59%3A59Z&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "observability_v1_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_list",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "Filter by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "completed"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "+1234567890"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string",
                            "example": "+1234567890"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "call_abc123xyz"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        },
                        "description": "Filter results from this timestamp (e.g. 2025-01-01T00:00:00Z)"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        },
                        "description": "Filter results to this timestamp (e.g. 2025-01-31T23:59:59Z)"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 123
                        },
                        "description": "Comma-separated list of call log IDs (e.g., 1,2,3)"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 42
                        },
                        "description": "Filter by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z,2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogV2List"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/?timestamp__gte=2024-01-01T00%3A00%3A00Z&timestamp__lte=2024-12-31T23%3A59%3A59Z&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "observability_v1_call_logs_external_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_call_logs_external_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "observability_v1_call_logs_external_partial_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "observability_v1_call_logs_external_destroy",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs-external/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenarios_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_delete_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_evaluate_metrics_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_export_call_logs_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_call_id_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_customer_number_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_issues_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_rerun_evaluation_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "completed"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "+1234567890"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string",
                            "example": "+1234567890"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "call_abc123xyz"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z,2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/rerun_evaluation/?timestamp__gte=2024-01-01T00%3A00%3A00Z&timestamp__lte=2024-12-31T23%3A59%3A59Z&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenarios_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_delete_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_evaluate_metrics_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_export_call_logs_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_call_id_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_customer_number_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_issues_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_rerun_evaluation_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "completed"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "+1234567890"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string",
                            "example": "+1234567890"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": "call_abc123xyz"
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z,2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/rerun_evaluation/?timestamp__gte=2024-01-01T00%3A00%3A00Z&timestamp__lte=2024-12-31T23%3A59%3A59Z&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/elevenlabs/observe/": {
            "post": {
                "operationId": "observability_v1_elevenlabs_observe_create",
                "description": "Handle incoming ElevenLabs webhook requests.\n\nThis endpoint processes webhook requests from the ElevenLabs service, validates the request data,\nand creates a call log entry based on the received data. ElevenLabs sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/observe/": {
            "post": {
                "operationId": "observability_v1_observe_create",
                "description": "Create a new call log entry.\n\nThis endpoint allows users to create a call log by providing necessary data in the request body.\nRequires a valid API key in the headers.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            },
                            "examples": {
                                "SendCallLogExample": {
                                    "value": {
                                        "call_id": "call_abc123xyz",
                                        "agent": 42,
                                        "assistant_id": "asst_xyz789",
                                        "voice_recording_url": "https://example.com/recordings/call_abc123.mp3",
                                        "transcript_type": "cekura",
                                        "transcript_json": [
                                            {
                                                "role": "Main Agent",
                                                "content": "Hello! Thank you for calling Acme Corp. How can I help you today?",
                                                "time": "00:00",
                                                "start_time": 0.0,
                                                "end_time": 3.5
                                            },
                                            {
                                                "role": "Testing Agent",
                                                "content": "Hi, I'd like to schedule an appointment for next week.",
                                                "time": "00:04",
                                                "start_time": 4.2,
                                                "end_time": 7.8
                                            }
                                        ],
                                        "call_ended_reason": "customer_hung_up",
                                        "customer_number": "+14155552671",
                                        "metadata": {
                                            "customer_id": "cust_123",
                                            "campaign": "spring_2025"
                                        },
                                        "timestamp": "2025-01-15T14:30:00Z",
                                        "dynamic_variables": {
                                            "customer_name": "John Smith",
                                            "store_location": "Downtown"
                                        }
                                    },
                                    "summary": "Send Call Log Example"
                                }
                            },
                            "example": {
                                "call_id": "call_abc123xyz",
                                "agent": 42,
                                "assistant_id": "asst_xyz789",
                                "voice_recording_url": "https://example.com/recordings/call_abc123.mp3",
                                "transcript_type": "cekura",
                                "transcript_json": [
                                    {
                                        "role": "Main Agent",
                                        "content": "Hello! Thank you for calling Acme Corp. How can I help you today?",
                                        "time": "00:00",
                                        "start_time": 0.0,
                                        "end_time": 3.5
                                    },
                                    {
                                        "role": "Testing Agent",
                                        "content": "Hi, I'd like to schedule an appointment for next week.",
                                        "time": "00:04",
                                        "start_time": 4.2,
                                        "end_time": 7.8
                                    }
                                ],
                                "call_ended_reason": "customer_hung_up",
                                "customer_number": "+14155552671",
                                "metadata": {
                                    "customer_id": "cust_123",
                                    "campaign": "spring_2025"
                                },
                                "timestamp": "2025-01-15T14:30:00Z",
                                "dynamic_variables": {
                                    "customer_name": "John Smith",
                                    "store_location": "Downtown"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            },
                            "example": {
                                "call_id": "call_abc123xyz",
                                "agent": 42,
                                "assistant_id": "asst_xyz789",
                                "voice_recording_url": "https://example.com/recordings/call_abc123.mp3",
                                "transcript_type": "cekura",
                                "transcript_json": [
                                    {
                                        "role": "Main Agent",
                                        "content": "Hello! Thank you for calling Acme Corp. How can I help you today?",
                                        "time": "00:00",
                                        "start_time": 0.0,
                                        "end_time": 3.5
                                    },
                                    {
                                        "role": "Testing Agent",
                                        "content": "Hi, I'd like to schedule an appointment for next week.",
                                        "time": "00:04",
                                        "start_time": 4.2,
                                        "end_time": 7.8
                                    }
                                ],
                                "call_ended_reason": "customer_hung_up",
                                "customer_number": "+14155552671",
                                "metadata": {
                                    "customer_id": "cust_123",
                                    "campaign": "spring_2025"
                                },
                                "timestamp": "2025-01-15T14:30:00Z",
                                "dynamic_variables": {
                                    "customer_name": "John Smith",
                                    "store_location": "Downtown"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            },
                            "example": {
                                "call_id": "call_abc123xyz",
                                "agent": 42,
                                "assistant_id": "asst_xyz789",
                                "voice_recording_url": "https://example.com/recordings/call_abc123.mp3",
                                "transcript_type": "cekura",
                                "transcript_json": [
                                    {
                                        "role": "Main Agent",
                                        "content": "Hello! Thank you for calling Acme Corp. How can I help you today?",
                                        "time": "00:00",
                                        "start_time": 0.0,
                                        "end_time": 3.5
                                    },
                                    {
                                        "role": "Testing Agent",
                                        "content": "Hi, I'd like to schedule an appointment for next week.",
                                        "time": "00:04",
                                        "start_time": 4.2,
                                        "end_time": 7.8
                                    }
                                ],
                                "call_ended_reason": "customer_hung_up",
                                "customer_number": "+14155552671",
                                "metadata": {
                                    "customer_id": "cust_123",
                                    "campaign": "spring_2025"
                                },
                                "timestamp": "2025-01-15T14:30:00Z",
                                "dynamic_variables": {
                                    "customer_name": "John Smith",
                                    "store_location": "Downtown"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_list",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OverallEvaluation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_overall_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_overall_evaluation_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/overall_evaluation/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "observability_v1_overall_evaluation_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/overall_evaluation/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "observability_v1_overall_evaluation_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/overall_evaluation/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/overall_evaluation/generate_overall_summary/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_generate_overall_summary_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/realtime/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_realtime_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "Filter by agent",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_start_time"
                        },
                        "description": "Start time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_end_time"
                        },
                        "description": "End time"
                    },
                    {
                        "in": "query",
                        "name": "aggregation_period",
                        "schema": {
                            "enum": [
                                "hour",
                                "day",
                                "week"
                            ],
                            "type": "string",
                            "x-spec-enum-id": "70a362aa6ae6ba48",
                            "default": "day",
                            "minLength": 1,
                            "example": "example_aggregation_period"
                        },
                        "description": "Aggregation period\n\n* `hour` - Hour\n* `day` - Day\n* `week` - Week"
                    },
                    {
                        "in": "query",
                        "name": "category_id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Filter by category"
                    },
                    {
                        "in": "query",
                        "name": "issue_type",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "example_issue_type"
                        },
                        "description": "when category_id is provided, options are 'new_issues', 'continued_issues', 'new_agents' or empty"
                    },
                    {
                        "in": "query",
                        "name": "metric_id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Filter by metric"
                    },
                    {
                        "in": "query",
                        "name": "topic",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "example_topic"
                        },
                        "description": "Filter by topic"
                    },
                    {
                        "in": "query",
                        "name": "dropoff_point",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "example_dropoff_point"
                        },
                        "description": "Filter by dropoff point"
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/overall_evaluation/realtime/?agent_id=42&start_time=example_start_time&end_time=example_end_time\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/retell/observe/": {
            "post": {
                "operationId": "observability_v1_retell_observe_create",
                "description": "Handle incoming Retell webhook requests.\n\nThis endpoint processes webhook requests from the Retell service, validates the request data,\nand creates a call log entry based on the received data. Retell sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/vapi/observe/": {
            "post": {
                "operationId": "observability_v1_vapi_observe_create",
                "description": "Handle incoming VAPI webhook requests.\n\nThis endpoint processes webhook requests from the VAPI service, validates the API key,\nand creates a call log entry based on the received data. VAPI sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        },
                        "description": "Filter by agent id"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "description": "Filter by project id"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-jobs/?agent_id=42&project_id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs-external/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_external_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        },
                        "description": "Filter by agent id"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "description": "Filter by project id"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-jobs-external/?agent_id=42&project_id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_external_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_external_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-jobs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_external_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-jobs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_external_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-jobs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/slack/events/": {
            "post": {
                "operationId": "slack_events_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/interact/": {
            "post": {
                "operationId": "slack_interact_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/oauth/": {
            "post": {
                "operationId": "slack_oauth_create",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/": {
            "get": {
                "operationId": "slack_slack_workspaces_list",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "slack_slack_workspaces_create",
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/create-checkout-session/": {
            "post": {
                "operationId": "subscriptions_create_checkout_session_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/packs/": {
            "get": {
                "operationId": "subscriptions_packs_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pack"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/add_pack/": {
            "post": {
                "operationId": "subscriptions_packs_add_pack_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/stripe/webhook/": {
            "post": {
                "operationId": "subscriptions_stripe_webhook_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/subscriptions/": {
            "get": {
                "operationId": "subscriptions_subscriptions_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/create_portal_session/": {
            "post": {
                "operationId": "subscriptions_subscriptions_create_portal_session_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/": {
            "get": {
                "operationId": "test_framework_billing_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Billing"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/runs/": {
            "get": {
                "operationId": "test_framework_billing_runs_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/status/": {
            "get": {
                "operationId": "test_framework_billing_status_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/generate_scenarios/": {
            "post": {
                "operationId": "test_framework_generate_scenarios_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/delete_reviews/": {
            "post": {
                "operationId": "test_framework_metric_reviews_delete_reviews_create",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/process-message-response/": {
            "post": {
                "operationId": "test_framework_process_message_response_create",
                "description": "API view to process incoming message responses from VAPI.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/process-patronus-message-response/": {
            "post": {
                "operationId": "test_framework_process_patronus_message_response_create",
                "description": "API view to process incoming message responses from Patronus.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/project-default-metrics/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_list",
                "description": "List API not supported",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_project_default_metrics_create",
                "description": "Create or update user's default metrics",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-outbound-caller/": {
            "post": {
                "operationId": "test_framework_test_outbound_caller_create",
                "description": "API view to test outbound calls.\nThis view allows users to run scenarios associated with a specific agent\nby updating the phone number in the VAPI system.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/": {
            "get": {
                "operationId": "test_framework_test_sets_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TestSetList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_test_sets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_log/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_log_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "call_log_id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "ID of the call log to create test set from",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "description": "ID of the agent that owns the call log",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string",
                            "default": "",
                            "example": "example_name"
                        },
                        "description": "Optional name for the test set. If not provided, call log ID will be used"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/create_from_call_log/?call_log_id=123&agent=100&name=example_name\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/create_from_call_logs/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_logs_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "call_logs",
                        "schema": {
                            "example": "example_call_logs"
                        },
                        "description": "Can be 'all', a positive integer (number of call logs), or a list of call log IDs",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "description": "ID of the agent that owns the call logs",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/create_from_call_logs/?call_logs=example_call_logs&agent=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/create_from_run/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_run_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "ID of the run to create test set from",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "agent",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "description": "ID of the agent that owns the run",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string",
                            "default": "",
                            "example": "example_name"
                        },
                        "description": "Optional name for the test set. If not provided, run ID will be used"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/create_from_run/?run_id=123&agent=100&name=example_name\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/create_testsets/": {
            "post": {
                "operationId": "test_framework_test_sets_create_testsets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/tools/sleep/": {
            "get": {
                "operationId": "test_framework_tools_sleep_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "test_framework_tools_sleep_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            },
                            "example": {
                                "project": 100,
                                "organization": 100,
                                "agent_name": "example_agent_name",
                                "contact_number": "example_contact_number",
                                "inbound": true,
                                "description": "This is an example description",
                                "language": "ar",
                                "assistant_id": "<string>",
                                "chat_assistant_id": "example_chat_assistant_id",
                                "websocket_url": "https://example.com",
                                "websocket_headers": {
                                    "key": "value"
                                },
                                "llm_system_prompt": "example_llm_system_prompt",
                                "llm_model": "gpt-4o-mini",
                                "llm_temperature": 0.5,
                                "llm_max_tokens": 100,
                                "predefined_metrics": [
                                    "6c7f9c63",
                                    "04f667a8",
                                    "52385775"
                                ],
                                "transcript_provider": "vocera",
                                "assistant_provider": "self_hosted"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            },
                            "example": {
                                "project": 100,
                                "organization": 100,
                                "agent_name": "example_agent_name",
                                "contact_number": "example_contact_number",
                                "inbound": true,
                                "description": "This is an example description",
                                "language": "ar",
                                "assistant_id": "<string>",
                                "chat_assistant_id": "example_chat_assistant_id",
                                "websocket_url": "https://example.com",
                                "websocket_headers": {
                                    "key": "value"
                                },
                                "llm_system_prompt": "example_llm_system_prompt",
                                "llm_model": "gpt-4o-mini",
                                "llm_temperature": 0.5,
                                "llm_max_tokens": 100,
                                "predefined_metrics": [
                                    "6c7f9c63",
                                    "04f667a8",
                                    "52385775"
                                ],
                                "transcript_provider": "vocera",
                                "assistant_provider": "self_hosted"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            },
                            "example": {
                                "project": 100,
                                "organization": 100,
                                "agent_name": "example_agent_name",
                                "contact_number": "example_contact_number",
                                "inbound": true,
                                "description": "This is an example description",
                                "language": "ar",
                                "assistant_id": "<string>",
                                "chat_assistant_id": "example_chat_assistant_id",
                                "websocket_url": "https://example.com",
                                "websocket_headers": {
                                    "key": "value"
                                },
                                "llm_system_prompt": "example_llm_system_prompt",
                                "llm_model": "gpt-4o-mini",
                                "llm_temperature": 0.5,
                                "llm_max_tokens": 100,
                                "predefined_metrics": [
                                    "6c7f9c63",
                                    "04f667a8",
                                    "52385775"
                                ],
                                "transcript_provider": "vocera",
                                "assistant_provider": "self_hosted"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_external_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_external_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_external_partial_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_short_list_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_short_list_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/configurations/": {
            "get": {
                "operationId": "test_framework_v1_configurations_list",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/configurations/?page=1&page_size=10\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_configurations_create",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_list",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-categories-external/?page=1&page_size=10\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_critical_metric_categories_external_create",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_categories_external_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-categories-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_categories_external_partial_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-categories-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_critical_metric_categories_external_destroy",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-categories-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/critical-metric-scenarios/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenarios/?page=1&page_size=10\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenarios-external/?page=1&page_size=10\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenarios-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenarios-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics/": {
            "get": {
                "operationId": "test_framework_v1_metrics_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_external_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_external_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_external_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_external_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics-external/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/fetch_call_details/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_fetch_call_details_retrieve",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/save_result/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_save_result_create",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/fetch_call_details/": {
            "get": {
                "operationId": "test_framework_v1_metrics_fetch_call_details_retrieve",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/save_result/": {
            "post": {
                "operationId": "test_framework_v1_metrics_save_result_create",
                "description": "Store metric result to be polled by celery task",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/": {
            "get": {
                "operationId": "test_framework_v1_personalities_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_external_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_personalities_external_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalities-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_external_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalities-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_external_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalities-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/personalities-external/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_external_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_external_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-numbers-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_external_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-numbers-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_external_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-numbers-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/phone-numbers-external/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_external_update",
                "description": "Update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_external_partial_update",
                "description": "Partially update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_external_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metrics-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/predefined-metrics-external/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/": {
            "get": {
                "operationId": "test_framework_v1_results_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_created_at__gte"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_created_at__lte"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "item1",
                                "item2"
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ],
                            "example": "example_status"
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success_rate__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string",
                            "example": "example_name__icontains"
                        }
                    },
                    {
                        "in": "query",
                        "name": "run_as_text",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string",
                            "example": "example_scenarios"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/?created_at__gte=example_created_at__gte&created_at__lte=example_created_at__lte&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_results_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/": {
            "get": {
                "operationId": "test_framework_v1_results_external_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_created_at__gte"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "example_created_at__lte"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "item1",
                                "item2"
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ],
                            "example": "example_status"
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success_rate__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string",
                            "example": "example_name__icontains"
                        }
                    },
                    {
                        "in": "query",
                        "name": "run_as_text",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string",
                            "example": "example_scenarios"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/?created_at__gte=example_created_at__gte&created_at__lte=example_created_at__lte&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_results_external_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_results_external_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_results_external_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_results_external_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_external_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/reports/": {
            "get": {
                "operationId": "test_framework_v1_results_external_reports_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/reports/share/": {
            "post": {
                "operationId": "test_framework_v1_results_external_reports_share_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_external_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/reports/": {
            "get": {
                "operationId": "test_framework_v1_results_reports_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/reports/share/": {
            "post": {
                "operationId": "test_framework_v1_results_reports_share_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/": {
            "get": {
                "operationId": "test_framework_v1_runs_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__contains",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "item1",
                                "item2"
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ],
                            "example": "example_status"
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenario__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "scenario__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "personality__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "personality__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__run_as_text",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string",
                            "example": "example_scenarios"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personalities",
                        "schema": {
                            "type": "string",
                            "example": "example_personalities"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate",
                        "schema": {
                            "type": "number",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/?id__in=%5B1%2C+2%2C+3%5D&id=123&id__contains=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_runs_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__contains",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "item1",
                                "item2"
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "x-spec-enum-id": "39ff4bf28841ae2a",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ],
                            "example": "example_status"
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 60
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id__icontains",
                        "schema": {
                            "type": "string",
                            "example": "call_abc123xyz"
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider_call_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenario__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "scenario__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "personality__id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2,
                                3
                            ]
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "personality__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    {
                        "in": "query",
                        "name": "result__run_as_text",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-12-31T23:59:59Z"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "example": 42
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string",
                            "example": "example_scenarios"
                        }
                    },
                    {
                        "in": "query",
                        "name": "personalities",
                        "schema": {
                            "type": "string",
                            "example": "example_personalities"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate",
                        "schema": {
                            "type": "number",
                            "example": 0.85
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string",
                            "example": "search term"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/?id__in=%5B1%2C+2%2C+3%5D&id=123&id__contains=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_runs_external_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_runs_external_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_runs_external_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_runs_external_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_bulk_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SchemaRun"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/bulk/?run_ids=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_bulk_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SchemaRun"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/bulk/?run_ids=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "Filter evaluators by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 42
                        },
                        "description": "Filter evaluators by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "example_tags"
                        },
                        "description": "Comma-separated list of tags to filter evaluators by"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios/?page=1&page_size=10&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "Filter evaluators by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": 42
                        },
                        "description": "Filter evaluators by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "example_tags"
                        },
                        "description": "Comma-separated list of tags to filter evaluators by"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/?page=1&page_size=10&agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_external_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_external_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_external_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios-external/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                },
                                "examples": {
                                    "InboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": null,
                                                    "inbound_number": "+11234567891"
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Inbound Scenario"
                                    },
                                    "OutboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890",
                                                    "inbound_number": null
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891",
                                                    "inbound_number": null
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Outbound Scenario"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                },
                                "examples": {
                                    "InboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": null,
                                                    "inbound_number": "+11234567891"
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Inbound Scenario"
                                    },
                                    "OutboundScenario": {
                                        "value": {
                                            "id": 167,
                                            "agent": 1,
                                            "status": "pending",
                                            "success_rate": 0,
                                            "run_as_text": false,
                                            "runs": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890",
                                                    "inbound_number": null
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891",
                                                    "inbound_number": null
                                                }
                                            ],
                                            "created_at": "2025-02-25T21:00:01.990052Z"
                                        },
                                        "summary": "Outbound Scenario"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "ID of the result"
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "description": "ID of the agent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "description": "Status of the result"
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "description": "Whether the scenario ran as text or not",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the run"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "running",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "description": "Status of the run"
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "description": "ID of the scenario"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "For outbound runs (agent.inbound=False). The given number that must be called from the phone number configured in the cekura agent.",
                                                        "example": "+11234567890"
                                                    },
                                                    "inbound_number": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "For inbound runs (agent.inbound=True). The agent's configured phone number will receive calls from this number.",
                                                        "example": "+11234567890"
                                                    },
                                                    "scenario_name": {
                                                        "type": "string",
                                                        "description": "Name of the scenario"
                                                    },
                                                    "test_profile_data": {
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ],
                                                        "description": "Details of the test profile associated with this run scenario"
                                                    }
                                                }
                                            },
                                            "examples": [
                                                {
                                                    "id": 274,
                                                    "status": "pending",
                                                    "scenario": 1,
                                                    "number": null,
                                                    "inbound_number": "+11234567890",
                                                    "scenario_name": "Customer Support Call (Agent Inbound = True)",
                                                    "test_profile_data": null
                                                },
                                                {
                                                    "id": 275,
                                                    "status": "pending",
                                                    "scenario": 2,
                                                    "number": "+11234567890",
                                                    "inbound_number": null,
                                                    "scenario_name": "Outbound Sales Call (Agent Inbound = False)",
                                                    "test_profile_data": null
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profiles/?agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles-external/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_external_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer",
                            "example": 42
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profiles-external/?agent_id=42\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_external_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_external_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profiles-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_external_partial_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profiles-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_external_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profiles-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/api/v1/user-api-key/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAPIKey"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_api_v1_user_api_key_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_api_v1_user_api_key_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/api/v1/user-api-key/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_api_v1_user_api_key_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/api/v1/user-api-key/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_api_v1_user_api_key_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/api/v1/user-api-key/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/embedded-token-detail/": {
            "get": {
                "operationId": "user_embedded_token_detail_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/": {
            "get": {
                "operationId": "user_invites_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invite"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/my_invites/": {
            "get": {
                "operationId": "user_invites_my_invites_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/send_invites/": {
            "post": {
                "operationId": "user_invites_send_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/is-active/": {
            "get": {
                "operationId": "user_is_active_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/memberships/": {
            "get": {
                "operationId": "user_memberships_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserMembership"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/": {
            "get": {
                "operationId": "user_organizations_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_organizations_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/name/": {
            "patch": {
                "operationId": "user_organizations_name_partial_update",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/overview/critical-categories/": {
            "get": {
                "operationId": "user_organizations_overview_critical_categories_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/": {
            "get": {
                "operationId": "user_provider_credentials_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProviderCredentialList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_provider_credentials_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/embedded/login/": {
            "post": {
                "operationId": "user_v1_embedded_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/embedded/refresh/": {
            "post": {
                "operationId": "user_v1_embedded_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/": {
            "get": {
                "operationId": "user_v1_projects_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/": {
            "get": {
                "operationId": "user_v1_projects_external_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_external_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_v1_projects_external_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_v1_projects_external_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_v1_projects_external_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/members/": {
            "get": {
                "operationId": "user_v1_projects_external_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/members/": {
            "get": {
                "operationId": "user_v1_projects_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/webhook/supabase/": {
            "post": {
                "operationId": "user_webhook_supabase_create",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/webpage/domain/": {
            "get": {
                "operationId": "webpage_domain_list",
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomDomainList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "webpage_domain_create",
                "description": "Create a new custom domain",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "webpage_domain_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/domain/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "webpage_domain_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/domain/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "webpage_domain_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/domain/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/webpage/page/": {
            "post": {
                "operationId": "webpage_page_create",
                "description": "POST method to create/update a webpage\nExpected request data:\n{\n    \"domain\": \"example.com\", # Can be full URL like https://www.example.com\n    \"html_content\": \"<html>...</html>\"\n}",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "get": {
                "operationId": "webpage_page_retrieve",
                "description": "GET method to retrieve a webpage's HTML content\npk should be the organization id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/page/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "webpage_page_destroy",
                "description": "DELETE method to remove a webpage\npk should be the organization id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/page/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/workflows/edges/": {
            "get": {
                "operationId": "workflows_edges_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Edge"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_edges_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/node-metrics/": {
            "get": {
                "operationId": "workflows_node_metrics_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_node_metrics_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetricCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/nodes/": {
            "get": {
                "operationId": "workflows_nodes_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_nodes_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/workflows/": {
            "get": {
                "operationId": "workflows_workflows_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workflow"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_workflows_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/discord/server/": {
            "get": {
                "operationId": "discord_servers_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/discord/server/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "discord_servers_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/discord/server/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "discord_servers_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/discord/server/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "discord_servers_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/discord/server/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/discord/servers/verify/": {
            "get": {
                "operationId": "discord_servers_verify_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/discord/servers/verify/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs-external/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenario_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/create_scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs-external/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_mark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/mark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs-external/mark_metric_vote/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_mark_metric_vote_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/mark_metric_vote/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs-external/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_unmark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs-external/unmark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-log/": {
            "get": {
                "operationId": "observability_v1_call_logs_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "The ID of the call log to retrieve",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-log/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "observability_v1_call_logs_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-log/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "observability_v1_call_logs_partial_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-log/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "observability_v1_call_logs_destroy",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-log/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenario_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/create_scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_mark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/mark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs/mark_metric_vote/": {
            "post": {
                "operationId": "observability_v1_call_logs_mark_metric_vote_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/mark_metric_vote/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/observability/v1/call-logs/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_unmark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/observability/v1/call-logs/unmark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/schedules/v1/cron-job/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_retrieve",
                "description": "Retrieve a scheduled job by id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-job/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-job/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-job/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/schedules/v1/cron-job/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/slack/slack-workspace/": {
            "get": {
                "operationId": "slack_slack_workspaces_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspace/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "slack_slack_workspaces_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspace/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "slack_slack_workspaces_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspace/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "slack_slack_workspaces_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspace/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/slack/slack-workspaces/get_channels/": {
            "get": {
                "operationId": "slack_slack_workspaces_get_channels_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspaces/get_channels/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/slack/slack-workspaces/verify/": {
            "get": {
                "operationId": "slack_slack_workspaces_verify_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/slack/slack-workspaces/verify/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/subscriptions/pack/": {
            "get": {
                "operationId": "subscriptions_packs_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/subscriptions/pack/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/subscriptions/subscription/": {
            "get": {
                "operationId": "subscriptions_subscriptions_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/subscriptions/subscription/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/subscriptions/subscriptions/cancel/": {
            "post": {
                "operationId": "subscriptions_subscriptions_cancel_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/subscriptions/subscriptions/cancel/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/subscriptions/subscriptions/reactivate/": {
            "post": {
                "operationId": "subscriptions_subscriptions_reactivate_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/subscriptions/subscriptions/reactivate/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/subscriptions/subscriptions/update_payment_method/": {
            "post": {
                "operationId": "subscriptions_subscriptions_update_payment_method_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/subscriptions/subscriptions/update_payment_method/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/critical-categories/": {
            "put": {
                "operationId": "test_framework_critical_categories_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/critical-categories/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_critical_categories_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/critical-categories/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/metric-reviews/": {
            "put": {
                "operationId": "test_framework_metric_reviews_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/metric-reviews/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_metric_reviews_partial_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/metric-reviews/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_metric_reviews_destroy",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/metric-reviews/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/metric-reviews/process_feedback/": {
            "post": {
                "operationId": "test_framework_metric_reviews_process_feedback_create",
                "description": "Process feedback for a metric description and evaluation trigger.\n\nThis endpoint takes agent description, transcript, current metric description,\ncurrent evaluation trigger, and feedback to generate improved versions.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/metric-reviews/process_feedback/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/project-default-metric/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_retrieve",
                "description": "Get user's default metrics for a specific organization",
                "parameters": [
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "integer",
                            "example": "example_project"
                        },
                        "required": true,
                        "description": "Query parameter: ?project=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/project-default-metric/?project=example_project\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_project_default_metrics_update",
                "description": "Update user's default metrics",
                "parameters": [
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "integer",
                            "example": "example_project"
                        },
                        "required": true,
                        "description": "Query parameter: ?project=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/project-default-metric/?project=example_project\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_project_default_metrics_partial_update",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "integer",
                            "example": "example_project"
                        },
                        "required": true,
                        "description": "Query parameter: ?project=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/project-default-metric/?project=example_project\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_project_default_metrics_destroy",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "integer",
                            "example": "example_project"
                        },
                        "required": true,
                        "description": "Query parameter: ?project=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/project-default-metric/?project=example_project\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-set/": {
            "get": {
                "operationId": "test_framework_test_sets_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-set/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_test_sets_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-set/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_test_sets_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-set/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_test_sets_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-set/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/add_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_add_metrics_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/add_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/review_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_review_metrics_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/review_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/voice_recording_url/": {
            "get": {
                "operationId": "test_framework_test_sets_voice_recording_url_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/voice_recording_url/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/test-sets/add/": {
            "get": {
                "operationId": "test_framework_test_sets_add_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "metric_id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?metric_id=value"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/test-sets/add/?metric_id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_delete_knowledge_base_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/delete_knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_disable_personalities_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/disable_personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_duplicate_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/duplicate/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_enable_personalities_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/enable_personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_knowledge_base_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_personalities_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_runs_overview_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/runs_overview/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents-external/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_upload_knowledge_base_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents-external/upload_knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagent/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagent/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagent/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_partial_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagent/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagent/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_delete_knowledge_base_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/delete_knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_disable_personalities_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/disable_personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_duplicate_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/duplicate/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_enable_personalities_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/enable_personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_knowledge_base_list",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_personalities_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/personalities/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_runs_overview_retrieve",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/runs_overview/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/aiagents/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_upload_knowledge_base_create",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/aiagents/upload_knowledge_base/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/configuration/": {
            "get": {
                "operationId": "test_framework_v1_configurations_retrieve",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/configuration/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_configurations_update",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/configuration/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_configurations_partial_update",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserConfiguration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/configuration/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_configurations_destroy",
                "description": "API view set for managing user configurations.\nThis view set provides endpoints to create, retrieve, update, and delete\nuser configurations for runs overview filters, preferences, and custom settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/configuration/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/critical-metric-scenario/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_retrieve",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/critical-metric-scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics-external/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/add_to_predefined_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics-external/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_advance_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/evaluate_advance_metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics-external/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_basic_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/evaluate_basic_metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics-external/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_run_reviews_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics-external/run_reviews/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metric/": {
            "get": {
                "operationId": "test_framework_v1_metrics_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_metrics_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics/add_to_predefined_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_advance_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics/evaluate_advance_metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_basic_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics/evaluate_basic_metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/metrics/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_run_reviews_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/metrics/run_reviews/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/personalities-external/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_external_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalities-external/fork/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/personalitie/": {
            "get": {
                "operationId": "test_framework_v1_personalities_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalitie/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_personalities_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalitie/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalitie/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalitie/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/personalities/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/personalities/fork/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/phone-number/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/phone-number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/predefined-metric/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_update",
                "description": "Update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_partial_update",
                "description": "Partially update a predefined metric.\nOnly allowed if the metric has no organization (organization is None).",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/predefined-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/create_shareable_link_token/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_external_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/delete_runs/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_external_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/end_calls/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_external_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/evaluate_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results-external/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_external_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results-external/rerun/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/result/": {
            "get": {
                "operationId": "test_framework_v1_results_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "id": "integer",
                                            "name": "string",
                                            "agent": "integer",
                                            "status": "string",
                                            "met_expected_outcome_count": "integer",
                                            "total_expected_outcome_count": "integer",
                                            "success_rate": "float",
                                            "run_as_text": "boolean",
                                            "is_cronjob": "boolean",
                                            "runs": {
                                                "run_id": {
                                                    "id": "integer",
                                                    "scenario": "integer",
                                                    "outbound_number": "string",
                                                    "expected_outcome": {
                                                        "score": 100,
                                                        "explanation": [
                                                            "✅ Positive outcome explanation with checkmark emoji",
                                                            "❌ Negative outcome explanation with X emoji"
                                                        ],
                                                        "outcome_alignments": [
                                                            {
                                                                "outcome": "string",
                                                                "prompt_part": "string",
                                                                "aligned": "boolean"
                                                            }
                                                        ]
                                                    },
                                                    "success": "boolean",
                                                    "evaluation": {
                                                        "metrics": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "type": "binary_workflow_adherence | binary_qualitative | continuous_qualitative | numeric | enum",
                                                                "score": "number",
                                                                "explanation": "string | array",
                                                                "function_name": "string (optional)",
                                                                "extra": {
                                                                    "categories": [
                                                                        {
                                                                            "category": "string",
                                                                            "deviation": "string (optional)",
                                                                            "priority": "string (optional)"
                                                                        }
                                                                    ],
                                                                    "percentiles": {
                                                                        "p50": "number"
                                                                    }
                                                                },
                                                                "enum": "string (for enum type metrics only)"
                                                            }
                                                        ]
                                                    },
                                                    "timestamp": "datetime",
                                                    "executed_at": "datetime",
                                                    "error_message": "string",
                                                    "status": "string",
                                                    "duration": "string (MM:SS format)",
                                                    "scenario_name": "string",
                                                    "personality_name": "string",
                                                    "metadata": "object",
                                                    "inbound_number": "string"
                                                }
                                            },
                                            "overall_evaluation": {
                                                "success_rate": "number",
                                                "metric_summary": {
                                                    "metric_id": {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "type": "string",
                                                        "score": "number",
                                                        "explanation": "string (optional)",
                                                        "function_name": "string",
                                                        "vocera_defined_metric_code": "string (optional)",
                                                        "p50": "number (for numeric metrics)"
                                                    }
                                                },
                                                "worst_performing_metrics": {
                                                    "binary_adherence": [
                                                        "array of metric_ids"
                                                    ]
                                                },
                                                "numeric_metrics": [
                                                    {
                                                        "name": "string",
                                                        "type": "numeric",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number"
                                                        }
                                                    }
                                                ],
                                                "enum_metrics": [
                                                    "array of metric_ids"
                                                ],
                                                "extra_metrics": [
                                                    {
                                                        "name": "string (e.g., 'Expected Outcome', 'Average Ringing Duration')",
                                                        "type": "string",
                                                        "value": "number",
                                                        "percentiles": {
                                                            "p50": "number (optional)"
                                                        }
                                                    }
                                                ]
                                            },
                                            "total_duration": "string (MM:SS format)",
                                            "total_runs_count": "integer",
                                            "completed_runs_count": "integer",
                                            "success_runs_count": "integer",
                                            "failed_runs_count": "integer",
                                            "scenarios": [
                                                {
                                                    "id": "integer",
                                                    "name": "string"
                                                }
                                            ],
                                            "critical_categories": "array",
                                            "metrics": "array",
                                            "domain": "string (nullable)",
                                            "domain_logo": "string (nullable)",
                                            "runs_by_tags": "object",
                                            "latency_data": "object",
                                            "failed_reasons": "array",
                                            "created_at": "datetime",
                                            "updated_at": "datetime"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/result/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_results_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/result/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_results_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/result/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_results_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/result/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token_2",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/create_shareable_link_token/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/delete_runs/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/end_calls/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/evaluate_metrics/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/results/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/results/rerun/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/end_call/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/expected_outcome/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/get_listen_url/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/mark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/mark_metric_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_metric_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/mark_metric_vote/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/run_expected_outcome/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs-external/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs-external/unmark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/run/": {
            "get": {
                "operationId": "test_framework_v1_runs_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/run/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_runs_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/run/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_runs_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/run/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_runs_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/run/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/end_call/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/expected_outcome/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/get_listen_url/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/mark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/mark_metric_vote/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_metric_vote_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/mark_metric_vote/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/run_expected_outcome/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/runs/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/runs/unmark_critical_scenario_wrong/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios-external/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/copy/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios-external/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/edit/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios-external/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/run_scenario_demo/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios-external/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios-external/switch_phone_number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenario/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Bad request. Please check your input."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    }
                                },
                                "example": {
                                    "detail": "Not found."
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenario/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios/copy/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios/edit/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios/run_scenario_demo/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/scenarios/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/scenarios/switch_phone_number/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/test_framework/v1/test-profile/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_retrieve",
                "description": "Retrieve a single object by either query parameter or URL parameter.\nQuery parameter takes precedence for the documentation.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profile/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profile/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_partial_update",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profile/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_destroy",
                "description": "Mixin to support both URL path parameters and query parameters for retrieve action.\nPrioritizes query parameters over URL path parameters for backward compatibility.\n\nUsage: Add this mixin to your ViewSet and set `lookup_query_param` if different from 'id'",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/test_framework/v1/test-profile/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/invite/": {
            "get": {
                "operationId": "user_invites_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "user_invites_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_invites_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_invites_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/invites/accept_invite/": {
            "post": {
                "operationId": "user_invites_accept_invite_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invites/accept_invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/invites/reject_invite/": {
            "post": {
                "operationId": "user_invites_reject_invite_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/invites/reject_invite/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/membership/": {
            "get": {
                "operationId": "user_memberships_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/membership/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "user_memberships_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/membership/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_memberships_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/membership/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_memberships_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/membership/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/organization/": {
            "get": {
                "operationId": "user_organizations_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organization/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "user_organizations_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organization/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_organizations_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organization/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_organizations_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organization/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/organizations/onboarding-tasks/": {
            "get": {
                "operationId": "user_organizations_onboarding_tasks_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organizations/onboarding-tasks/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/organizations/overview/": {
            "get": {
                "operationId": "user_organizations_overview_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organizations/overview/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/organizations/overview/agents/": {
            "get": {
                "operationId": "user_organizations_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organizations/overview/agents/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/organizations/overview/call_logs/": {
            "get": {
                "operationId": "user_organizations_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/organizations/overview/call_logs/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/provider-credential/": {
            "get": {
                "operationId": "user_provider_credentials_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/provider-credential/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "user_provider_credentials_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/provider-credential/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_provider_credentials_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/provider-credential/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_provider_credentials_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/provider-credential/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/add_member/": {
            "post": {
                "operationId": "user_v1_projects_external_add_member_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/add_member/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/overview/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_retrieve",
                "description": "Get comprehensive project overview with optimized parallel execution.\n\nReturns call statistics, agent counts, latency analysis, critical categories,\nand issues analysis with percentage changes from the previous period.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/overview/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/overview/agents/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/overview/call_logs/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/overview/critical-categories/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects-external/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_external_remove_member_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects-external/remove_member/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/project/": {
            "get": {
                "operationId": "user_v1_projects_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/project/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "user_v1_projects_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/project/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "user_v1_projects_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/project/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "user_v1_projects_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/project/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/add_member/": {
            "post": {
                "operationId": "user_v1_projects_add_member_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/add_member/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/overview/": {
            "get": {
                "operationId": "user_v1_projects_overview_retrieve",
                "description": "Get comprehensive project overview with optimized parallel execution.\n\nReturns call statistics, agent counts, latency analysis, critical categories,\nand issues analysis with percentage changes from the previous period.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/overview/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/overview/agents/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/overview/call_logs/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/overview/critical-categories/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/user/v1/projects/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_remove_member_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        },
                        "description": "Query parameter: ?id=value",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/user/v1/projects/remove_member/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/webpage/domain/verify/": {
            "get": {
                "operationId": "webpage_domain_verify_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer",
                            "example": 100
                        },
                        "required": true,
                        "description": "Query parameter: ?organization=value"
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/webpage/domain/verify/?organization=100\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/workflows/edge/": {
            "get": {
                "operationId": "workflows_edges_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/edge/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "workflows_edges_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/edge/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "workflows_edges_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/edge/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "workflows_edges_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/edge/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/workflows/node-metric/": {
            "get": {
                "operationId": "workflows_node_metrics_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "workflows_node_metrics_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "workflows_node_metrics_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "workflows_node_metrics_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node-metric/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/workflows/node/": {
            "get": {
                "operationId": "workflows_nodes_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "workflows_nodes_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "workflows_nodes_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "workflows_nodes_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/node/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        },
        "/workflows/workflow/": {
            "get": {
                "operationId": "workflows_workflows_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/workflow/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "put": {
                "operationId": "workflows_workflows_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/workflow/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "patch": {
                "operationId": "workflows_workflows_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/workflow/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.patch(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            },
            "delete": {
                "operationId": "workflows_workflows_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "example": 123
                        },
                        "required": true,
                        "description": "Query parameter: ?id=value"
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.cekura.ai/workflows/workflow/?id=123\"\n\nheaders = {\n    \"X-CEKURA-API-KEY\": \"<api-key>\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AIAgent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Unique identifier for the AI agent",
                        "example": 123
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this agent belongs to",
                        "example": 100
                    },
                    "organization": {
                        "type": "integer",
                        "writeOnly": true,
                        "description": "The organization this agent belongs to",
                        "example": 100
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "A descriptive name for your agent",
                        "maxLength": 255,
                        "example": "example_agent_name"
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number assigned to this agent for calls (must start with + followed by digits, min 8 chars)",
                        "maxLength": 15,
                        "example": "example_contact_number"
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Specifies if this agent handles inbound calls. Set to true for inbound, false for outbound calls",
                        "example": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of what this agent does and how it should interact",
                        "example": "This is an example description"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "default": "en",
                        "description": "The primary language this agent uses for communication (e.g. 'en' for English)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "example": "ar"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "External assistant service identifier (minimum 10 characters)",
                        "maxLength": 255
                    },
                    "chat_assistant_id": {
                        "type": "string",
                        "description": "Chat-specific assistant service identifier (minimum 10 characters)",
                        "maxLength": 255,
                        "example": "example_chat_assistant_id"
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "WebSocket endpoint URL for real-time communication (must use ws:// or wss://)",
                        "example": "https://example.com"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server",
                        "example": {
                            "key": "value"
                        }
                    },
                    "llm_system_prompt": {
                        "type": "string",
                        "description": "System prompt that defines the agent's behavior and personality",
                        "example": "example_llm_system_prompt"
                    },
                    "llm_model": {
                        "enum": [
                            "gpt-4o",
                            "gpt-4o-mini",
                            "gpt-4.1",
                            "gpt-4.1-mini",
                            "claude-3-5-sonnet-20240620"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "02d77b09852d740b",
                        "default": "gpt-4o",
                        "description": "The LLM model to use for simulating user responses\n\n* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `gpt-4.1` - gpt-4.1\n* `gpt-4.1-mini` - gpt-4.1-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620",
                        "example": "gpt-4o"
                    },
                    "llm_temperature": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "Controls randomness in responses (0.0-2.0, lower = more focused)",
                        "example": 0.5
                    },
                    "llm_max_tokens": {
                        "type": "integer",
                        "default": 4096,
                        "description": "Maximum length of simulated responses in tokens",
                        "example": 100
                    },
                    "predefined_metrics": {
                        "writeOnly": true,
                        "description": "Predefined metrics to evaluate the agent's performance. Pass an array of metric codes OR the string \"all\".\n\nExamples:\n- `[\"6c7f9c63\", \"04f667a8\", \"52385775\"]` - Specific metrics (Latency, Critical Deviations, CSAT)\n- `\"all\"` - Add all public predefined metrics",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "6c7f9c63",
                            "04f667a8",
                            "52385775"
                        ]
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of knowledge base files attached to the agent",
                        "example": "example_knowledge_base_files"
                    },
                    "transcript_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "vocera",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "100fd04a7b7da76e",
                        "default": "vocera",
                        "description": "Service provider for speech-to-text transcription\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `custom` - Custom",
                        "example": "vapi"
                    },
                    "assistant_provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "elevenlabs",
                            "vocera",
                            "sms",
                            "self_hosted"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "1970aa91677177a3",
                        "default": "self_hosted",
                        "description": "Service provider for the AI assistant functionality\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `elevenlabs` - Elevenlabs\n* `vocera` - Vocera\n* `sms` - Sms\n* `self_hosted` - Self Hosted",
                        "example": "vapi"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "API key for VAPI service provider",
                        "example": "example_vapi_api_key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "API key for Retell service provider",
                        "example": "example_retell_api_key"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "API key for ElevenLabs voice synthesis service",
                        "example": "example_elevenlabs_api_key"
                    },
                    "bland_api_key": {
                        "type": "string",
                        "description": "API key for Bland service provider",
                        "example": "example_bland_api_key"
                    },
                    "custom_provider_api_key": {
                        "type": "string",
                        "description": "API key for custom service provider",
                        "example": "example_custom_provider_api_key"
                    },
                    "custom_provider_data": {
                        "type": "string",
                        "description": "Additional configuration data for custom service provider",
                        "example": "example_custom_provider_data"
                    },
                    "synthflow_api_key": {
                        "type": "string",
                        "description": "API key for Synthflow service provider",
                        "example": "example_synthflow_api_key"
                    },
                    "enabled_personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Personality profiles enabled for this agent",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the agent was created",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the agent was last updated",
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "AIAgentTestProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "example": {
                            "key1": "value1",
                            "key2": "value2"
                        }
                    }
                }
            },
            "Billing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_balance"
                    },
                    "text_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_text_runs_count"
                    },
                    "non_text_runs_minutes": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_non_text_runs_minutes"
                    },
                    "call_logs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_call_logs_count"
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "num_test_cases": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "total_run_minutes": {
                        "type": "string",
                        "example": "example_total_run_minutes"
                    },
                    "total_call_log_minutes": {
                        "type": "string",
                        "example": "example_total_call_log_minutes"
                    },
                    "balance_expiry": {
                        "type": "string",
                        "format": "date-time",
                        "example": "example_balance_expiry"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "CallLogList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "duration": {
                        "type": "string",
                        "example": 60
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "example": true
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "description": "* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce",
                        "example": "active"
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_call_ended_reason"
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "+1234567890"
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "call_abc123xyz"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "CallLogV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format",
                        "example": 60
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file",
                        "example": "https://example.com"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation",
                        "example": "example_critical_categories"
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce",
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure",
                        "example": "active"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log",
                        "example": "example_agent_id"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log",
                        "example": "example_assistant_id"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "example": true
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "transcript": {
                        "type": "string",
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "recording_data": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "url": "https://example.com/recording.mp3",
                            "duration": 120
                        }
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_call_ended_reason"
                    },
                    "dropoff_point": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "example_dropoff_point"
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "example_topic"
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "+1234567890"
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": [
                            {
                                "speaker": "agent",
                                "text": "Hello"
                            }
                        ]
                    },
                    "metadata": {
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "dynamic_variables": {
                        "example": {
                            "customer_name": "John Doe",
                            "order_id": "ORD-12345"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "call_abc123xyz"
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "CreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "forked_from": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "example": 100
                    },
                    "project": {
                        "type": "integer",
                        "example": 100
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "description": "* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "example": "ar"
                    },
                    "accent": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_accent"
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "description": "* `vapi` - VAPI\n* `patronus` - Patronus",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "default": "vapi",
                        "example": "vapi"
                    },
                    "temperature": {
                        "type": "string",
                        "example": "example_temperature"
                    },
                    "model": {
                        "type": "string",
                        "example": "example_model"
                    },
                    "background_noise": {
                        "type": "string",
                        "example": "example_background_noise"
                    },
                    "voice_model": {
                        "type": "string",
                        "example": "example_voice_model"
                    },
                    "voice_id": {
                        "type": "string",
                        "example": "example_voice_id"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_provider_agent_id"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "provider": {
                        "enum": [
                            "11labs",
                            "cartesia"
                        ],
                        "type": "string",
                        "description": "* `11labs` - Elevenlabs\n* `cartesia` - Cartesia",
                        "x-spec-enum-id": "82a968d406c39bf3",
                        "example": "11labs"
                    }
                }
            },
            "CriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_category"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "example": "critical"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    }
                }
            },
            "CriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "scenario": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_scenario"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "example": "critical"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    }
                }
            },
            "CronJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_crontab_expression"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "example_timezone"
                    },
                    "scenarios": {
                        "writeOnly": true,
                        "example": [
                            "scenario1",
                            "scenario2"
                        ]
                    },
                    "scenario_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "scenarios_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "example": 100
                    },
                    "notify_on": {
                        "enum": [
                            "never",
                            "success",
                            "failure",
                            "both"
                        ],
                        "type": "string",
                        "description": "* `never` - Never\n* `success` - Success\n* `failure` - Failure\n* `both` - Both",
                        "x-spec-enum-id": "d06ae6855e4121c0",
                        "example": "never"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "CustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_domain"
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_verification_token"
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "CustomDomainList": {
                "type": "object",
                "description": "Serializer for listing CustomDomain objects with limited fields",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_domain"
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_verification_token"
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "CustomTokenObtainPair": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string",
                        "example": "example_api_key"
                    },
                    "agent_id": {
                        "type": "integer",
                        "example": 42
                    }
                }
            },
            "DiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_server_name"
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_channel_id"
                    },
                    "organization": {
                        "type": "integer",
                        "example": 100
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    }
                }
            },
            "Edge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "source_node": {
                        "type": "integer",
                        "example": 100
                    },
                    "target_node": {
                        "type": "integer",
                        "example": 100
                    },
                    "value": {
                        "example": "example_value"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "Invite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "user@example.com"
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5",
                        "example": "admin"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected",
                        "x-spec-enum-id": "4874309ac8d0a714",
                        "readOnly": true,
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "KnowledgeBaseFile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "file": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "pattern": "(?:pdf|txt|json|csv|xml|md)$",
                        "example": "example_file"
                    },
                    "file_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://example.com"
                    },
                    "file_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_file_name"
                    },
                    "file_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_file_type"
                    },
                    "file_size": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Size in bytes",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "MembershipInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_user"
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5",
                        "example": "admin"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "user"
                ]
            },
            "Metric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "MetricBasicList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability",
                        "example": true
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations",
                        "example": true
                    }
                }
            },
            "MetricDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a",
                        "example": "basic"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "example": "always"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "example": "example_evaluation_trigger_prompt"
                    },
                    "priority_assignment_prompt": {
                        "type": "string",
                        "example": "example_priority_assignment_prompt"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for specific metrics",
                        "example": {
                            "threshold": 0.8,
                            "enabled": true
                        }
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets",
                        "example": "example_overall_score"
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The total score for this metric",
                        "example": "example_total_score"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Knowledge base files associated with this metric",
                        "example": "example_knowledge_base_files"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability",
                        "example": true
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations",
                        "example": true
                    },
                    "alert_enabled": {
                        "type": "boolean",
                        "description": "Enable alerts for this metric when it fails",
                        "example": true
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "custom_code": {
                        "type": "string",
                        "example": "example_custom_code"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_vocera_defined_metric_code"
                    },
                    "scenarios": {
                        "writeOnly": true,
                        "example": [
                            "scenario1",
                            "scenario2"
                        ]
                    },
                    "reviews": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Reviews associated with the metric",
                        "example": "example_reviews"
                    }
                }
            },
            "MetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a",
                        "example": "basic"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability",
                        "example": true
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations",
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "example": "always"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "example": "example_evaluation_trigger_prompt"
                    },
                    "priority_assignment_prompt": {
                        "type": "string",
                        "example": "example_priority_assignment_prompt"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_vocera_defined_metric_code"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for specific metrics",
                        "example": {
                            "threshold": 0.8,
                            "enabled": true
                        }
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_overall_score"
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_total_score"
                    },
                    "kb_file_ids": {
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_knowledge_base_files"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "custom_code": {
                        "type": "string",
                        "writeOnly": true,
                        "example": "example_custom_code"
                    },
                    "metric_cost": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_cost"
                    }
                }
            },
            "MetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 123
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_name"
                    },
                    "metric_enum_values": {
                        "readOnly": true,
                        "example": "example_metric_enum_values"
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_eval_type"
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": "Expected response"
                    },
                    "explanation": {
                        "readOnly": true,
                        "example": "This explains the reasoning behind the evaluation"
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_function_name"
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_vocera_defined_metric_code"
                    }
                }
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "is_root": {
                        "type": "boolean",
                        "example": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "NodeCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "workflow": {
                        "type": "integer",
                        "example": 100
                    },
                    "is_root": {
                        "type": "boolean",
                        "example": true
                    },
                    "metric": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "NodeInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "workflow": {
                        "type": "integer",
                        "example": 100
                    },
                    "is_root": {
                        "type": "boolean",
                        "example": true
                    },
                    "main_metric": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_main_metric"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "main_metric",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_metric_data"
                    },
                    "is_main": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "NodeMetricCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "node": {
                        "type": "integer",
                        "example": 100
                    },
                    "metric": {
                        "type": "integer",
                        "example": 100
                    },
                    "is_main": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 42
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 60
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_result_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean",
                        "example": true
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "notify_metric_significant_shift": {
                        "type": "boolean",
                        "example": true
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "example": "example_vapi_api_key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "example": "example_retell_api_key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "example": "example_syntflow_api_key"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "example": "https://example.com"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_webhook_secret"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "example": "Africa/Abidjan"
                    },
                    "is_2fa_required": {
                        "type": "boolean",
                        "example": true
                    },
                    "skip_onboarding": {
                        "type": "boolean",
                        "example": true
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_onboarding_tasks"
                    },
                    "auto_refill": {
                        "type": "boolean",
                        "example": true
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_auto_refill_threshold"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_auto_refill_amount"
                    }
                }
            },
            "OrganizationInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "members",
                    "name",
                    "updated_at"
                ]
            },
            "OverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    }
                }
            },
            "Pack": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Example Name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_code"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_price"
                    },
                    "interval": {
                        "enum": [
                            "month",
                            "quarter",
                            "year"
                        ],
                        "type": "string",
                        "description": "* `month` - Monthly\n* `quarter` - Quarterly\n* `year` - Yearly",
                        "x-spec-enum-id": "493dc6126f399b59",
                        "example": "month"
                    },
                    "trial_period_days": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_trial_period_days"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_balance"
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 42
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "monitoring_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "premium_slack_support": {
                        "type": "boolean",
                        "example": true
                    },
                    "custom_api_integrations": {
                        "type": "boolean",
                        "example": true
                    },
                    "dedicated_support_engineer": {
                        "type": "boolean",
                        "example": true
                    },
                    "sla_hours": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "custom_feature_requests": {
                        "type": "boolean",
                        "example": true
                    },
                    "simulate_scenarios": {
                        "type": "boolean",
                        "example": true
                    },
                    "downloadable_reports": {
                        "type": "boolean",
                        "example": true
                    },
                    "slack_alerts": {
                        "type": "boolean",
                        "example": true
                    },
                    "custom_sso": {
                        "type": "boolean",
                        "example": true
                    },
                    "dedicated_cloud_instance": {
                        "type": "boolean",
                        "example": true
                    },
                    "on_prem_deployment": {
                        "type": "boolean",
                        "example": true
                    },
                    "multiple_organizations": {
                        "type": "boolean",
                        "example": true
                    },
                    "hippa_compliance": {
                        "type": "boolean",
                        "example": true
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PackInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Example Name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_code"
                    },
                    "subscription_overage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "example": "example_subscription_overage"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "PaginatedCallLogListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogList"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedCallLogV2List": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogV2"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedCriticalMetricCategoryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricCategory"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedCriticalMetricScenarioList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricScenario"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedResultList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedRunListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunList"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedScenarioListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioList"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PaginatedUserConfigurationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserConfiguration"
                        },
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                }
            },
            "PatchedCallLogV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format",
                        "example": 60
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file",
                        "example": "https://example.com"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation",
                        "example": "example_critical_categories"
                    },
                    "status": {
                        "enum": [
                            "success",
                            "failure",
                            "reviewed_success",
                            "reviewed_failure"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "a5dfbbcee6f2a6ce",
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure",
                        "example": "active"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log",
                        "example": "example_agent_id"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log",
                        "example": "example_assistant_id"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "example": true
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "transcript": {
                        "type": "string",
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "recording_data": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "url": "https://example.com/recording.mp3",
                            "duration": 120
                        }
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_call_ended_reason"
                    },
                    "dropoff_point": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "example_dropoff_point"
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "example_topic"
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "+1234567890"
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": [
                            {
                                "speaker": "agent",
                                "text": "Hello"
                            }
                        ]
                    },
                    "metadata": {
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "dynamic_variables": {
                        "example": {
                            "customer_name": "John Doe",
                            "order_id": "ORD-12345"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "call_abc123xyz"
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedCreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "forked_from": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "example": 100
                    },
                    "project": {
                        "type": "integer",
                        "example": 100
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "description": "* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "example": "ar"
                    },
                    "accent": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_accent"
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "description": "* `vapi` - VAPI\n* `patronus` - Patronus",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "default": "vapi",
                        "example": "vapi"
                    },
                    "temperature": {
                        "type": "string",
                        "example": "example_temperature"
                    },
                    "model": {
                        "type": "string",
                        "example": "example_model"
                    },
                    "background_noise": {
                        "type": "string",
                        "example": "example_background_noise"
                    },
                    "voice_model": {
                        "type": "string",
                        "example": "example_voice_model"
                    },
                    "voice_id": {
                        "type": "string",
                        "example": "example_voice_id"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_provider_agent_id"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "provider": {
                        "enum": [
                            "11labs",
                            "cartesia"
                        ],
                        "type": "string",
                        "description": "* `11labs` - Elevenlabs\n* `cartesia` - Cartesia",
                        "x-spec-enum-id": "82a968d406c39bf3",
                        "example": "11labs"
                    }
                }
            },
            "PatchedCriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_category"
                    },
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "example": "critical"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    }
                }
            },
            "PatchedCustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_domain"
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_verification_token"
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "PatchedDiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_server_name"
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_channel_id"
                    },
                    "organization": {
                        "type": "integer",
                        "example": 100
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    }
                }
            },
            "PatchedEdge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "source_node": {
                        "type": "integer",
                        "example": 100
                    },
                    "target_node": {
                        "type": "integer",
                        "example": 100
                    },
                    "value": {
                        "example": "example_value"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "user@example.com"
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5",
                        "example": "admin"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected",
                        "x-spec-enum-id": "4874309ac8d0a714",
                        "readOnly": true,
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedMetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 123
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_name"
                    },
                    "metric_enum_values": {
                        "readOnly": true,
                        "example": "example_metric_enum_values"
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_eval_type"
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": "Expected response"
                    },
                    "explanation": {
                        "readOnly": true,
                        "example": "This explains the reasoning behind the evaluation"
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_function_name"
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_vocera_defined_metric_code"
                    }
                }
            },
            "PatchedNode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "is_root": {
                        "type": "boolean",
                        "example": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedNodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_metric_data"
                    },
                    "is_main": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 42
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 60
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_result_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean",
                        "example": true
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "notify_metric_significant_shift": {
                        "type": "boolean",
                        "example": true
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "example": "example_vapi_api_key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "example": "example_retell_api_key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "example": "example_syntflow_api_key"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "example": "https://example.com"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_webhook_secret"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "example": "Africa/Abidjan"
                    },
                    "is_2fa_required": {
                        "type": "boolean",
                        "example": true
                    },
                    "skip_onboarding": {
                        "type": "boolean",
                        "example": true
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_onboarding_tasks"
                    },
                    "auto_refill": {
                        "type": "boolean",
                        "example": true
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_auto_refill_threshold"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "example": "example_auto_refill_amount"
                    }
                }
            },
            "PatchedOverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    }
                }
            },
            "PatchedPhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_scenario_id"
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_scenario_name"
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15,
                        "example": "example_number"
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "+1234567890"
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "description": "Call service provider this phone number is associated with\n\n* `vapi` - VAPI\n* `patronus` - Patronus",
                        "example": "vapi"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedPredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_code"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a",
                        "example": "basic"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "custom_code": {
                        "type": "string",
                        "example": "example_custom_code"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations",
                        "example": true
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability",
                        "example": true
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric",
                        "example": {
                            "threshold": 0.8,
                            "enabled": true
                        }
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "readOnly": true,
                        "description": "Cost in credits for evaluating this metric",
                        "example": "example_cost"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "example": "always"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "example": "example_evaluation_trigger_prompt"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedProject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name",
                        "example": "Example Name"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationInline"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_organization"
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "Outbound timeout in seconds",
                        "example": 100
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "Max call duration in seconds",
                        "example": 60
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "Min call duration in seconds",
                        "example": 60
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "Max messages chat runs limit",
                        "example": 100
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Webhook URL",
                        "example": "https://example.com"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "Webhook secret",
                        "example": "example_webhook_secret"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "Evaluate relevant metrics enabled",
                        "example": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "End call enabled",
                        "example": true
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "Generate scenario auto assign numbers enabled",
                        "example": true
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "Enable client side testing",
                        "example": true
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "Should show powered by",
                        "example": true
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "Notify on result completion",
                        "example": true
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "Notify critical workflow adherence",
                        "example": true
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "Notify daily report",
                        "example": true
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "Notify cron failure",
                        "example": true
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "Notify cron success",
                        "example": true
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "Notify infra issues",
                        "example": true
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "Notify binary workflow metrics",
                        "example": true
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "Notify latency spikes",
                        "example": true
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "Notify no calls",
                        "example": true
                    },
                    "notify_daily_report_webhook": {
                        "type": "boolean",
                        "description": "Notify daily report webhook",
                        "example": true
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify result webhook failed",
                        "example": true
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "Notify result webhook success",
                        "example": true
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook failed",
                        "example": true
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook success",
                        "example": true
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify call log webhook failed",
                        "example": true
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "Notify call log webhook success",
                        "example": true
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean",
                        "example": true
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "Forward vapi webhook",
                        "example": true
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "Forward retell webhook",
                        "example": true
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "Is send emails enabled",
                        "example": true
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone",
                        "example": "example_timezone"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "VAPI API key",
                        "example": "example_vapi_api_key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "Retell API key",
                        "example": "example_retell_api_key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "Syntflow API key",
                        "example": "example_syntflow_api_key"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "ElevenLabs API key",
                        "example": "example_elevenlabs_api_key"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer",
                        "example": 100
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            "6c7f9c63",
                            "04f667a8",
                            "52385775"
                        ]
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_predefined_metrics_names"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `custom` - Custom",
                        "x-spec-enum-id": "7d46ed2e4320dbec",
                        "example": "vapi"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_key"
                    },
                    "data": {
                        "example": "example_data"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedRequestCriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "priority": {
                        "enum": [
                            "critical",
                            "non-critical",
                            "not_a_bug"
                        ],
                        "type": "string",
                        "description": "* `critical` - Critical\n* `non-critical` - Non Critical\n* `not_a_bug` - Not A Bug",
                        "x-spec-enum-id": "6b5f38576e0a1903",
                        "example": "critical"
                    }
                }
            },
            "PatchedResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "example": "active"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100",
                        "example": "example_met_expected_outcome_count"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined",
                        "example": "example_total_expected_outcome_count"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "example": 0.5
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob",
                        "example": "example_is_cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Dictionary mapping run IDs to detailed run information including scenario, evaluation and transcript data",
                        "example": "example_runs"
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_overall_evaluation"
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true,
                        "example": 60
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_total_runs_count"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_completed_runs_count"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_success_runs_count"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_failed_runs_count"
                    },
                    "scenarios": {
                        "type": "string",
                        "readOnly": true,
                        "example": [
                            "scenario1",
                            "scenario2"
                        ]
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_critical_categories"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "domain": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_domain"
                    },
                    "domain_logo": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_domain_logo"
                    },
                    "runs_by_tags": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_runs_by_tags"
                    },
                    "latency_data": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_latency_data"
                    },
                    "failed_reasons": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_failed_reasons"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedRun": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "call_abc123xyz"
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted",
                        "example": "example_scenario_name"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to",
                        "example": 100
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to",
                        "example": "example_personality_name"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "ID of the agent associated with this run",
                        "example": 42
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_expected_outcome_prompt"
                    },
                    "expected_outcome": {
                        "readOnly": true,
                        "example": "example_expected_outcome"
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format",
                        "example": 60
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run",
                        "example": "https://example.com"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "example": "active"
                    },
                    "metadata": {
                        "readOnly": true,
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run",
                        "example": "example_outbound_number"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run",
                        "example": "example_critical_categories"
                    },
                    "error_message": {
                        "type": "string",
                        "example": "example_error_message"
                    },
                    "scenario_instructions": {
                        "type": "string",
                        "example": "example_scenario_instructions"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    }
                }
            },
            "PatchedSchemaPostAIAgentExternal": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer",
                        "description": "Project ID\n\nExample: `15`",
                        "example": 100
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Name of the AI agent\n\nExample: `Customer Support Bot`",
                        "example": "example_agent_name"
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number associated with the AI agent\n\nExample: `+14155551234`",
                        "example": "example_contact_number"
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether the agent handles inbound calls\n\nExample: `True`",
                        "example": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the AI agent's purpose and capabilities\n\nExample: `You are a helpful customer support agent for Acme Corp. Help customers with product inquiries, order status, and general questions.`",
                        "example": "This is an example description"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant\n\nExample: `asst_abc123xyz`",
                        "example": "example_assistant_id"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language of the agent\n\nExample: `en-US`\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "example": "ar"
                    },
                    "websocket_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "WebSocket URL for real-time communication with the agent\n\nExample: `wss://api.example.com/v1/realtime`",
                        "example": "https://example.com"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server\n\nExample: `{\"Authorization\": \"Bearer sk-abc123\", \"X-Custom-Header\": \"value\"}`",
                        "example": {
                            "key": "value"
                        }
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Predefined metrics to evaluate the agent's performance. Pass an array of metric codes OR the string \"all\".\n\nExamples:\n- `[\"6c7f9c63\", \"04f667a8\", \"52385775\"]` - Specific metrics (Latency, Critical Deviations, CSAT)\n- `\"all\"` - Add all public predefined metrics",
                        "example": [
                            "6c7f9c63",
                            "04f667a8",
                            "52385775"
                        ]
                    }
                }
            },
            "PatchedSchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile",
                        "example": "Example Name"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile",
                        "example": {
                            "key1": "value1",
                            "key2": "value2"
                        }
                    }
                }
            },
            "PatchedSchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob",
                        "example": "Example Name"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs to execute",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Alternative to scenarios - List of tags to filter scenario",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Required when tags are provided",
                        "example": 42
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "Cron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)",
                        "example": "example_crontab_expression"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "description": "Timezone for the cronjob (default: Project timezone)\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "example": "Africa/Abidjan"
                    }
                }
            },
            "PatchedSchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric",
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates",
                        "example": "This is an example description"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content",
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric",
                        "example": "example_prompt"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant",
                        "example": "example_assistant_id"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)",
                        "example": "example_type"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)",
                        "example": "example_eval_type"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics",
                        "example": {
                            "key": "value"
                        }
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI",
                        "example": 100
                    }
                }
            },
            "PatchedSchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent ID this evaluator is associated with\n\nExample: `42`",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with the agent\n\nExample: `asst_xyz789`",
                        "example": "example_assistant_id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the evaluator scenario\n\nExample: `Appointment Booking - Happy Path`",
                        "example": "Example Name"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality ID to use for the simulated customer\n\nExample: `5`",
                        "example": 100
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for the simulated customer on how to behave during the call\n\nExample: `You are trying to book an appointment for next week. Be polite and provide all requested information.`",
                        "example": "example_instructions"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Description of the expected outcome of this scenario\n\nExample: `The appointment should be successfully scheduled and the customer should receive a confirmation.`",
                        "example": "example_expected_outcome_prompt"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "List of metric IDs to evaluate for this scenario\n\nExample: `[12, 15, 18]`",
                        "example": {
                            "key": "value"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to categorize the evaluator\n\nExample: `[\"booking\", \"happy-path\", \"high-priority\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs available to use during the evaluation\n\nExample: `[\"calendar_check\", \"booking_create\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for dynamic data\n\nExample: `3`",
                        "example": 100
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for this evaluator\n\nExample: `7`",
                        "example": "+1234567890"
                    }
                }
            },
            "PatchedSlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_team_name"
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_channel_id"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedTestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "transcript": {
                        "type": "string",
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "example": "example_voice_recording"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://example.com"
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_call_end_reason"
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true,
                        "example": 60
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run"
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "readOnly": true,
                        "example": "CallLog"
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_source_id"
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_reviews"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedUserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "example": "Example Name"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_project_name"
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_key"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedUserConfiguration": {
                "type": "object",
                "description": "Serializer for UserConfiguration model to handle user settings.\nSupports key-value data storage for various configuration types.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this configuration belongs to",
                        "example": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent this configuration belongs to",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the configuration",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "configuration_type": {
                        "enum": [
                            "undefined",
                            "runs_overview"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bf0bea22f65083a0",
                        "description": "Type of configuration\n\n* `undefined` - Undefined\n* `runs_overview` - Runs Overview",
                        "example": "undefined"
                    },
                    "data": {
                        "description": "Configuration data stored as key-value pairs",
                        "example": "example_data"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedUserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_project_name"
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_user"
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5",
                        "example": "admin"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PatchedWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_scenario_id"
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_scenario_name"
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15,
                        "example": "example_number"
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "+1234567890"
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "description": "Call service provider this phone number is associated with\n\n* `vapi` - VAPI\n* `patronus` - Patronus",
                        "example": "vapi"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PhoneNumberInbound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15,
                        "example": "example_number"
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "+1234567890"
                    },
                    "common": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_common"
                    },
                    "call_service_provider": {
                        "enum": [
                            "vapi",
                            "patronus"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "f442d6949d5b96ff",
                        "description": "Call service provider this phone number is associated with\n\n* `vapi` - VAPI\n* `patronus` - Patronus",
                        "example": "vapi"
                    }
                }
            },
            "PredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is an example description"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_code"
                    },
                    "type": {
                        "enum": [
                            "basic",
                            "custom_prompt",
                            "custom_code"
                        ],
                        "type": "string",
                        "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code",
                        "x-spec-enum-id": "84eea6139237739a",
                        "example": "basic"
                    },
                    "eval_type": {
                        "enum": [
                            "binary_workflow_adherence",
                            "binary_qualitative",
                            "continuous_qualitative",
                            "numeric",
                            "enum"
                        ],
                        "type": "string",
                        "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum",
                        "x-spec-enum-id": "1e3e27b342bfd8ec",
                        "example": "binary_workflow_adherence"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "example": "example_prompt"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "enum_values": {
                        "example": [
                            "option1",
                            "option2",
                            "option3"
                        ]
                    },
                    "custom_code": {
                        "type": "string",
                        "example": "example_custom_code"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations",
                        "example": true
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability",
                        "example": true
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric",
                        "example": {
                            "threshold": 0.8,
                            "enabled": true
                        }
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "readOnly": true,
                        "description": "Cost in credits for evaluating this metric",
                        "example": "example_cost"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "example": "always"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "example": "example_evaluation_trigger_prompt"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name",
                        "example": "Example Name"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationInline"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_organization"
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "Outbound timeout in seconds",
                        "example": 100
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "Max call duration in seconds",
                        "example": 60
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "Min call duration in seconds",
                        "example": 60
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "Max messages chat runs limit",
                        "example": 100
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Webhook URL",
                        "example": "https://example.com"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "Webhook secret",
                        "example": "example_webhook_secret"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "Evaluate relevant metrics enabled",
                        "example": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "End call enabled",
                        "example": true
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "Generate scenario auto assign numbers enabled",
                        "example": true
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "Enable client side testing",
                        "example": true
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "Should show powered by",
                        "example": true
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "Notify on result completion",
                        "example": true
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "Notify critical workflow adherence",
                        "example": true
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "Notify daily report",
                        "example": true
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "Notify cron failure",
                        "example": true
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "Notify cron success",
                        "example": true
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "Notify infra issues",
                        "example": true
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "Notify binary workflow metrics",
                        "example": true
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "Notify latency spikes",
                        "example": true
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "Notify no calls",
                        "example": true
                    },
                    "notify_daily_report_webhook": {
                        "type": "boolean",
                        "description": "Notify daily report webhook",
                        "example": true
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify result webhook failed",
                        "example": true
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "Notify result webhook success",
                        "example": true
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook failed",
                        "example": true
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook success",
                        "example": true
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify call log webhook failed",
                        "example": true
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "Notify call log webhook success",
                        "example": true
                    },
                    "notify_frequent_calls_for_number": {
                        "type": "boolean",
                        "example": true
                    },
                    "frequent_calls_threshold": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_time_period": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "frequent_calls_cooldown": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "example": 100
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "Forward vapi webhook",
                        "example": true
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "Forward retell webhook",
                        "example": true
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "Is send emails enabled",
                        "example": true
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone",
                        "example": "example_timezone"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "VAPI API key",
                        "example": "example_vapi_api_key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "Retell API key",
                        "example": "example_retell_api_key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "Syntflow API key",
                        "example": "example_syntflow_api_key"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "ElevenLabs API key",
                        "example": "example_elevenlabs_api_key"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "ProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer",
                        "example": 100
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            "6c7f9c63",
                            "04f667a8",
                            "52385775"
                        ]
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_predefined_metrics_names"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "ProjectInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "updated_at"
                ]
            },
            "ProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `custom` - Custom",
                        "x-spec-enum-id": "7d46ed2e4320dbec",
                        "example": "vapi"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_key"
                    },
                    "data": {
                        "example": "example_data"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "ProviderCredentialList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "enum": [
                            "vapi",
                            "retell",
                            "synthflow",
                            "elevenlabs",
                            "bland",
                            "custom"
                        ],
                        "type": "string",
                        "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `bland` - Bland\n* `custom` - Custom",
                        "x-spec-enum-id": "7d46ed2e4320dbec",
                        "example": "vapi"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "Result": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Unique identifier for the Result",
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Result",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "ID of the AI agent that was tested",
                        "example": 42
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "default": "pending",
                        "description": "Current status of the test result (e.g., running, completed, failed)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "example": "active"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "Success rate of the test runs as a decimal (0.0 to 1.0)",
                        "example": 0.5
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this test was run in text mode instead of voice mode",
                        "example": true
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob",
                        "example": "example_is_cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of test runs associated with this result, including run details, status, scenario information, and phone numbers used",
                        "example": "example_runs"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that met the expected outcome criteria",
                        "example": "example_met_expected_outcome_count"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of test runs that were evaluated for expected outcomes",
                        "example": "example_total_expected_outcome_count"
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of test runs associated with this result",
                        "example": "example_total_runs_count"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that have completed successfully",
                        "example": "example_completed_runs_count"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that were marked as successful",
                        "example": "example_success_runs_count"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that failed or encountered errors",
                        "example": "example_failed_runs_count"
                    },
                    "scenarios": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of scenario names used in the test runs for this result",
                        "example": [
                            "scenario1",
                            "scenario2"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this test result was created",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this test result was last updated",
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "ResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "example": "active"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100",
                        "example": "example_met_expected_outcome_count"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined",
                        "example": "example_total_expected_outcome_count"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "example": 0.5
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob",
                        "example": "example_is_cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Dictionary mapping run IDs to detailed run information including scenario, evaluation and transcript data",
                        "example": "example_runs"
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_overall_evaluation"
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true,
                        "example": 60
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_total_runs_count"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_completed_runs_count"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_success_runs_count"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_failed_runs_count"
                    },
                    "scenarios": {
                        "type": "string",
                        "readOnly": true,
                        "example": [
                            "scenario1",
                            "scenario2"
                        ]
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_critical_categories"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "domain": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_domain"
                    },
                    "domain_logo": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_domain_logo"
                    },
                    "runs_by_tags": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_runs_by_tags"
                    },
                    "latency_data": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_latency_data"
                    },
                    "failed_reasons": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_failed_reasons"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "Run": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "call_abc123xyz"
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted",
                        "example": "example_scenario_name"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to",
                        "example": 100
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to",
                        "example": "example_personality_name"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "ID of the agent associated with this run",
                        "example": 42
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_expected_outcome_prompt"
                    },
                    "expected_outcome": {
                        "readOnly": true,
                        "example": "example_expected_outcome"
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": {
                            "score": 85,
                            "feedback": "Good performance"
                        }
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true,
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format",
                        "example": 60
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run",
                        "example": "https://example.com"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "readOnly": true,
                        "example": "active"
                    },
                    "metadata": {
                        "readOnly": true,
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "feedback": {
                        "type": "string",
                        "example": "example_feedback"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run",
                        "example": "example_outbound_number"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run",
                        "example": "example_critical_categories"
                    },
                    "error_message": {
                        "type": "string",
                        "example": "example_error_message"
                    },
                    "scenario_instructions": {
                        "type": "string",
                        "example": "example_scenario_instructions"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    }
                }
            },
            "RunList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "call_abc123xyz"
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted",
                        "example": "example_scenario_name"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_personality_name"
                    },
                    "agent": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 42
                    },
                    "duration": {
                        "type": "string",
                        "example": 60
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "example": "active"
                    },
                    "expected_outcome": {
                        "example": "example_expected_outcome"
                    },
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "metadata": {
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_outbound_number"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_critical_categories"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metrics"
                    },
                    "error_message": {
                        "type": "string",
                        "example": "example_error_message"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    }
                },
                "required": [
                    "agent",
                    "critical_categories",
                    "duration",
                    "id",
                    "metrics",
                    "outbound_number",
                    "personality",
                    "personality_name",
                    "run_as_text",
                    "scenario_name",
                    "timestamp"
                ]
            },
            "RunScenariosWithWebsockets": {
                "type": "object",
                "properties": {
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioWithWebsocket"
                        },
                        "description": "Scenarios with Websocket url",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Frequency to run",
                        "example": 100
                    }
                },
                "required": [
                    "frequency",
                    "scenarios"
                ]
            },
            "Scenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80,
                        "example": "Example Name"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario",
                        "example": "example_assistant_id"
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario",
                        "example": "example_personality_name"
                    },
                    "tags": {
                        "example": "example_tags"
                    },
                    "tool_ids": {
                        "description": "List of tool IDs to associate with this scenario",
                        "example": "example_tool_ids"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of IDs for the last run of this scenario",
                        "example": "example_runs"
                    },
                    "metrics": {
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario",
                        "example": "example_metrics"
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario",
                        "example": "example_metric_names"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used for outbound calls in this scenario",
                        "example": "+1234567890"
                    },
                    "first_message": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "example_first_message"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "example": "+1234567890"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls",
                        "example": "+1234567890"
                    },
                    "instructions": {
                        "type": "string",
                        "example": "example_instructions"
                    },
                    "simulation_description": {
                        "type": "string",
                        "example": "example_simulation_description"
                    },
                    "information_fields": {
                        "example": "example_information_fields"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "example": "example_expected_outcome_prompt"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language of the scenario\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "example": "ar"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario",
                        "example": "example_test_profile_data"
                    }
                }
            },
            "ScenarioInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80,
                        "example": "Example Name"
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_personality_name"
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "personality_name"
                ]
            },
            "ScenarioInstructionsRequest": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "extra_instructions": {
                        "type": "string",
                        "example": "example_extra_instructions"
                    },
                    "current_instructions": {
                        "type": "string",
                        "example": "example_current_instructions"
                    }
                },
                "required": [
                    "agent",
                    "extra_instructions"
                ]
            },
            "ScenarioInstructionsResponse": {
                "type": "object",
                "properties": {
                    "instructions": {
                        "type": "string",
                        "example": "example_instructions"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "example": "example_expected_outcome_prompt"
                    }
                }
            },
            "ScenarioList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Unique identifier for the AI agent",
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80,
                        "example": "Example Name"
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the personality used in this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario",
                        "example": "example_personality_name"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "example": "+1234567890"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_expected_outcome_prompt"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Detailed instructions that guide the AI agent's behavior in this scenario",
                        "example": "example_instructions"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi",
                            null
                        ],
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language code for the scenario (ISO language code)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "tags": {
                        "description": "List of tags associated with this scenario for categorization",
                        "example": "example_tags"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Foreign key reference to the AI agent that owns this scenario",
                        "example": 42
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the phone number used for inbound calls",
                        "example": "+1234567890"
                    },
                    "inbound_phone_number_data": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls",
                        "example": "+1234567890"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of metrics associated with this scenario for evaluation",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario",
                        "example": "example_metric_names"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "The initial message that the AI agent will send when the scenario starts",
                        "maxLength": 1000,
                        "example": "example_first_message"
                    },
                    "tool_ids": {
                        "description": "List of tool IDs that are available for use in this scenario",
                        "example": "example_tool_ids"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the test profile used for scenario evaluation"
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario",
                        "example": "example_test_profile_data"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was created",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was last updated",
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "ScenarioWithWebsocket": {
                "type": "object",
                "properties": {
                    "scenario": {
                        "type": "integer",
                        "example": 100
                    },
                    "websocket_url": {
                        "type": "string",
                        "example": "https://example.com"
                    }
                },
                "required": [
                    "scenario"
                ]
            },
            "SchemaCreateShareableLinkTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Unique token identifier for the shareable link, used for authentication and access control",
                        "example": "example_token"
                    },
                    "shareable_link": {
                        "type": "string",
                        "description": "Complete URL for the shareable link that can be distributed to external users",
                        "example": "example_shareable_link"
                    },
                    "custom_link": {
                        "type": "string",
                        "description": "Customized branded URL for the shareable link with organization-specific branding",
                        "example": "example_custom_link"
                    },
                    "custom_domain": {
                        "type": "boolean",
                        "description": "Whether the organization has whitelabel custom domain enabled for branded links",
                        "example": true
                    }
                }
            },
            "SchemaGenerateMetricsMetricCreate": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the AI agent to generate metrics for",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly",
                        "example": "example_assistant_id"
                    },
                    "num_metrics": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 1,
                        "description": "Number of metrics to generate",
                        "example": 100
                    }
                }
            },
            "SchemaGenerateScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "ID of the agent to generate evaluator for",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Alternative to agent_id - the assistant ID to generate evaluators for",
                        "example": "example_assistant_id"
                    },
                    "personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to use for generated evaluators",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "num_scenarios": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Number of evaluators to generate (1-100)",
                        "example": 100
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "ID of the test profile to assign to generated evaluators",
                        "example": 100
                    },
                    "scenario_type": {
                        "enum": [
                            "happy",
                            "sad",
                            "toxicity",
                            "bias",
                            "jailbreak",
                            "hallucination",
                            null
                        ],
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-spec-enum-id": "85704d81b5484593",
                        "description": "Type of scenarios to generate: happy path, sad path, toxicity, bias, jailbreak, or hallucination\n\n* `happy` - happy\n* `sad` - sad\n* `toxicity` - toxicity\n* `bias` - bias\n* `jailbreak` - jailbreak\n* `hallucination` - hallucination"
                    },
                    "extra_instructions": {
                        "type": "string",
                        "description": "Additional instructions to guide evaluator generation",
                        "example": "example_extra_instructions"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Phone number ID to use for inbound evaluator",
                        "example": "+1234567890"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "Initial message to start the conversation",
                        "maxLength": 1000,
                        "example": "example_first_message"
                    },
                    "generate_expected_outcomes": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, expected outcomes will be generated for each evaluator",
                        "example": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to apply to all generated scenarios",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for generated evaluators",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                },
                "required": [
                    "num_scenarios"
                ]
            },
            "SchemaPostAIAgentExternal": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer",
                        "description": "Project ID\n\nExample: `15`",
                        "example": 100
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Name of the AI agent\n\nExample: `Customer Support Bot`",
                        "example": "example_agent_name"
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number associated with the AI agent\n\nExample: `+14155551234`",
                        "example": "example_contact_number"
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether the agent handles inbound calls\n\nExample: `True`",
                        "example": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the AI agent's purpose and capabilities\n\nExample: `You are a helpful customer support agent for Acme Corp. Help customers with product inquiries, order status, and general questions.`",
                        "example": "This is an example description"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant\n\nExample: `asst_abc123xyz`",
                        "example": "example_assistant_id"
                    },
                    "language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language of the agent\n\nExample: `en-US`\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "example": "ar"
                    },
                    "websocket_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "WebSocket URL for real-time communication with the agent\n\nExample: `wss://api.example.com/v1/realtime`",
                        "example": "https://example.com"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server\n\nExample: `{\"Authorization\": \"Bearer sk-abc123\", \"X-Custom-Header\": \"value\"}`",
                        "example": {
                            "key": "value"
                        }
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Predefined metrics to evaluate the agent's performance. Pass an array of metric codes OR the string \"all\".\n\nExamples:\n- `[\"6c7f9c63\", \"04f667a8\", \"52385775\"]` - Specific metrics (Latency, Critical Deviations, CSAT)\n- `\"all\"` - Add all public predefined metrics",
                        "example": [
                            "6c7f9c63",
                            "04f667a8",
                            "52385775"
                        ]
                    }
                },
                "required": [
                    "agent_name",
                    "assistant_id",
                    "description",
                    "inbound",
                    "language",
                    "project"
                ]
            },
            "SchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile",
                        "example": "Example Name"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile",
                        "example": {
                            "key1": "value1",
                            "key2": "value2"
                        }
                    }
                },
                "required": [
                    "agent",
                    "name"
                ]
            },
            "SchemaPostCallLogDetail": {
                "type": "object",
                "properties": {
                    "call_logs": {
                        "writeOnly": true,
                        "description": "List of call log IDs, int or string `all` to process",
                        "example": "example_call_logs"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log",
                        "example": "example_agent_id"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log",
                        "example": "example_assistant_id"
                    }
                },
                "required": [
                    "call_logs"
                ]
            },
            "SchemaPostCopyAgent": {
                "type": "object",
                "properties": {
                    "copy_scenarios": {
                        "type": "boolean",
                        "description": "If true, scenarios will be copied",
                        "example": true
                    }
                }
            },
            "SchemaPostCreateCallLog": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference\n\nExample: `call_abc123xyz`",
                        "example": "call_abc123xyz"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent ID as shown on your dashboard. Either `agent` or `assistant_id` must be provided\n\nExample: `42`",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with agent. Either `agent` or `assistant_id` must be provided\n\nExample: `asst_xyz789`",
                        "example": "example_assistant_id"
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "binary",
                        "description": "The voice recording of the call",
                        "example": "example_voice_recording"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL to the call recording audio file\n\nExample: `https://example.com/recordings/call_abc123.mp3`",
                        "example": "https://example.com"
                    },
                    "transcript_type": {
                        "enum": [
                            "cekura",
                            "vapi",
                            "retell",
                            "deepgram",
                            "pipecat",
                            "livekit",
                            "elevenlabs",
                            "none-mono"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "772e956c79c93100",
                        "description": "For none-mono type, transcript is not required.\n [Transcript Format](/documentation/advanced/transcript-format)\n\nExample: `cekura`\n\n* `cekura` - cekura\n* `vapi` - vapi\n* `retell` - retell\n* `deepgram` - deepgram\n* `pipecat` - pipecat\n* `livekit` - livekit\n* `elevenlabs` - elevenlabs\n* `none-mono` - none-mono",
                        "example": "cekura"
                    },
                    "transcript_json": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Transcript of the call [Transcript Format](/documentation/advanced/transcript-format)\n\nExample (Cekura format):\n```json\n[\n  {\n    \"role\": \"Main Agent\",\n    \"content\": \"Hello! Thank you for calling Acme Corp. How can I help you today?\",\n    \"time\": \"00:00\",\n    \"start_time\": 0.0,\n    \"end_time\": 3.5\n  },\n  {\n    \"role\": \"Testing Agent\",\n    \"content\": \"Hi, I'd like to schedule an appointment for next week.\",\n    \"time\": \"00:04\",\n    \"start_time\": 4.2,\n    \"end_time\": 7.8\n  },\n  {\n    \"role\": \"Main Agent\",\n    \"content\": \"I'd be happy to help you schedule an appointment. What day works best for you?\",\n    \"time\": \"00:08\",\n    \"start_time\": 8.1,\n    \"end_time\": 12.3\n  }\n]\n```",
                        "example": {
                            "key": "value"
                        }
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended\n\nExample: `customer_hung_up`",
                        "example": "example_call_ended_reason"
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer\n\nExample: `+14155552671`",
                        "example": "+1234567890"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "An arbitrary object for storage purpose only. You can put anything here like your internal customer id associated with the call. Not used for processing. You can later get this field from the call object.\n\nExample: `{\"customer_id\": \"cust_123\", \"campaign\": \"spring_2025\", \"notes\": \"Follow-up required\"}`",
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred\n\nExample: `2025-01-15T14:30:00Z`",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "dynamic_variables": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Dictionary of dynamic variables and values. These values will replace variables in double curly braces in the agent description.\n\nExample: `{\"customer_name\": \"John Smith\", \"appointment_date\": \"2025-01-20\", \"store_location\": \"Downtown\"}`",
                        "example": {
                            "key": "value"
                        }
                    }
                }
            },
            "SchemaPostCreateShareableLinkToken": {
                "type": "object",
                "properties": {
                    "expire_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Optional expiration date/time for the token (ISO 8601 format)",
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "SchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob",
                        "example": "Example Name"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs to execute",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Alternative to scenarios - List of tags to filter scenario",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Required when tags are provided",
                        "example": 42
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "Cron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)",
                        "example": "example_crontab_expression"
                    },
                    "timezone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Chicago",
                            "America/Denver",
                            "America/Los_Angeles",
                            "America/New_York",
                            "America/Phoenix",
                            "America/Sao_Paulo",
                            "Asia/Dubai",
                            "Asia/Hong_Kong",
                            "Asia/Kolkata",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Tokyo",
                            "Australia/Melbourne",
                            "Australia/Perth",
                            "Australia/Sydney",
                            "Europe/Amsterdam",
                            "Europe/Berlin",
                            "Europe/London",
                            "Europe/Madrid",
                            "Europe/Moscow",
                            "Europe/Paris",
                            "Europe/Rome",
                            "Pacific/Auckland",
                            "Pacific/Honolulu",
                            "US/Central",
                            "US/Eastern",
                            "US/Mountain",
                            "US/Pacific",
                            "UTC"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "6e7339d971185fa9",
                        "description": "Timezone for the cronjob (default: Project timezone)\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC",
                        "example": "Africa/Abidjan"
                    }
                },
                "required": [
                    "crontab_expression"
                ]
            },
            "SchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric",
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates",
                        "example": "This is an example description"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content",
                        "example": true
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric",
                        "example": "example_prompt"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant",
                        "example": "example_assistant_id"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)",
                        "example": "example_type"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)",
                        "example": "example_eval_type"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics",
                        "example": {
                            "key": "value"
                        }
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI",
                        "example": 100
                    }
                },
                "required": [
                    "assistant_id",
                    "audio_enabled",
                    "description",
                    "display_order",
                    "enum_values",
                    "eval_type",
                    "name",
                    "prompt",
                    "type"
                ]
            },
            "SchemaPostMetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric\n\nExample: `Greeting Quality`",
                        "example": "Example Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what the metric evaluates\n\nExample: `Evaluates whether the agent greets the customer professionally and warmly at the start of the call.`",
                        "example": "This is an example description"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with\n\nExample: `42`",
                        "example": 42
                    },
                    "eval_type": {
                        "enum": [
                            "boolean",
                            "enum",
                            "score"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "76a6f1374feae958",
                        "description": "Type of evaluation (boolean, enum, or score)\n\nExample: `boolean`\n\n* `boolean` - boolean\n* `enum` - enum\n* `score` - score",
                        "example": "boolean"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics\n\nExample: `[\"excellent\", \"good\", \"fair\", \"poor\"]`",
                        "example": {
                            "key": "value"
                        }
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether audio evaluation is enabled for this metric\n\nExample: `False`",
                        "example": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (basic, custom_prompt, custom_code)\n\nExample: `custom_prompt`",
                        "example": "example_type"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric\n\nExample: `Did the agent greet the customer with a friendly and professional tone at the beginning of the call?`",
                        "example": "example_prompt"
                    },
                    "evaluation_trigger": {
                        "enum": [
                            "always",
                            "automatic",
                            "custom"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "ecd3c02e0e393ef5",
                        "description": "The evaluation trigger used for this metric\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom",
                        "example": "always"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "The evaluation trigger prompt used for this metric",
                        "example": "example_evaluation_trigger_prompt"
                    }
                },
                "required": [
                    "agent",
                    "description",
                    "eval_type",
                    "name"
                ]
            },
            "SchemaPostReRunResultDetail": {
                "type": "object",
                "properties": {
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of run IDs",
                        "minItems": 1,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of metric IDs to evaluate",
                        "minItems": 1,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    }
                },
                "required": [
                    "metric_ids",
                    "run_ids"
                ]
            },
            "SchemaPostRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Prompt to improve",
                        "example": "example_prompt"
                    },
                    "category_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of category IDs",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "workflow_metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of workflow metric IDs",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of run IDs to analyze (max 3)",
                        "maxItems": 3,
                        "example": [
                            1,
                            2,
                            3
                        ]
                    }
                },
                "required": [
                    "prompt",
                    "run_ids"
                ]
            },
            "SchemaPostRunScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent ID to run scenarios for\n\nExample: `42`",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with the agent\n\nExample: `asst_xyz789`",
                        "example": "example_assistant_id"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of evaluator IDs to run. Either evaluators or tags must be provided.\n\nExample: `[12, 15, 18, 23]`",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to filter evaluators to run. Either evaluators or tags must be provided.\n\nExample: `[\"booking\", \"happy-path\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "The number of times each evaluator will run\n\nExample: `3`",
                        "example": 100
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for this test run result\n\nExample: `Weekly Regression Test - Jan 2025`",
                        "example": "Example Name"
                    },
                    "outbound_phone_number": {
                        "type": "string",
                        "description": "Override the phone number to use for outbound calls\n\nExample: `+14155551234`",
                        "example": "+1234567890"
                    },
                    "personality_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to override for this run. If not provided, uses the scenario's default personality.\n\nExample: `[5, 7, 9]`"
                    },
                    "test_profile_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of test profile IDs to override for this run. If not provided, uses the scenario's default test profile."
                    },
                    "mode": {
                        "enum": [
                            "same_number",
                            "different_numbers"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "9ea0c9743bd9d873",
                        "default": "same_number",
                        "description": "Using same or different phone numbers for each evaluation\n\n* `same_number` - same_number\n* `different_numbers` - different_numbers",
                        "example": "same_number"
                    }
                }
            },
            "SchemaPostRunScenariosText": {
                "type": "object",
                "description": "Schema for the run_scenarios_text endpoint, which runs scenarios in text mode.",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent ID to run scenarios for\n\nExample: `42`",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with the agent\n\nExample: `asst_xyz789`",
                        "example": "example_assistant_id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for this test run result\n\nExample: `Weekly Regression Test - Jan 2025`",
                        "example": "Example Name"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of evaluator IDs to run. Either evaluators or tags must be provided.\n\nExample: `[12, 15, 18, 23]`",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to filter evaluators to run. Either evaluators or tags must be provided.\n\nExample: `[\"booking\", \"happy-path\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "The number of times each evaluator will run\n\nExample: `3`",
                        "example": 100
                    },
                    "websocket_url": {
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "personality_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to override for this run. If not provided, uses the scenario's default personality."
                    },
                    "test_profile_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of test profile IDs to override for this run. If not provided, uses the scenario's default test profile."
                    }
                }
            },
            "SchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent ID this evaluator is associated with\n\nExample: `42`",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with the agent\n\nExample: `asst_xyz789`",
                        "example": "example_assistant_id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the evaluator scenario\n\nExample: `Appointment Booking - Happy Path`",
                        "example": "Example Name"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality ID to use for the simulated customer\n\nExample: `5`",
                        "example": 100
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for the simulated customer on how to behave during the call\n\nExample: `You are trying to book an appointment for next week. Be polite and provide all requested information.`",
                        "example": "example_instructions"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Description of the expected outcome of this scenario\n\nExample: `The appointment should be successfully scheduled and the customer should receive a confirmation.`",
                        "example": "example_expected_outcome_prompt"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "List of metric IDs to evaluate for this scenario\n\nExample: `[12, 15, 18]`",
                        "example": {
                            "key": "value"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to categorize the evaluator\n\nExample: `[\"booking\", \"happy-path\", \"high-priority\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs available to use during the evaluation\n\nExample: `[\"calendar_check\", \"booking_create\"]`",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for dynamic data\n\nExample: `3`",
                        "example": 100
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for this evaluator\n\nExample: `7`",
                        "example": "+1234567890"
                    }
                },
                "required": [
                    "instructions",
                    "name",
                    "personality"
                ]
            },
            "SchemaPostSimulateScenario": {
                "type": "object",
                "properties": {
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality to use in the simulation",
                        "example": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent to use in the simulation",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Assistant ID to use in the simulation",
                        "example": "example_assistant_id"
                    },
                    "transcript_json": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "JSON representation of the conversation transcript in Cekura format. [Transcript Format](/documentation/advanced/transcript-format)\n\nExample (Cekura format):\n```json\n[\n  {\n    \"role\": \"Main Agent\",\n    \"content\": \"Hello! Thank you for calling. How may I assist you?\",\n    \"time\": \"00:00\",\n    \"start_time\": 0.0,\n    \"end_time\": 2.8\n  },\n  {\n    \"role\": \"Testing Agent\",\n    \"content\": \"I need to check my order status.\",\n    \"time\": \"00:03\",\n    \"start_time\": 3.1,\n    \"end_time\": 5.4\n  }\n]\n```",
                        "example": {
                            "key": "value"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the simulated scenario",
                        "example": "Example Name"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of the scenario",
                        "example": "example_expected_outcome_prompt"
                    }
                },
                "required": [
                    "transcript_json"
                ]
            },
            "SchemaResponseRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "improved_prompt": {
                        "type": "string",
                        "description": "Improved prompt for the AI agent",
                        "example": "example_improved_prompt"
                    },
                    "summary_of_changes": {
                        "type": "string",
                        "description": "Summary of changes made to the prompt",
                        "example": "example_summary_of_changes"
                    }
                }
            },
            "SchemaRun": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Run ID",
                        "example": 123
                    },
                    "provider_call_id": {
                        "type": "string",
                        "description": "Call ID from the provider",
                        "example": "call_abc123xyz"
                    },
                    "scenario": {
                        "type": "integer",
                        "description": "ID of the associated scenario",
                        "example": 100
                    },
                    "scenario_name": {
                        "type": "string",
                        "description": "Scenario name",
                        "example": "example_scenario_name"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "Personality ID",
                        "example": 100
                    },
                    "personality_name": {
                        "type": "string",
                        "description": "Personality name",
                        "example": "example_personality_name"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Agent ID",
                        "example": 42
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Expected outcome prompt",
                        "example": "example_expected_outcome_prompt"
                    },
                    "expected_outcome": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Expected outcome of the run",
                        "example": {
                            "key": "value"
                        }
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Whether the run was successful",
                        "example": true
                    },
                    "evaluation": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Evaluation results of the run",
                        "example": {
                            "key": "value"
                        }
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Call transcript",
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Structured transcript data",
                        "example": {
                            "key": "value"
                        }
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call",
                        "example": 60
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "description": "URL to access the voice recording",
                        "example": "https://example.com"
                    },
                    "status": {
                        "enum": [
                            "running",
                            "completed",
                            "failed",
                            "pending",
                            "in_progress",
                            "evaluating",
                            "in_queue",
                            "timeout"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "39ff4bf28841ae2a",
                        "description": "Current status of the run\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout",
                        "example": "active"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Additional metadata associated with the run",
                        "example": {
                            "custom_field": "custom_value"
                        }
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Feedback provided for the run",
                        "example": "example_feedback"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the run was created",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "executed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the run was executed",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "critical_categories": {
                        "type": "string",
                        "description": "Critical categories identified in the run",
                        "example": "example_critical_categories"
                    },
                    "error_message": {
                        "type": "string",
                        "description": "Error message if run failed",
                        "example": "example_error_message"
                    },
                    "scenario_instructions": {
                        "type": "string",
                        "description": "Instructions provided for the scenario",
                        "example": "example_scenario_instructions"
                    }
                }
            },
            "SchemaScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the evaluator",
                        "example": "Example Name"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to",
                        "example": 42
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario",
                        "example": "example_assistant_id"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality",
                        "example": 100
                    },
                    "personality_name": {
                        "type": "string",
                        "description": "Name of the personality",
                        "example": "example_personality_name"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags of the evaluators",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "tool_ids": {
                        "description": "List of tool IDs to associate with this scenario",
                        "example": "example_tool_ids"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of run IDs",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of metric IDs",
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of metric names",
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number eg: +17776666333",
                        "example": "+1234567890"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message of the evaluator",
                        "example": "example_first_message"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "example": "+1234567890"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls",
                        "example": "+1234567890"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions of the evaluator",
                        "example": "example_instructions"
                    },
                    "simulation_description": {
                        "type": "string",
                        "example": "example_simulation_description"
                    },
                    "information_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the evaluator",
                        "example": {
                            "key1": "value1",
                            "key2": "value2"
                        }
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Expected outcome prompt of the evaluator",
                        "example": "example_expected_outcome_prompt"
                    },
                    "scenario_language": {
                        "enum": [
                            "ar",
                            "bg",
                            "zh",
                            "cs",
                            "da",
                            "nl",
                            "en",
                            "fi",
                            "fr",
                            "de",
                            "el",
                            "hi",
                            "hu",
                            "id",
                            "it",
                            "ja",
                            "ko",
                            "ms",
                            "multi",
                            "no",
                            "pl",
                            "pt",
                            "ro",
                            "ru",
                            "sk",
                            "es",
                            "sv",
                            "tr",
                            "ta",
                            "uk",
                            "vi"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "2d8a97c9b24818a6",
                        "description": "Language of the scenario\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `ta` - Tamil\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "example": "ar"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario",
                        "example": "example_test_profile_data"
                    }
                }
            },
            "SlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_team_name"
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_channel_id"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 100
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "stripe_subscription_id": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "example_stripe_subscription_id"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_trial": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_is_trial"
                    },
                    "pack": {
                        "$ref": "#/components/schemas/PackInline",
                        "example": "example_pack"
                    },
                    "last_payment_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "TestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "transcript": {
                        "type": "string",
                        "example": "example_transcript"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "example": {
                            "segments": [
                                {
                                    "role": "agent",
                                    "content": "Hello, how can I help you?",
                                    "timestamp": "00:00"
                                }
                            ]
                        }
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "example": "example_voice_recording"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://example.com"
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_call_end_reason"
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true,
                        "example": 60
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run"
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "readOnly": true,
                        "example": "CallLog"
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_source_id"
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_metric_reviews"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "TestSetList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "transcript_short": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_transcript_short"
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_call_end_reason"
                    },
                    "duration": {
                        "type": "string",
                        "example": 60
                    },
                    "has_recording": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_has_recording"
                    },
                    "source_model": {
                        "enum": [
                            "CallLog",
                            "Run",
                            ""
                        ],
                        "type": "string",
                        "description": "* `CallLog` - Call Log\n* `Run` - Run",
                        "x-spec-enum-id": "1d8f6db20c0b4cac",
                        "example": "CallLog"
                    },
                    "source_id": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example_source_id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_access"
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true,
                        "example": "example_refresh"
                    }
                }
            },
            "UserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "example": "Example Name"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_project_name"
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_key"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "UserConfiguration": {
                "type": "object",
                "description": "Serializer for UserConfiguration model to handle user settings.\nSupports key-value data storage for various configuration types.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this configuration belongs to",
                        "example": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent this configuration belongs to",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the configuration",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "configuration_type": {
                        "enum": [
                            "undefined",
                            "runs_overview"
                        ],
                        "type": "string",
                        "x-spec-enum-id": "bf0bea22f65083a0",
                        "description": "Type of configuration\n\n* `undefined` - Undefined\n* `runs_overview` - Runs Overview",
                        "example": "undefined"
                    },
                    "data": {
                        "description": "Configuration data stored as key-value pairs",
                        "example": "example_data"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "UserInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "example": "user@example.com"
                    }
                },
                "required": [
                    "email",
                    "id",
                    "name"
                ]
            },
            "UserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_organization_name"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_project_name"
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true,
                        "example": "example_user"
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true,
                        "example": 100
                    },
                    "role": {
                        "enum": [
                            "admin",
                            "member",
                            "view_only"
                        ],
                        "type": "string",
                        "description": "* `admin` - Admin\n* `member` - Member\n* `view_only` - View Only",
                        "x-spec-enum-id": "fe6bf73624126de5",
                        "example": "admin"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "Workflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            },
            "WorkflowDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 123
                    },
                    "agent": {
                        "type": "integer",
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Example Name"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeInline"
                        },
                        "readOnly": true,
                        "example": [
                            "item1",
                            "item2"
                        ]
                    },
                    "edges": {
                        "type": "string",
                        "readOnly": true,
                        "example": "example_edges"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T00:00:00Z"
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "X-CEKURA-API-KEY",
                "in": "header",
                "description": "API Key Authentication. It should be included in the header of each request."
            }
        }
    },
    "servers": [
        {
            "url": "https://api.cekura.ai"
        }
    ]
}