{
    "openapi": "3.0.3",
    "info": {
        "title": "Vocera AI API",
        "version": "v1",
        "description": "Complete API documentation for Vocera AI Platform. This API provides endpoints for managing AI-powered conversations, call analytics, and quality monitoring features."
    },
    "paths": {
        "/enums/": {
            "get": {
                "operationId": "enums_retrieve",
                "tags": [
                    "enums"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/call_log/": {
            "get": {
                "operationId": "observability_call_log_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_call_log_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/{id}/": {
            "get": {
                "operationId": "observability_call_log_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_call_log_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "observability_call_log_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_call_log_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/call_log/{id}/create_scenario/": {
            "post": {
                "operationId": "observability_call_log_create_scenario_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_call_log_mark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_call_log_unmark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/create_scenarios/": {
            "post": {
                "operationId": "observability_call_log_create_scenarios_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/delete_call_logs/": {
            "post": {
                "operationId": "observability_call_log_delete_call_logs_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/evaluate_metrics/": {
            "post": {
                "operationId": "observability_call_log_evaluate_metrics_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/export_call_logs/": {
            "get": {
                "operationId": "observability_call_log_export_call_logs_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/filters/": {
            "get": {
                "operationId": "observability_call_log_filters_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/filters_call_id/": {
            "get": {
                "operationId": "observability_call_log_filters_call_id_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/filters_customer_number/": {
            "get": {
                "operationId": "observability_call_log_filters_customer_number_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/improve_prompt/": {
            "post": {
                "operationId": "observability_call_log_improve_prompt_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_call_log_improve_prompt_issues_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/call_log/rerun_evaluation/": {
            "post": {
                "operationId": "observability_call_log_rerun_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/overall_evaluation/": {
            "get": {
                "operationId": "observability_overall_evaluation_list",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OverallEvaluation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_overall_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/overall_evaluation/{id}/": {
            "get": {
                "operationId": "observability_overall_evaluation_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_overall_evaluation_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "observability_overall_evaluation_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_overall_evaluation_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/overall_evaluation/generate_overall_summary/": {
            "get": {
                "operationId": "observability_overall_evaluation_generate_overall_summary_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/overall_evaluation/realtime/": {
            "get": {
                "operationId": "observability_overall_evaluation_realtime_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_list",
                "description": "Manage external call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is “all” OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallLogDetail"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_retrieve",
                "description": "Manage external call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is “all” OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogDetail"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_call_logs_external_destroy",
                "description": "Manage external call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is “all” OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_rerun_evaluation_create",
                "description": "Manage external call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is “all” OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallLogListExternal"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/observe/": {
            "post": {
                "operationId": "observability_v1_observe_create",
                "description": "Create a new call log entry.\n\nThis endpoint allows users to create a call log by providing necessary data in the request body.\nRequires a valid API key in the headers.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCreateCallLog"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCreateCallLog"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCreateCallLog"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/retell/observe/": {
            "post": {
                "operationId": "observability_v1_retell_observe_create",
                "description": "Handle incoming Retell webhook requests.\n\nThis endpoint processes webhook requests from the Retell service, validates the request data,\nand creates a call log entry based on the received data. Retell sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/vapi/observe/": {
            "post": {
                "operationId": "observability_v1_vapi_observe_create",
                "description": "Handle incoming VAPI webhook requests.\n\nThis endpoint processes webhook requests from the VAPI service, validates the API key,\nand creates a call log entry based on the received data. VAPI sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/schedules/cron-jobs/": {
            "get": {
                "operationId": "schedules_cron_jobs_list",
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "schedules_cron_jobs_create",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/cron-jobs/{id}/": {
            "get": {
                "operationId": "schedules_cron_jobs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_cron_jobs_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "schedules_cron_jobs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "schedules_cron_jobs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/interact/": {
            "post": {
                "operationId": "slack_interact_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/oauth/": {
            "post": {
                "operationId": "slack_oauth_create",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/": {
            "get": {
                "operationId": "slack_slack_workspaces_list",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "slack_slack_workspaces_create",
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/": {
            "get": {
                "operationId": "slack_slack_workspaces_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "slack_slack_workspaces_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "slack_slack_workspaces_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "slack_slack_workspaces_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/create-checkout-session/": {
            "post": {
                "operationId": "subscriptions_create_checkout_session_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/packs/": {
            "get": {
                "operationId": "subscriptions_packs_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pack"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/{id}/": {
            "get": {
                "operationId": "subscriptions_packs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this pack.",
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/stripe/webhook/": {
            "post": {
                "operationId": "subscriptions_stripe_webhook_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/subscriptions/": {
            "get": {
                "operationId": "subscriptions_subscriptions_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/": {
            "get": {
                "operationId": "subscriptions_subscriptions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/cancel/": {
            "post": {
                "operationId": "subscriptions_subscriptions_cancel_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/update_payment_method/": {
            "post": {
                "operationId": "subscriptions_subscriptions_update_payment_method_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/create_portal_session/": {
            "post": {
                "operationId": "subscriptions_subscriptions_create_portal_session_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/aiagents/": {
            "get": {
                "operationId": "test_framework_aiagents_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "test_framework_aiagents_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/aiagents/{id}/": {
            "get": {
                "operationId": "test_framework_aiagents_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "test_framework_aiagents_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_aiagents_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_aiagents_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/aiagents/{id}/copy/": {
            "post": {
                "operationId": "test_framework_aiagents_copy_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/aiagents/{id}/disable_personalities/": {
            "post": {
                "operationId": "test_framework_aiagents_disable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/aiagents/{id}/enable_personalities/": {
            "post": {
                "operationId": "test_framework_aiagents_enable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/aiagents/{id}/personalities/": {
            "get": {
                "operationId": "test_framework_aiagents_personalities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/billing/": {
            "get": {
                "operationId": "test_framework_billing_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Billing"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/runs/": {
            "get": {
                "operationId": "test_framework_billing_runs_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/critical-scenarios/{id}/": {
            "put": {
                "operationId": "test_framework_critical_scenarios_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_critical_scenarios_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/generate_scenarios/": {
            "post": {
                "operationId": "test_framework_generate_scenarios_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metric-reviews/{id}/": {
            "delete": {
                "operationId": "test_framework_metric_reviews_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metric-reviews/delete_reviews/": {
            "post": {
                "operationId": "test_framework_metric_reviews_delete_reviews_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metrics/": {
            "get": {
                "operationId": "test_framework_metrics_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_metrics_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metrics/{id}/": {
            "get": {
                "operationId": "test_framework_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_metrics_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_metrics_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_metrics_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metrics/{id}/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_metrics_add_to_predefined_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metrics/{id}/run_reviews/": {
            "post": {
                "operationId": "test_framework_metrics_run_reviews_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metrics/bulk_create/": {
            "post": {
                "operationId": "test_framework_metrics_bulk_create_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metrics/delete_metrics/": {
            "post": {
                "operationId": "test_framework_metrics_delete_metrics_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metrics/generate_metrics/": {
            "post": {
                "operationId": "test_framework_metrics_generate_metrics_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/personalities/": {
            "get": {
                "operationId": "test_framework_personalities_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "test_framework_personalities_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/personalities/{id}/": {
            "get": {
                "operationId": "test_framework_personalities_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "test_framework_personalities_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_personalities_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_personalities_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/personalities/{id}/fork/": {
            "post": {
                "operationId": "test_framework_personalities_fork_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/phone_number/": {
            "get": {
                "operationId": "test_framework_phone_number_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_phone_number_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/phone_number/{id}/": {
            "get": {
                "operationId": "test_framework_phone_number_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_phone_number_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_phone_number_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_phone_number_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/phone_number/inbound/": {
            "get": {
                "operationId": "test_framework_phone_number_inbound_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/predefined-metrics/": {
            "get": {
                "operationId": "test_framework_predefined_metrics_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_predefined_metrics_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/predefined-metrics/{id}/": {
            "get": {
                "operationId": "test_framework_predefined_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_predefined_metrics_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_predefined_metrics_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_predefined_metrics_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/predefined-metrics/copy/": {
            "post": {
                "operationId": "test_framework_predefined_metrics_copy_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/process-message-response/": {
            "post": {
                "operationId": "test_framework_process_message_response_create",
                "description": "API view to process incoming message responses from VAPI.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/results/": {
            "get": {
                "operationId": "test_framework_results_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_results_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/results/{id}/": {
            "get": {
                "operationId": "test_framework_results_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_results_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_results_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_results_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/results/{id}/create_shareable_link_token/": {
            "post": {
                "operationId": "test_framework_results_create_shareable_link_token_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/results/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_results_evaluate_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/results/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_results_rerun_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/results/{id}/rerun_text/": {
            "post": {
                "operationId": "test_framework_results_rerun_text_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/": {
            "get": {
                "operationId": "test_framework_runs_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_runs_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/{id}/": {
            "get": {
                "operationId": "test_framework_runs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_runs_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_runs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_runs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/runs/{id}/end_call/": {
            "post": {
                "operationId": "test_framework_runs_end_call_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/{id}/get_listen_url/": {
            "get": {
                "operationId": "test_framework_runs_get_listen_url_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_runs_mark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/{id}/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_runs_run_expected_outcome_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_runs_unmark_critical_scenario_wrong_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/improve_prompt/": {
            "post": {
                "operationId": "test_framework_runs_improve_prompt_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/runs/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_runs_improve_prompt_issues_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/": {
            "get": {
                "operationId": "test_framework_scenarios_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_scenarios_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/{id}/": {
            "get": {
                "operationId": "test_framework_scenarios_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_scenarios_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_scenarios_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_scenarios_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/scenarios/{id}/edit/": {
            "post": {
                "operationId": "test_framework_scenarios_edit_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/{id}/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_scenarios_run_scenario_demo_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/{id}/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_scenarios_switch_phone_number_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_scenarios_delete_scenarios_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/run_scenarios/": {
            "post": {
                "operationId": "test_framework_scenarios_run_scenarios_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_scenarios_run_scenarios_text_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/scenarios/tags/": {
            "get": {
                "operationId": "test_framework_scenarios_tags_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-outbound-caller/": {
            "post": {
                "operationId": "test_framework_test_outbound_caller_create",
                "description": "API view to test outbound calls.\nThis view allows users to run scenarios associated with a specific agent\nby updating the phone number in the VAPI system.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/": {
            "get": {
                "operationId": "test_framework_test_sets_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TestSetList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_test_sets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/": {
            "get": {
                "operationId": "test_framework_test_sets_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_test_sets_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_test_sets_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_test_sets_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/add_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_add_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/review_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_review_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/voice_recording_url/": {
            "get": {
                "operationId": "test_framework_test_sets_voice_recording_url_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_log/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_log_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_logs/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_logs_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_run/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_run_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_testsets/": {
            "post": {
                "operationId": "test_framework_test_sets_create_testsets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_list",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentExternal"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_external_create",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_retrieve",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_external_update",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_external_partial_update",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestAIAgentExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_destroy",
                "description": "External API view set for managing AI agents.\nThis view set provides endpoints to create, retrieve, update, and delete\nAI agents associated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_list",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_retrieve",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_list",
                "description": "External API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_retrieve",
                "description": "External API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_update",
                "description": "External API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_partial_update",
                "description": "External API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_list",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_external_create",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_retrieve",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_external_update",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_external_partial_update",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_external_destroy",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_bulk_create_create",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailExternal"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_metrics_create",
                "description": "External API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_list",
                "description": "External API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalityExternal"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_retrieve",
                "description": "External API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalityExternal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_list",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_external_create",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_retrieve",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_external_update",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_external_partial_update",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_external_destroy",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_inbound_list",
                "description": "External API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_list",
                "description": "External API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetricExternal"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_retrieve",
                "description": "External API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetricExternal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/": {
            "get": {
                "operationId": "test_framework_v1_results_external_list",
                "description": "External API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultExternalList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_results_external_retrieve",
                "description": "External API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailExternal"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_external_evaluate_metrics_create",
                "description": "External API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultExternal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_external_rerun_create",
                "description": "External API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultExternal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_external_result_ids_retrieve",
                "description": "External API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultExternal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_retrieve",
                "description": "External API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_expected_outcome_create",
                "description": "External API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_bulk_list",
                "description": "External API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of run IDs",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Run"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_list",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioExternalList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_retrieve",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_external_update",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_external_partial_update",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_external_destroy",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create_scenario_from_transcript_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRunScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_ello_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_jotform_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_livekit_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_text_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_with_websockets_create",
                "description": "External API view set for managing scenarios.\nThis view set provides endpoints to list, create, and manage scenarios\nassociated with a specific organization, authenticated via API key.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAPIKey"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/{id}/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/": {
            "get": {
                "operationId": "user_invites_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invite"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/": {
            "get": {
                "operationId": "user_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_invites_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_invites_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/{id}/accept_invite/": {
            "post": {
                "operationId": "user_invites_accept_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/reject_invite/": {
            "post": {
                "operationId": "user_invites_reject_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/my_invites/": {
            "get": {
                "operationId": "user_invites_my_invites_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/send_invites/": {
            "post": {
                "operationId": "user_invites_send_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/is-active/": {
            "get": {
                "operationId": "user_is_active_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/memberships/": {
            "get": {
                "operationId": "user_memberships_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserMembership"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/memberships/{id}/": {
            "get": {
                "operationId": "user_memberships_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_memberships_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_memberships_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_memberships_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/": {
            "get": {
                "operationId": "user_organizations_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_organizations_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/": {
            "get": {
                "operationId": "user_organizations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_organizations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_organizations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_organizations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/": {
            "get": {
                "operationId": "user_organizations_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/agents/": {
            "get": {
                "operationId": "user_organizations_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_organizations_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/overview/critical-categories/": {
            "get": {
                "operationId": "user_organizations_overview_critical_categories_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/": {
            "get": {
                "operationId": "user_provider_credentials_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProviderCredentialList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_provider_credentials_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/{id}/": {
            "get": {
                "operationId": "user_provider_credentials_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_provider_credentials_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_provider_credentials_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_provider_credentials_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/embedded/login/": {
            "post": {
                "operationId": "user_v1_embedded_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/embedded/refresh/": {
            "post": {
                "operationId": "user_v1_embedded_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/webhook/supabase/": {
            "post": {
                "operationId": "user_webhook_supabase_create",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/edges/": {
            "get": {
                "operationId": "workflows_edges_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Edge"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_edges_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/edges/{id}/": {
            "get": {
                "operationId": "workflows_edges_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_edges_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_edges_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_edges_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/node-metrics/": {
            "get": {
                "operationId": "workflows_node_metrics_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_node_metrics_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetricCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/node-metrics/{id}/": {
            "get": {
                "operationId": "workflows_node_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_node_metrics_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_node_metrics_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_node_metrics_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/nodes/": {
            "get": {
                "operationId": "workflows_nodes_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_nodes_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/nodes/{id}/": {
            "get": {
                "operationId": "workflows_nodes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_nodes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_nodes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_nodes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/workflows/": {
            "get": {
                "operationId": "workflows_workflows_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workflow"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_workflows_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/workflows/{id}/": {
            "get": {
                "operationId": "workflows_workflows_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_workflows_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_workflows_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_workflows_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AIAgentExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "A descriptive name for your agent",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "The phone number assigned to this agent in format (e.g. +1234567890)",
                        "pattern": "^\\+\\d*$",
                        "maxLength": 15,
                        "minLength": 12
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Specifies if this agent handles inbound calls. Set to true for inbound, false for outbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of what this agent does and how it should interact"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "default": "en",
                        "description": "The primary language this agent uses for communication (e.g. 'en' for English)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `hr` - Croatian\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fil` - Filipino\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `ta` - Tamil\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Your assistant's unique identifier from the provider (required for some providers like VAPI)",
                        "maxLength": 255,
                        "minLength": 10
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "The WebSocket URL for connecting to your self-hosted assistant (required if using self-hosted provider)",
                        "format": "uri"
                    },
                    "llm_system_prompt": {
                        "type": "string",
                        "description": "System instructions that guide how user responses are simulated"
                    },
                    "llm_model": {
                        "description": "The language model to use for simulating user responses in chat testing\n\n* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LlmModelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "llm_temperature": {
                        "type": "number",
                        "format": "double",
                        "description": "Controls randomness in simulated responses"
                    },
                    "llm_max_tokens": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Maximum length of simulated responses in tokens"
                    },
                    "predefined_metrics": {}
                },
                "required": [
                    "agent_name",
                    "contact_number",
                    "description",
                    "id",
                    "inbound"
                ]
            },
            "Billing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "text_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "non_text_runs_minutes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_logs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "num_test_cases": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "total_run_minutes": {
                        "type": "string"
                    },
                    "total_call_log_minutes": {
                        "type": "string"
                    },
                    "balance_expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "balance_expiry",
                    "call_logs_count",
                    "created_at",
                    "id",
                    "non_text_runs_minutes",
                    "organization",
                    "text_runs_count",
                    "total_call_log_minutes",
                    "total_run_minutes",
                    "updated_at"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "CallLogDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusA5dEnum"
                            }
                        ],
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    },
                    "call_logs": {
                        "writeOnly": true,
                        "description": "List of call log IDs, int or string `all` to process"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred."
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the call was successful or not."
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether this call has been reviewed."
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Manual feedback provided during review."
                    },
                    "evaluation": {
                        "nullable": true,
                        "description": "JSON object containing evaluation metrics and scores for the call."
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Plain text transcript of the call conversation."
                    },
                    "transcript_object": {
                        "nullable": true,
                        "description": "JSON object containing the transcript of the call. Can be in Vapi, Retell, Deepgram or Vocera's format"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended, such as 'customer disconnected' or 'issue resolved.",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "description": "Point in the conversation where the call ended unexpectedly.",
                        "maxLength": 1000
                    },
                    "dropoff_reason": {
                        "type": "string",
                        "description": "Reason for unexpected call termination.",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "description": "Main topic or subject of the call conversation.",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer participating in the call.",
                        "maxLength": 15
                    },
                    "user_generated_transcript": {
                        "nullable": true,
                        "description": "JSON object containing user-provided transcript data."
                    },
                    "metadata": {
                        "description": "Additional metadata about the call stored as JSON."
                    },
                    "dynamic_variables": {
                        "description": "Dynamic variables used to customize agent behavior during the call."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was last updated."
                    },
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The AI agent that handled this call."
                    }
                },
                "required": [
                    "call_id",
                    "call_logs",
                    "created_at",
                    "critical_categories",
                    "duration",
                    "id",
                    "updated_at",
                    "voice_recording_url"
                ]
            },
            "CallLogList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the call was successful or not."
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether this call has been reviewed."
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusA5dEnum"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Manual feedback provided during review."
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended, such as 'customer disconnected' or 'issue resolved.",
                        "maxLength": 100
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer participating in the call.",
                        "maxLength": 15
                    },
                    "agent": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The AI agent that handled this call."
                    },
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference",
                        "maxLength": 100
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was last updated."
                    }
                },
                "required": [
                    "call_id",
                    "created_at",
                    "duration",
                    "id",
                    "metrics",
                    "updated_at"
                ]
            },
            "CallLogListExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred."
                    },
                    "duration": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the call was successful or not."
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether this call has been reviewed."
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Manual feedback provided during review."
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended, such as 'customer disconnected' or 'issue resolved.",
                        "maxLength": 100
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer participating in the call.",
                        "maxLength": 15
                    },
                    "agent": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The AI agent that handled this call."
                    },
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference",
                        "maxLength": 100
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusA5dEnum"
                    }
                },
                "required": [
                    "call_id",
                    "duration",
                    "id"
                ]
            },
            "CriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string",
                        "maxLength": 1000
                    }
                },
                "required": [
                    "category",
                    "id",
                    "metric"
                ]
            },
            "CriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    }
                },
                "required": [
                    "id",
                    "scenario"
                ]
            },
            "CronJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "timezone": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenarios": {
                        "writeOnly": true
                    },
                    "scenario_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "scenarios_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioInline"
                        },
                        "readOnly": true
                    },
                    "notify_on": {
                        "$ref": "#/components/schemas/NotifyOnEnum"
                    }
                },
                "required": [
                    "agent",
                    "crontab_expression",
                    "id",
                    "scenario_ids",
                    "scenarios",
                    "scenarios_data"
                ]
            },
            "CustomTokenObtainPair": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string"
                    },
                    "agent_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "agent_id",
                    "api_key"
                ]
            },
            "Edge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "source_node",
                    "target_node",
                    "updated_at"
                ]
            },
            "EvalTypeEnum": {
                "enum": [
                    "binary_workflow_adherence",
                    "binary_qualitative",
                    "continuous_qualitative",
                    "numeric",
                    "enum"
                ],
                "type": "string",
                "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
            },
            "EvaluationTriggerEnum": {
                "enum": [
                    "always",
                    "automatic",
                    "custom"
                ],
                "type": "string",
                "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
            },
            "IntervalEnum": {
                "enum": [
                    "month",
                    "year"
                ],
                "type": "string",
                "description": "* `month` - Monthly\n* `year` - Yearly"
            },
            "Invite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InviteStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "email",
                    "id",
                    "organization",
                    "organization_name",
                    "status",
                    "updated_at"
                ]
            },
            "InviteStatusEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "rejected"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected"
            },
            "LanguageEnum": {
                "enum": [
                    "ar",
                    "bg",
                    "zh",
                    "hr",
                    "cs",
                    "da",
                    "nl",
                    "en",
                    "fil",
                    "fi",
                    "fr",
                    "de",
                    "el",
                    "hi",
                    "hu",
                    "id",
                    "it",
                    "ja",
                    "ko",
                    "ms",
                    "no",
                    "pl",
                    "pt",
                    "ro",
                    "ru",
                    "sk",
                    "es",
                    "sv",
                    "ta",
                    "tr",
                    "uk",
                    "vi"
                ],
                "type": "string",
                "description": "* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `hr` - Croatian\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fil` - Filipino\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `ta` - Tamil\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
            },
            "LlmModelEnum": {
                "enum": [
                    "gpt-4o",
                    "gpt-4o-mini",
                    "claude-3-5-sonnet-20240620"
                ],
                "type": "string",
                "description": "* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620"
            },
            "MembershipInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "user"
                ]
            },
            "Metric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "description": "List of possible values when eval_type is enum"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "MetricDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "When this metric should be evaluated - can be automatic, manual, or always\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt used to determine when to trigger evaluation if evaluation_trigger is manual"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "Vocera-defined metric code",
                        "maxLength": 255
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true
                    },
                    "reviews": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenarios": {
                        "writeOnly": true
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "name",
                    "overall_score",
                    "reviews",
                    "total_score"
                ]
            },
            "MetricDetailExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "When this metric should be evaluated - can be automatic, manual, or always\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt used to determine when to trigger evaluation if evaluation_trigger is manual"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "overall_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "name",
                    "overall_score",
                    "total_score"
                ]
            },
            "MetricEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The ID of the AI agent this metric belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "default": "continuous_qualitative",
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "default": "",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "When this metric should be evaluated - can be automatic, manual, or always\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt used to determine when to trigger evaluation if evaluation_trigger is manual"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "Vocera-defined metric code",
                        "maxLength": 255
                    },
                    "display_order": {
                        "type": "integer",
                        "default": 1,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "scenarios": {
                        "writeOnly": true,
                        "description": "List of scenarios data"
                    },
                    "overall_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "overall_score",
                    "total_score"
                ]
            },
            "MetricList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what this metric measures"
                    },
                    "function_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the function used to calculate this metric",
                        "maxLength": 255
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "When this metric should be evaluated - can be automatic, manual, or always\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt used to determine when to trigger evaluation if evaluation_trigger is manual"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "Vocera-defined metric code",
                        "maxLength": 255
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs associated with this metric"
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "name",
                    "overall_score",
                    "total_score"
                ]
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metrics",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metric": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "metrics",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "main_metric": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "main_metric",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "metric_data",
                    "node",
                    "updated_at"
                ]
            },
            "NodeMetricCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer"
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "node",
                    "updated_at"
                ]
            },
            "NotifyOnEnum": {
                "enum": [
                    "never",
                    "success",
                    "failure",
                    "both"
                ],
                "type": "string",
                "description": "* `never` - Never\n* `success` - Success\n* `failure` - Failure\n* `both` - Both"
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "max_agents_limit",
                    "max_members_limit",
                    "members",
                    "name",
                    "retell_api_key",
                    "updated_at",
                    "vapi_api_key"
                ]
            },
            "OverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "id"
                ]
            },
            "Pack": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/IntervalEnum"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "monitoring_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "premium_slack_support": {
                        "type": "boolean"
                    },
                    "custom_api_integrations": {
                        "type": "boolean"
                    },
                    "dedicated_support_engineer": {
                        "type": "boolean"
                    },
                    "sla_hours": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "custom_feature_requests": {
                        "type": "boolean"
                    },
                    "simulate_scenarios": {
                        "type": "boolean"
                    },
                    "downloadable_reports": {
                        "type": "boolean"
                    },
                    "slack_alerts": {
                        "type": "boolean"
                    },
                    "custom_sso": {
                        "type": "boolean"
                    },
                    "dedicated_cloud_instance": {
                        "type": "boolean"
                    },
                    "on_prem_deployment": {
                        "type": "boolean"
                    },
                    "multiple_organizations": {
                        "type": "boolean"
                    },
                    "hippa_compliance": {
                        "type": "boolean"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "price",
                    "updated_at"
                ]
            },
            "PackInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "id"
                ]
            },
            "PaginatedCallLogListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogList"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricCategoryList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricCategory"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricScenarioList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricScenario"
                        }
                    }
                }
            },
            "PaginatedResultExternalList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResultExternal"
                        }
                    }
                }
            },
            "PaginatedResultListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResultList"
                        }
                    }
                }
            },
            "PaginatedRunListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunList"
                        }
                    }
                }
            },
            "PaginatedScenarioExternalList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioExternal"
                        }
                    }
                }
            },
            "PaginatedScenarioList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Scenario"
                        }
                    }
                }
            },
            "PatchedCallLogDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusA5dEnum"
                            }
                        ],
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    },
                    "call_logs": {
                        "writeOnly": true,
                        "description": "List of call log IDs, int or string `all` to process"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred."
                    },
                    "success": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the call was successful or not."
                    },
                    "is_reviewed": {
                        "type": "boolean",
                        "description": "Whether this call has been reviewed."
                    },
                    "feedback": {
                        "type": "string",
                        "description": "Manual feedback provided during review."
                    },
                    "evaluation": {
                        "nullable": true,
                        "description": "JSON object containing evaluation metrics and scores for the call."
                    },
                    "transcript": {
                        "type": "string",
                        "description": "Plain text transcript of the call conversation."
                    },
                    "transcript_object": {
                        "nullable": true,
                        "description": "JSON object containing the transcript of the call. Can be in Vapi, Retell, Deepgram or Vocera's format"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended, such as 'customer disconnected' or 'issue resolved.",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "description": "Point in the conversation where the call ended unexpectedly.",
                        "maxLength": 1000
                    },
                    "dropoff_reason": {
                        "type": "string",
                        "description": "Reason for unexpected call termination.",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "description": "Main topic or subject of the call conversation.",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer participating in the call.",
                        "maxLength": 15
                    },
                    "user_generated_transcript": {
                        "nullable": true,
                        "description": "JSON object containing user-provided transcript data."
                    },
                    "metadata": {
                        "description": "Additional metadata about the call stored as JSON."
                    },
                    "dynamic_variables": {
                        "description": "Dynamic variables used to customize agent behavior during the call."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was created."
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this record was last updated."
                    },
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The AI agent that handled this call."
                    }
                }
            },
            "PatchedCriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "PatchedCronJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "timezone": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenarios": {
                        "writeOnly": true
                    },
                    "scenario_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "scenarios_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioInline"
                        },
                        "readOnly": true
                    },
                    "notify_on": {
                        "$ref": "#/components/schemas/NotifyOnEnum"
                    }
                }
            },
            "PatchedEdge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InviteStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedMetricEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The ID of the AI agent this metric belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "default": "continuous_qualitative",
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "default": "",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "When this metric should be evaluated - can be automatic, manual, or always\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "Prompt used to determine when to trigger evaluation if evaluation_trigger is manual"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "description": "Vocera-defined metric code",
                        "maxLength": 255
                    },
                    "display_order": {
                        "type": "integer",
                        "default": 1,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "scenarios": {
                        "writeOnly": true,
                        "description": "List of scenarios data"
                    },
                    "overall_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    }
                }
            },
            "PatchedNode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedNodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedOverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    }
                }
            },
            "PatchedPhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedPredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "audio_enabled": {
                        "type": "boolean"
                    },
                    "prompt_enabled": {
                        "type": "boolean"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enum_values": {},
                    "organization": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ProviderEnum"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedRequestAIAgentExternal": {
                "type": "object",
                "properties": {
                    "agent_name": {
                        "type": "string",
                        "description": "A descriptive name for your agent",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "The phone number assigned to this agent in format (e.g. +1234567890)",
                        "pattern": "^\\+\\d*$",
                        "maxLength": 15,
                        "minLength": 12
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Specifies if this agent handles inbound calls. Set to true for inbound, false for outbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of what this agent does and how it should interact"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "default": "en",
                        "description": "The primary language this agent uses for communication (e.g. 'en' for English)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `hr` - Croatian\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fil` - Filipino\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `ta` - Tamil\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Your assistant's unique identifier from the provider (required for some providers like VAPI)",
                        "maxLength": 255,
                        "minLength": 10
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "The WebSocket URL for connecting to your self-hosted assistant (required if using self-hosted provider)",
                        "format": "uri"
                    },
                    "predefined_metrics": {}
                }
            },
            "PatchedRequestCriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    }
                }
            },
            "PatchedRequestScenario": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Personality to use for this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for running this scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of this scenario"
                    }
                }
            },
            "PatchedResultDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this test result",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this result belongs to"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "description": "Percentage of successful test runs in this result"
                    },
                    "overall_evaluation": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Overall evaluation data for all test runs in this result"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this test was run in text-only mode"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When this result was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this result was last updated"
                    }
                }
            },
            "PatchedRun": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The scenario being tested in this run"
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the scenario this run belongs to"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Prompt describing the expected outcome for this scenario run"
                    },
                    "expected_outcome": {
                        "readOnly": true,
                        "description": "Expected outcome criteria for this test run"
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this test run was successful"
                    },
                    "evaluation": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Evaluation results and metrics for this test run"
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Text transcript of the conversation"
                    },
                    "transcript_object": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Structured conversation transcript with detailed message data"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Email address associated with this test run"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "metadata": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Additional metadata associated with this test run"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "User feedback about this test run"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this test run was created"
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    }
                }
            },
            "PatchedScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Personality to use for this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "tags": {
                        "description": "List of tags associated with this scenario"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of IDs for the last run of this scenario"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used for outbound calls in this scenario"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message to send when starting the scenario",
                        "maxLength": 1000
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Phone number to receive calls for this scenario"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for running this scenario"
                    },
                    "simulation_description": {
                        "type": "string",
                        "description": "Description of the scenario when created through simulation"
                    },
                    "information_fields": {
                        "description": "Additional information fields for the scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of this scenario"
                    }
                }
            },
            "PatchedSlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "PatchedTestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "nullable": true
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PersonalityExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the personality",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the personality's characteristics and behavior"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Primary language used by this personality\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `hr` - Croatian\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fil` - Filipino\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `ta` - Tamil\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name"
                ]
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "number",
                    "phone_number_id",
                    "scenario_id",
                    "scenario_name"
                ]
            },
            "PhoneNumberInbound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "number",
                    "phone_number_id"
                ]
            },
            "PredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "audio_enabled": {
                        "type": "boolean"
                    },
                    "prompt_enabled": {
                        "type": "boolean"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enum_values": {},
                    "organization": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name"
                ]
            },
            "PredefinedMetricExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name"
                ]
            },
            "PriorityEnum": {
                "enum": [
                    "high",
                    "medium",
                    "low",
                    "not_a_bug"
                ],
                "type": "string",
                "description": "* `high` - High\n* `medium` - Medium\n* `low` - Low\n* `not_a_bug` - Not A Bug"
            },
            "ProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ProviderEnum"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "key",
                    "organization"
                ]
            },
            "ProviderCredentialList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ProviderEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization"
                ]
            },
            "ProviderEnum": {
                "enum": [
                    "vapi",
                    "retell"
                ],
                "type": "string",
                "description": "* `vapi` - Vapi\n* `retell` - Retell"
            },
            "RequestAIAgentExternal": {
                "type": "object",
                "properties": {
                    "agent_name": {
                        "type": "string",
                        "description": "A descriptive name for your agent",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "The phone number assigned to this agent in format (e.g. +1234567890)",
                        "pattern": "^\\+\\d*$",
                        "maxLength": 15,
                        "minLength": 12
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Specifies if this agent handles inbound calls. Set to true for inbound, false for outbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of what this agent does and how it should interact"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "default": "en",
                        "description": "The primary language this agent uses for communication (e.g. 'en' for English)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `hr` - Croatian\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fil` - Filipino\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `ta` - Tamil\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Your assistant's unique identifier from the provider (required for some providers like VAPI)",
                        "maxLength": 255,
                        "minLength": 10
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "The WebSocket URL for connecting to your self-hosted assistant (required if using self-hosted provider)",
                        "format": "uri"
                    },
                    "predefined_metrics": {}
                },
                "required": [
                    "agent_name",
                    "contact_number",
                    "description",
                    "inbound"
                ]
            },
            "RequestCallLogDetail": {
                "type": "object",
                "properties": {
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    },
                    "call_logs": {
                        "writeOnly": true,
                        "description": "List of call log IDs, int or string `all` to process"
                    }
                },
                "required": [
                    "call_logs",
                    "critical_categories",
                    "voice_recording_url"
                ]
            },
            "RequestCreateCallLog": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "A unique identifier for the call for your reference",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent ID as shown on your dashboard. Either `agent` or `assistant_id` must be provided"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID associated with agent. Either `agent` or `assistant_id` must be provided."
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Audio file of the call recording. Either `voice_recording` or `voice_recording_url` must be provided."
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL to the call recording audio file. Either `voice_recording` or `voice_recording_url` must be provided for detailed analysis. We do support transcript only evaluation if you don't have/want to share a recording."
                    },
                    "transcript_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TranscriptTypeEnum"
                            }
                        ],
                        "writeOnly": true
                    },
                    "transcript_json": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "JSON object containing the transcript of the call. Can be in Vapi, Retell, Deepgram or Vocera's format"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "description": "The reason why the call was ended, such as 'customer disconnected' or 'issue resolved.",
                        "maxLength": 100
                    },
                    "customer_number": {
                        "type": "string",
                        "description": "The phone number of the customer participating in the call.",
                        "maxLength": 15
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "An arbitrary object for storage purpose only. You can put anything here like your internal customer id associated with the call. Not used for processing. You can later get this field from the call object."
                    },
                    "dynamic_variables": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Dictionary of dynamic variables and values. These values will replace variables in double curly braces in the agent description."
                    }
                },
                "required": [
                    "call_id"
                ]
            },
            "RequestGenerateMetricsMetricCreate": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the AI agent to generate metrics for"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly"
                    },
                    "num_metrics": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 1,
                        "description": "Number of metrics to generate"
                    }
                }
            },
            "RequestMetricEdit": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "The ID of the AI agent this metric belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for this metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "Detailed description of what this metric measures"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "default": "continuous_qualitative",
                        "description": "Type of evaluation\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of possible values when eval_type is enum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric requires audio analysis"
                    },
                    "prompt_enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether this metric uses a custom prompt for evaluation"
                    },
                    "prompt": {
                        "type": "string",
                        "default": "",
                        "description": "Custom prompt used when evaluating this metric if prompt_enabled is true"
                    },
                    "display_order": {
                        "type": "integer",
                        "default": 1,
                        "description": "Order in which this metric should be displayed relative to other metrics"
                    },
                    "overall_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    }
                },
                "required": [
                    "name",
                    "overall_score",
                    "total_score"
                ]
            },
            "RequestReRunResultDetail": {
                "type": "object",
                "properties": {
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "metric_ids",
                    "run_ids"
                ]
            },
            "RequestRunScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the AI agent to run scenarios for"
                    },
                    "assistant_id": {
                        "type": "integer",
                        "description": "The ID of the assistant to run scenarios for"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs to run"
                    },
                    "freq": {
                        "type": "integer",
                        "default": 1,
                        "description": "The frequency of the scenarios to run"
                    }
                },
                "required": [
                    "scenarios"
                ]
            },
            "RequestScenario": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Personality to use for this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for running this scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of this scenario"
                    }
                },
                "required": [
                    "inbound_phone_number_data",
                    "metric_names",
                    "personality_name"
                ]
            },
            "ResultDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this test result",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this result belongs to"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "description": "Percentage of successful test runs in this result"
                    },
                    "overall_evaluation": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Overall evaluation data for all test runs in this result"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this test was run in text-only mode"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When this result was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this result was last updated"
                    }
                },
                "required": [
                    "agent",
                    "completed_runs_count",
                    "critical_categories",
                    "failed_runs_count",
                    "id",
                    "met_expected_outcome_count",
                    "metrics",
                    "overall_evaluation",
                    "run_as_text",
                    "runs",
                    "scenario_names",
                    "status",
                    "success_rate",
                    "success_runs_count",
                    "total_duration",
                    "total_expected_outcome_count",
                    "total_runs_count",
                    "updated_at"
                ]
            },
            "ResultDetailExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this result belongs to"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "met_expected_outcome_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Percentage of successful test runs in this result"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "description": "Whether this test was run in text-only mode"
                    },
                    "runs": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Dictionary mapping run IDs to detailed run information including scenario, evaluation and transcript data"
                    },
                    "is_cronjob": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When this result was created"
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "is_cronjob",
                    "met_expected_outcome_count",
                    "runs",
                    "total_expected_outcome_count"
                ]
            },
            "ResultExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this result belongs to"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Percentage of successful test runs in this result"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "description": "Whether this test was run in text-only mode"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When this result was created"
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "runs"
                ]
            },
            "ResultList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this test result",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this result belongs to"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "met_expected_outcome_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Percentage of successful test runs in this result"
                    },
                    "total_runs_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Total number of runs in this test result"
                    },
                    "completed_runs_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of runs that have completed (either successfully or with failure)"
                    },
                    "success_runs_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of runs that completed successfully"
                    },
                    "failed_runs_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of runs that failed"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "description": "Whether this test was run in text-only mode"
                    },
                    "scenario_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "List of scenario names included in this test result"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of run details including scenario name and phone number information"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When this result was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this result was last updated"
                    }
                },
                "required": [
                    "agent",
                    "completed_runs_count",
                    "failed_runs_count",
                    "id",
                    "met_expected_outcome_count",
                    "runs",
                    "scenario_names",
                    "success_runs_count",
                    "total_expected_outcome_count",
                    "total_runs_count",
                    "updated_at"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "admin",
                    "member"
                ],
                "type": "string",
                "description": "* `admin` - Admin\n* `member` - Member"
            },
            "Run": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The scenario being tested in this run"
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the scenario this run belongs to"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Prompt describing the expected outcome for this scenario run"
                    },
                    "expected_outcome": {
                        "readOnly": true,
                        "description": "Expected outcome criteria for this test run"
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this test run was successful"
                    },
                    "evaluation": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Evaluation results and metrics for this test run"
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Text transcript of the conversation"
                    },
                    "transcript_object": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Structured conversation transcript with detailed message data"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Email address associated with this test run"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "metadata": {
                        "readOnly": true,
                        "nullable": true,
                        "description": "Additional metadata associated with this test run"
                    },
                    "feedback": {
                        "type": "string",
                        "description": "User feedback about this test run"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this test run was created"
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    }
                },
                "required": [
                    "critical_categories",
                    "duration",
                    "email_id",
                    "evaluation",
                    "expected_outcome",
                    "expected_outcome_prompt",
                    "id",
                    "metadata",
                    "outbound_number",
                    "scenario",
                    "scenario_name",
                    "status",
                    "success",
                    "timestamp",
                    "transcript",
                    "transcript_object",
                    "voice_recording_url"
                ]
            },
            "RunList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The scenario being tested in this run"
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status0ccEnum"
                            }
                        ],
                        "description": "Current status of the test run (running, completed, failed, etc)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
                    },
                    "expected_outcome": {
                        "description": "Expected outcome criteria for this test run"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Whether this test run was successful"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "When this test run was created"
                    },
                    "metadata": {
                        "nullable": true,
                        "description": "Additional metadata associated with this test run"
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "critical_categories",
                    "duration",
                    "id",
                    "metrics",
                    "outbound_number",
                    "scenario_name",
                    "timestamp"
                ]
            },
            "Scenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Personality to use for this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "tags": {
                        "description": "List of tags associated with this scenario"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of IDs for the last run of this scenario"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used for outbound calls in this scenario"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message to send when starting the scenario",
                        "maxLength": 1000
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Phone number to receive calls for this scenario"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for running this scenario"
                    },
                    "simulation_description": {
                        "type": "string",
                        "description": "Description of the scenario when created through simulation"
                    },
                    "information_fields": {
                        "description": "Additional information fields for the scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of this scenario"
                    }
                },
                "required": [
                    "id",
                    "inbound_phone_number_data",
                    "metric_names",
                    "personality_name",
                    "phone_number",
                    "runs"
                ]
            },
            "ScenarioExternal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions for running this scenario"
                    }
                },
                "required": [
                    "expected_outcome_prompt",
                    "id",
                    "personality_name",
                    "phone_number"
                ]
            },
            "ScenarioInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this scenario belongs to"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Personality to use for this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "personality_name"
                ]
            },
            "SlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "organization",
                    "team_name"
                ]
            },
            "SourceModelEnum": {
                "enum": [
                    "CallLog",
                    "Run"
                ],
                "type": "string",
                "description": "* `CallLog` - Call Log\n* `Run` - Run"
            },
            "Status0ccEnum": {
                "enum": [
                    "running",
                    "completed",
                    "failed",
                    "pending",
                    "in_progress",
                    "evaluating",
                    "in_queue"
                ],
                "type": "string",
                "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue"
            },
            "StatusA5dEnum": {
                "enum": [
                    "success",
                    "failure",
                    "reviewed_success",
                    "reviewed_failure"
                ],
                "type": "string",
                "description": "* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "nullable": true
                    },
                    "stripe_subscription_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "pack": {
                        "$ref": "#/components/schemas/PackInline"
                    },
                    "last_payment_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "expire_at",
                    "id",
                    "last_payment_at",
                    "pack",
                    "stripe_subscription_id",
                    "updated_at"
                ]
            },
            "TestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "nullable": true
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "duration",
                    "id",
                    "metric_reviews",
                    "source_id",
                    "source_model",
                    "updated_at",
                    "voice_recording",
                    "voice_recording_url"
                ]
            },
            "TestSetList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "has_recording": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "source_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "duration",
                    "has_recording",
                    "id",
                    "transcript_short",
                    "updated_at"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TranscriptTypeEnum": {
                "enum": [
                    "vocera",
                    "vapi",
                    "retell",
                    "deepgram"
                ],
                "type": "string",
                "description": "* `vocera` - vocera\n* `vapi` - vapi\n* `retell` - retell\n* `deepgram` - deepgram"
            },
            "UserAPIKey": {
                "type": "object",
                "properties": {
                    "organization": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "key",
                    "organization"
                ]
            },
            "UserInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    }
                },
                "required": [
                    "email",
                    "id",
                    "name"
                ]
            },
            "UserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "organization_name",
                    "updated_at",
                    "user"
                ]
            },
            "Workflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "id",
                    "name",
                    "updated_at"
                ]
            },
            "WorkflowDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeInline"
                        },
                        "readOnly": true
                    },
                    "edges": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "edges",
                    "id",
                    "name",
                    "nodes",
                    "updated_at"
                ]
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "X-VOCERA-API-KEY",
                "in": "header",
                "description": "API Key Authentication. It should be included in the header of each request."
            }
        }
    },
    "servers": [
        {
            "url": "https://new-prod.vocera.ai"
        }
    ]
}