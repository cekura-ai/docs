{
    "openapi": "3.1.0",
    "info": {
        "title": "Vocera AI API",
        "version": "v1",
        "description": "Complete API documentation for Vocera AI Platform. This API provides endpoints for managing AI-powered conversations, call analytics, and quality monitoring features."
    },
    "paths": {
        "/a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7/run/": {
            "get": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_retrieve",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7_run_create",
                "tags": [
                    "a8c8aef15013e2e52ccf6000350258a1eab6cd2a11e62f592c5e19092d7204d7"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/discord/servers/": {
            "get": {
                "operationId": "discord_servers_list",
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DiscordServer"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "discord_servers_create",
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/discord/servers/{id}/": {
            "get": {
                "operationId": "discord_servers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "discord_servers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordServer"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "discord_servers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordServer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "discord_servers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/discord/servers/{id}/verify/": {
            "get": {
                "operationId": "discord_servers_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this discord server.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordServer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/enums/": {
            "get": {
                "operationId": "enums_retrieve",
                "tags": [
                    "enums"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/call-logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_list",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results from this timestamp (e.g. 2025-01-01T00:00:00Z)"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results to this timestamp (e.g. 2025-01-31T23:59:59Z)"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Comma-separated list of call log IDs (e.g., 1,2,3)"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogV2List"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_list",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results from this timestamp (e.g. 2025-01-01T00:00:00Z)"
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results to this timestamp (e.g. 2025-01-31T23:59:59Z)"
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Comma-separated list of call log IDs (e.g., 1,2,3)"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogV2List"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_call_logs_external_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_call_logs_external_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_call_logs_external_partial_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_call_logs_external_destroy",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenario_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_mark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_unmark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_create_scenarios_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_delete_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_evaluate_metrics_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_export_call_logs_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_call_id_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_external_filters_customer_number_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_improve_prompt_issues_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs-external/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_external_rerun_evaluation_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/": {
            "get": {
                "operationId": "observability_v1_call_logs_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_call_logs_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_call_logs_partial_update",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCallLogV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_call_logs_destroy",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/create_scenario/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenario_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_mark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "observability_v1_call_logs_unmark_critical_scenario_wrong_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this call log.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/create_scenarios/": {
            "post": {
                "operationId": "observability_v1_call_logs_create_scenarios_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/delete_call_logs/": {
            "post": {
                "operationId": "observability_v1_call_logs_delete_call_logs_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/evaluate_metrics/": {
            "post": {
                "operationId": "observability_v1_call_logs_evaluate_metrics_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/export_call_logs/": {
            "get": {
                "operationId": "observability_v1_call_logs_export_call_logs_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_call_id/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_call_id_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/filters_customer_number/": {
            "get": {
                "operationId": "observability_v1_call_logs_filters_customer_number_retrieve",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/improve_prompt_issues/": {
            "post": {
                "operationId": "observability_v1_call_logs_improve_prompt_issues_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CallLogV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/call-logs/rerun_evaluation/": {
            "post": {
                "operationId": "observability_v1_call_logs_rerun_evaluation_create",
                "description": "Manage call logs.\n\nThis view provides endpoints to retrieve, delete, and list call logs for external users.\nA call log represents a record of a communication event, including details such as the agent involved,\nthe call ID, and the outcome of the call. This information is crucial for monitoring and evaluating\nthe performance of agents and the quality of interactions.\n\nRequired only when call_logs is \"all\" OR is number of first N calls. Only either of agent_id or assistant_id is required",
                "parameters": [
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "duration__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duration__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customer_number__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer_number__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "call_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ids",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metrics",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "call_ended_reason_not_equals",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCallLogDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCallLogListList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/elevenlabs/observe/": {
            "post": {
                "operationId": "observability_v1_elevenlabs_observe_create",
                "description": "Handle incoming ElevenLabs webhook requests.\n\nThis endpoint processes webhook requests from the ElevenLabs service, validates the request data,\nand creates a call log entry based on the received data. ElevenLabs sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/observe/": {
            "post": {
                "operationId": "observability_v1_observe_create",
                "description": "Create a new call log entry.\n\nThis endpoint allows users to create a call log by providing necessary data in the request body.\nRequires a valid API key in the headers.",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateCallLog"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallLogList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_list",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OverallEvaluation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "observability_v1_overall_evaluation_create",
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/{id}/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "observability_v1_overall_evaluation_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OverallEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "observability_v1_overall_evaluation_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOverallEvaluation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "observability_v1_overall_evaluation_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this overall evaluation.",
                        "required": true
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/generate_overall_summary/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_generate_overall_summary_retrieve",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/overall_evaluation/realtime/": {
            "get": {
                "operationId": "observability_v1_overall_evaluation_realtime_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by agent",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Start time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "End time"
                    },
                    {
                        "in": "query",
                        "name": "aggregation_period",
                        "schema": {
                            "enum": [
                                "hour",
                                "day",
                                "week"
                            ],
                            "type": "string",
                            "default": "day",
                            "minLength": 1
                        },
                        "description": "Aggregation period\n\n* `hour` - Hour\n* `day` - Day\n* `week` - Week"
                    },
                    {
                        "in": "query",
                        "name": "category_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by category"
                    },
                    {
                        "in": "query",
                        "name": "issue_type",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "when category_id is provided, options are 'new_issues', 'continued_issues', 'new_agents' or empty"
                    },
                    {
                        "in": "query",
                        "name": "metric_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by metric"
                    },
                    {
                        "in": "query",
                        "name": "topic",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter by topic"
                    },
                    {
                        "in": "query",
                        "name": "dropoff_point",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter by dropoff point"
                    }
                ],
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OverallEvaluation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/observability/v1/retell/observe/": {
            "post": {
                "operationId": "observability_v1_retell_observe_create",
                "description": "Handle incoming Retell webhook requests.\n\nThis endpoint processes webhook requests from the Retell service, validates the request data,\nand creates a call log entry based on the received data. Retell sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/observability/v1/vapi/observe/": {
            "post": {
                "operationId": "observability_v1_vapi_observe_create",
                "description": "Handle incoming VAPI webhook requests.\n\nThis endpoint processes webhook requests from the VAPI service, validates the API key,\nand creates a call log entry based on the received data. VAPI sends webhooks at the end of the call,\nproviding important information about the interaction.",
                "tags": [
                    "observability"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by agent id"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by project id"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs-external/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_external_list",
                "description": "List all scheduled jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by agent id"
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by project id"
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "schedules_v1_cron_jobs_external_create",
                "description": "Create a new scheduled job",
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs-external/{id}/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_external_retrieve",
                "description": "Retrieve a scheduled job by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_external_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_external_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_external_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/schedules/v1/cron-jobs/{id}/": {
            "get": {
                "operationId": "schedules_v1_cron_jobs_retrieve",
                "description": "Retrieve a scheduled job by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "schedules_v1_cron_jobs_update",
                "description": "Update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "schedules_v1_cron_jobs_partial_update",
                "description": "Partially update an existing scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostCronJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "schedules_v1_cron_jobs_destroy",
                "description": "Delete a scheduled job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this cron job.",
                        "required": true
                    }
                ],
                "tags": [
                    "schedules"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/events/": {
            "post": {
                "operationId": "slack_events_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/interact/": {
            "post": {
                "operationId": "slack_interact_create",
                "description": "Handle Slack interactive component callbacks",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/oauth/": {
            "post": {
                "operationId": "slack_oauth_create",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/": {
            "get": {
                "operationId": "slack_slack_workspaces_list",
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "slack_slack_workspaces_create",
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/": {
            "get": {
                "operationId": "slack_slack_workspaces_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "slack_slack_workspaces_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "slack_slack_workspaces_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlackWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "slack_slack_workspaces_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/get_channels/": {
            "get": {
                "operationId": "slack_slack_workspaces_get_channels_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/slack/slack-workspaces/{id}/verify/": {
            "get": {
                "operationId": "slack_slack_workspaces_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this slack workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "slack"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/create-checkout-session/": {
            "post": {
                "operationId": "subscriptions_create_checkout_session_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/packs/": {
            "get": {
                "operationId": "subscriptions_packs_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pack"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/{id}/": {
            "get": {
                "operationId": "subscriptions_packs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this pack.",
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/packs/add_pack/": {
            "post": {
                "operationId": "subscriptions_packs_add_pack_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Pack"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pack"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/stripe/webhook/": {
            "post": {
                "operationId": "subscriptions_stripe_webhook_create",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subscriptions/subscriptions/": {
            "get": {
                "operationId": "subscriptions_subscriptions_list",
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/": {
            "get": {
                "operationId": "subscriptions_subscriptions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/cancel/": {
            "post": {
                "operationId": "subscriptions_subscriptions_cancel_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/reactivate/": {
            "post": {
                "operationId": "subscriptions_subscriptions_reactivate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/{id}/update_payment_method/": {
            "post": {
                "operationId": "subscriptions_subscriptions_update_payment_method_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subscriptions/subscriptions/create_portal_session/": {
            "post": {
                "operationId": "subscriptions_subscriptions_create_portal_session_create",
                "tags": [
                    "subscriptions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/": {
            "get": {
                "operationId": "test_framework_billing_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Billing"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/runs/": {
            "get": {
                "operationId": "test_framework_billing_runs_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/billing/status/": {
            "get": {
                "operationId": "test_framework_billing_status_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/critical-categories/{id}/": {
            "put": {
                "operationId": "test_framework_critical_categories_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_critical_categories_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/generate_scenarios/": {
            "post": {
                "operationId": "test_framework_generate_scenarios_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/{id}/": {
            "put": {
                "operationId": "test_framework_metric_reviews_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_metric_reviews_partial_update",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetricReviewInline"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_metric_reviews_destroy",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/metric-reviews/{id}/process_feedback/": {
            "post": {
                "operationId": "test_framework_metric_reviews_process_feedback_create",
                "description": "Process feedback for a metric description and evaluation trigger.\n\nThis endpoint takes agent description, transcript, current metric description,\ncurrent evaluation trigger, and feedback to generate improved versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric review.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/metric-reviews/delete_reviews/": {
            "post": {
                "operationId": "test_framework_metric_reviews_delete_reviews_create",
                "description": "A mixin that provides a get_value method to extract values from request data.\n\nThis mixin can be added to any Django REST Framework view to easily extract\nvalues from either query parameters or request body, depending on the HTTP method.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricReviewInline"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricReviewInline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/process-message-response/": {
            "post": {
                "operationId": "test_framework_process_message_response_create",
                "description": "API view to process incoming message responses from VAPI.\nThis view handles the storage of incoming webhook data and updates\nthe status of runs based on the call status received in the payload.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/project-default-metrics/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_list",
                "description": "List API not supported",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_project_default_metrics_create",
                "description": "Create or update user's default metrics",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/project-default-metrics/{project}/": {
            "get": {
                "operationId": "test_framework_project_default_metrics_retrieve",
                "description": "Get user's default metrics for a specific organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_project_default_metrics_update",
                "description": "Update user's default metrics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectDefaultMetrics"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_project_default_metrics_partial_update",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectDefaultMetrics"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDefaultMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_project_default_metrics_destroy",
                "description": "ViewSet for managing user's default metrics preferences.\nAllows users to set which metrics should be added by default to their new agents.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-outbound-caller/": {
            "post": {
                "operationId": "test_framework_test_outbound_caller_create",
                "description": "API view to test outbound calls.\nThis view allows users to run scenarios associated with a specific agent\nby updating the phone number in the VAPI system.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/": {
            "get": {
                "operationId": "test_framework_test_sets_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TestSetList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_test_sets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/": {
            "get": {
                "operationId": "test_framework_test_sets_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_test_sets_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_test_sets_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestSetDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_test_sets_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/add_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_add_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/review_metrics/": {
            "post": {
                "operationId": "test_framework_test_sets_review_metrics_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/{id}/voice_recording_url/": {
            "get": {
                "operationId": "test_framework_test_sets_voice_recording_url_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test set.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/add/{metric_id}/": {
            "get": {
                "operationId": "test_framework_test_sets_add_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "metric_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_log/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_log_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_call_logs/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_call_logs_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_from_run/": {
            "post": {
                "operationId": "test_framework_test_sets_create_from_run_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/test-sets/create_testsets/": {
            "post": {
                "operationId": "test_framework_test_sets_create_testsets_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestSetDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/tools/sleep/": {
            "get": {
                "operationId": "test_framework_tools_sleep_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "test_framework_tools_sleep_create",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_list",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_aiagents_external_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_external_delete_knowledge_base_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_disable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_duplicate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_enable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_knowledge_base_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_personalities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_runs_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/{id}/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_external_upload_knowledge_base_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents-external/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_external_short_list_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_aiagents_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_aiagents_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_aiagents_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/delete_knowledge_base/": {
            "delete": {
                "operationId": "test_framework_v1_aiagents_delete_knowledge_base_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/disable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_disable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_duplicate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCopyAgent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/enable_personalities/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_enable_personalities_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/knowledge_base/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_knowledge_base_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/personalities/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_personalities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/runs_overview/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_runs_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/{id}/upload_knowledge_base/": {
            "post": {
                "operationId": "test_framework_v1_aiagents_upload_knowledge_base_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseFile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/aiagents/short_list/": {
            "get": {
                "operationId": "test_framework_v1_aiagents_short_list_retrieve",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_list",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_critical_metric_categories_external_create",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-categories-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_categories_external_retrieve",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_categories_external_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_categories_external_partial_update",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCriticalMetricCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_critical_metric_categories_external_destroy",
                "description": "External API view set for retrieving critical metric categories.\nThis view set allows users to access critical metric categories that are\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_list",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCriticalMetricScenarioList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_retrieve",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_external_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/critical-metric-scenarios/{id}/": {
            "get": {
                "operationId": "test_framework_v1_critical_metric_scenarios_retrieve",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_critical_metric_scenarios_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_critical_metric_scenarios_partial_update",
                "description": "API view set for managing critical metric scenarios.\nThis view set provides endpoints to update and manage critical metric\nscenarios associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this critical metric scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestCriticalMetricScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CriticalMetricScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/": {
            "get": {
                "operationId": "test_framework_v1_metrics_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_list",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_metrics_external_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_external_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_external_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_external_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_advance_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_evaluate_basic_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/{id}/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_run_reviews_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_external_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics-external/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_external_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/": {
            "get": {
                "operationId": "test_framework_v1_metrics_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_metrics_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostMetricEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_metrics_partial_update",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostMetricEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_metrics_destroy",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/add_to_predefined_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_add_to_predefined_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/evaluate_advance_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_advance_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/evaluate_basic_metric/": {
            "post": {
                "operationId": "test_framework_v1_metrics_evaluate_basic_metric_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/{id}/run_reviews/": {
            "post": {
                "operationId": "test_framework_v1_metrics_run_reviews_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/basic_list/": {
            "get": {
                "operationId": "test_framework_v1_metrics_basic_list_retrieve",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/bulk_create/": {
            "post": {
                "operationId": "test_framework_v1_metrics_bulk_create_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SchemaPostMetricList"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricDetailV2"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/delete_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_delete_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_clean_description/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_clean_description_create",
                "description": "Generate a clean metric description based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_evaluation_trigger/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_evaluation_trigger_create",
                "description": "Generate an evaluation trigger based on agent description and metric description.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/metrics/generate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_metrics_generate_metrics_create",
                "description": "API view set for managing metrics.\nThis view set provides endpoints to create, retrieve, update, and delete\nmetrics associated with AI agents within a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateMetricsMetricCreate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/": {
            "get": {
                "operationId": "test_framework_v1_personalities_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_list",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreatePersonality"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_personalities_external_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_retrieve",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_personalities_external_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_external_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_external_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/{id}/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_external_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities-external/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_external_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/{id}/": {
            "get": {
                "operationId": "test_framework_v1_personalities_retrieve",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_personalities_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_personalities_partial_update",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCreatePersonality"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_personalities_destroy",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/personalities/{id}/fork/": {
            "post": {
                "operationId": "test_framework_v1_personalities_fork_create",
                "description": "API view set for retrieving personalities.\nThis view set allows users to access predefined personalities that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this personality.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonality"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/personalities/elevenlabs_voices/": {
            "get": {
                "operationId": "test_framework_v1_personalities_elevenlabs_voices_retrieve",
                "description": "Get available voices from ElevenLabs.\nOptionally filter by language.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonality"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumber"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_phone_numbers_external_create",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_retrieve",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_external_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_external_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_external_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers-external/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_external_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/{id}/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_retrieve",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_phone_numbers_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumber"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_phone_numbers_partial_update",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPhoneNumber"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_phone_numbers_destroy",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this phone number.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/phone-numbers/inbound/": {
            "get": {
                "operationId": "test_framework_v1_phone_numbers_inbound_list",
                "description": "API view set for managing phone numbers.\nThis view set provides endpoints to list and manage phone numbers\nassociated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberInbound"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_list",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PredefinedMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_external_retrieve",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_external_update",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_external_partial_update",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_external_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics-external/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_external_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/{id}/": {
            "get": {
                "operationId": "test_framework_v1_predefined_metrics_retrieve",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_predefined_metrics_update",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_predefined_metrics_partial_update",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPredefinedMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_predefined_metrics_destroy",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this predefined metric.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/predefined-metrics/copy/": {
            "post": {
                "operationId": "test_framework_v1_predefined_metrics_copy_create",
                "description": "API view set for retrieving predefined metrics.\nThis view set allows users to access predefined metrics that are\nnot associated with any organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PredefinedMetric"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredefinedMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/": {
            "get": {
                "operationId": "test_framework_v1_results_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ]
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success_rate__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "run_as_text",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_results_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/": {
            "get": {
                "operationId": "test_framework_v1_results_external_list",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "evaluating",
                                "failed",
                                "in_progress",
                                "in_queue",
                                "pending",
                                "running",
                                "timeout"
                            ]
                        },
                        "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    {
                        "in": "query",
                        "name": "success_rate__gte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success_rate__lte",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "run_as_text",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_from",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at_to",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scenarios",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_results_external_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_results_external_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_results_external_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_results_external_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_results_external_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_external_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_external_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_external_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_external_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_external_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results-external/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_external_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/": {
            "get": {
                "operationId": "test_framework_v1_results_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_results_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultDetailV2"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_results_partial_update",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResultDetailV2"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultDetailV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_results_destroy",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/create_shareable_link_token/": {
            "post": {
                "operationId": "create_shareable_link_token_2",
                "description": "Generates a secure, time-limited shareable link that allows users to view test results without authentication. This feature requires an active subscription with whitelabel_reports enabled and provides both standard and custom branded URLs based on organization settings.",
                "summary": "Generate shareable link for result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "Results"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostCreateShareableLinkToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaCreateShareableLinkTokenResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/delete_runs/": {
            "post": {
                "operationId": "test_framework_v1_results_delete_runs_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/end_calls/": {
            "post": {
                "operationId": "test_framework_v1_results_end_calls_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Result"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/evaluate_metrics/": {
            "post": {
                "operationId": "test_framework_v1_results_evaluate_metrics_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostReRunResultDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/{id}/rerun/": {
            "post": {
                "operationId": "test_framework_v1_results_rerun_create",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this result.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/export_result_runs/": {
            "get": {
                "operationId": "test_framework_v1_results_export_result_runs_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/results/result_ids/": {
            "get": {
                "operationId": "test_framework_v1_results_result_ids_retrieve",
                "description": "API view set for retrieving results.\nThis view set allows users to access results associated with their\norganization, providing endpoints to list and retrieve detailed results.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/": {
            "get": {
                "operationId": "test_framework_v1_runs_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_runs_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRunListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_runs_external_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_runs_external_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_runs_external_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_runs_external_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_external_bulk_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Run"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs-external/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_external_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/": {
            "get": {
                "operationId": "test_framework_v1_runs_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_runs_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_runs_partial_update",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRun"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_runs_destroy",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/end_call/": {
            "post": {
                "operationId": "test_framework_v1_runs_end_call_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/get_listen_url/": {
            "get": {
                "operationId": "test_framework_v1_runs_get_listen_url_retrieve",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/mark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_mark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/run_expected_outcome/": {
            "post": {
                "operationId": "test_framework_v1_runs_run_expected_outcome_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/{id}/unmark_critical_scenario_wrong/": {
            "post": {
                "operationId": "test_framework_v1_runs_unmark_critical_scenario_wrong_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this run.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/bulk/": {
            "get": {
                "operationId": "test_framework_v1_runs_bulk_list",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "run_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\nComma-separated list of run IDs.\nExample: `1,2,3`\n",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Run"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/improve_prompt/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunImprovePrompt"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaResponseRunImprovePrompt"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/runs/improve_prompt_issues/": {
            "post": {
                "operationId": "test_framework_v1_runs_improve_prompt_issues_create",
                "description": "API view set for managing runs.\nThis view set provides endpoints to retrieve and manage runs associated with a specific organization.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Run"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Run"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter evaluators by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter evaluators by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Comma-separated list of tags to filter evaluators by"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_list",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter evaluators by agent ID"
                    },
                    {
                        "in": "query",
                        "name": "assistant_id",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Filter evaluators by assistant ID"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Comma-separated list of tags to filter evaluators by"
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScenarioListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_external_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_external_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_external_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/{id}/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_external_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios-external/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_external_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_scenarios_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_scenarios_partial_update",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostScenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaScenario"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_scenarios_destroy",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/copy/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_copy_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/edit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_edit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/run_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenario_demo_create",
                "description": "Demo flow for running a specific scenario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/{id}/switch_phone_number/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_switch_phone_number_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this scenario.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/add_tags/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_add_tags_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/adv_update/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_adv_update_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/create_scenario_from_transcript/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_create_scenario_from_transcript_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostSimulateScenario"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/delete_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_delete_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/duplicate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_duplicate_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_create",
                "description": "Generate scenarios for a given agent",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaGenerateScenarios"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Unique identifier for the scenario"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the scenario"
                                            },
                                            "agent": {
                                                "type": "integer",
                                                "description": "ID of the AI agent this scenario belongs to"
                                            },
                                            "assistant_id": {
                                                "type": "string",
                                                "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                                            },
                                            "personality": {
                                                "type": "integer",
                                                "description": "ID of the personality used in this scenario"
                                            },
                                            "personality_name": {
                                                "type": "string",
                                                "description": "Name of the personality used in this scenario"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Tags associated with this scenario."
                                            },
                                            "runs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of IDs for the last run of this scenario"
                                            },
                                            "metrics": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "description": "List of metric IDs to associate with this scenario"
                                            },
                                            "metric_names": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of metric names associated with this scenario"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "description": "Phone number used for outbound calls in this scenario"
                                            },
                                            "phone_number_queue_length": {
                                                "type": "integer",
                                                "description": "Number of runs in queue for this phone number"
                                            },
                                            "first_message": {
                                                "type": "string",
                                                "description": "First message to be sent in the scenario"
                                            },
                                            "inbound_phone_number": {
                                                "type": "integer",
                                                "description": "ID of the phone number used for inbound calls"
                                            },
                                            "inbound_phone_number_data": {
                                                "type": "object",
                                                "description": "Details of the phone number used for inbound calls",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "ID of the inbound phone number"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The actual phone number"
                                                    },
                                                    "phone_number_id": {
                                                        "type": "string",
                                                        "description": "External ID of the phone number"
                                                    }
                                                }
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "description": "Instructions for the AI agent in this scenario"
                                            },
                                            "simulation_description": {
                                                "type": "string",
                                                "description": "Description of the simulation if this scenario was created by simulation"
                                            },
                                            "information_fields": {
                                                "type": "object",
                                                "description": "Additional information fields for the scenario"
                                            },
                                            "expected_outcome_prompt": {
                                                "type": "string",
                                                "description": "Expected outcome prompt for the scenario"
                                            },
                                            "scenario_language": {
                                                "type": "string",
                                                "description": "Language of the scenario"
                                            },
                                            "is_simulating": {
                                                "type": "boolean",
                                                "description": "Whether this scenario was created by simulation"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/generate-instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_generate_instructions_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/improve_instructions/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_improve_instructions_create",
                "description": "Generates or improves scenario instructions based on extra instructions",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScenarioInstructionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScenarioInstructionsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_create",
                "description": "Complete demo flow for \"try it yourself\" free report feature.\n\nThis endpoint handles:\n1. OTP generation and validation for work email\n2. Agent creation under demo project\n3. Scenario generation\n4. Phone call execution\n5. Email report delivery",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_details/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_details_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_full_scenario_demo_email/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_full_scenario_demo_email_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenarios"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_ello/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_ello_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_jotform/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_jotform_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_livekit/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_livekit_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_text/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_text_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostRunScenariosText"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_vapi_webrtc/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_vapi_webrtc_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Scenario"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/run_scenarios_with_websockets/": {
            "post": {
                "operationId": "test_framework_v1_scenarios_run_scenarios_with_websockets_create",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RunScenariosWithWebsockets"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 167
                                        },
                                        "agent": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "running",
                                                "completed",
                                                "failed"
                                            ],
                                            "example": "pending"
                                        },
                                        "success_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.0
                                        },
                                        "run_as_text": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "runs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 274
                                                    },
                                                    "scenario": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+11234567890"
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": 274,
                                                    "scenario": 1,
                                                    "number": "+11234567890"
                                                },
                                                {
                                                    "id": 273,
                                                    "scenario": 2,
                                                    "number": "+11234567891"
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-25T21:00:01.990052Z"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/scenarios/tags/": {
            "get": {
                "operationId": "test_framework_v1_scenarios_tags_retrieve",
                "description": "API's for managing scenarios.\nThis view set provides endpoints to list, create, and manage and run scenarios.",
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scenario"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles-external/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_external_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "agent_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the agent",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgentTestProfile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_framework_v1_test_profiles_external_create",
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles-external/{id}/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/test_framework/v1/test-profiles/{id}/": {
            "get": {
                "operationId": "test_framework_v1_test_profiles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_framework_v1_test_profiles_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_framework_v1_test_profiles_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSchemaPostAIAgentTestProfileExternal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgentTestProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_framework_v1_test_profiles_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai agent test profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_framework"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAPIKey"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_api_v1_user_api_key_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/api/v1/user-api-key/{id}/": {
            "get": {
                "operationId": "user_api_v1_user_api_key_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_api_v1_user_api_key_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_api_v1_user_api_key_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAPIKey"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIKey"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_api_v1_user_api_key_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/embedded-token-detail/": {
            "get": {
                "operationId": "user_embedded_token_detail_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/": {
            "get": {
                "operationId": "user_invites_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invite"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/": {
            "get": {
                "operationId": "user_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_invites_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_invites_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/invites/{id}/accept_invite/": {
            "post": {
                "operationId": "user_invites_accept_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/{id}/reject_invite/": {
            "post": {
                "operationId": "user_invites_reject_invite_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/my_invites/": {
            "get": {
                "operationId": "user_invites_my_invites_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/invites/send_invites/": {
            "post": {
                "operationId": "user_invites_send_invites_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/is-active/": {
            "get": {
                "operationId": "user_is_active_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/memberships/": {
            "get": {
                "operationId": "user_memberships_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserMembership"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/memberships/{id}/": {
            "get": {
                "operationId": "user_memberships_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_memberships_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_memberships_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMembership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_memberships_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this membership.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/": {
            "get": {
                "operationId": "user_organizations_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_organizations_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/": {
            "get": {
                "operationId": "user_organizations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_organizations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_organizations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_organizations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/organizations/{id}/onboarding-tasks/": {
            "get": {
                "operationId": "user_organizations_onboarding_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/": {
            "get": {
                "operationId": "user_organizations_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/agents/": {
            "get": {
                "operationId": "user_organizations_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_organizations_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/organizations/overview/critical-categories/": {
            "get": {
                "operationId": "user_organizations_overview_critical_categories_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/": {
            "get": {
                "operationId": "user_provider_credentials_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProviderCredentialList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_provider_credentials_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/provider-credentials/{id}/": {
            "get": {
                "operationId": "user_provider_credentials_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_provider_credentials_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCredentialDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_provider_credentials_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProviderCredentialDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderCredentialDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_provider_credentials_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this provider credential.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/embedded/login/": {
            "post": {
                "operationId": "user_v1_embedded_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/embedded/refresh/": {
            "post": {
                "operationId": "user_v1_embedded_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/": {
            "get": {
                "operationId": "user_v1_projects_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/": {
            "get": {
                "operationId": "user_v1_projects_external_list",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_v1_projects_external_create",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/": {
            "get": {
                "operationId": "user_v1_projects_external_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_v1_projects_external_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_v1_projects_external_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_v1_projects_external_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/add_member/": {
            "post": {
                "operationId": "user_v1_projects_external_add_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_external_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/{id}/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_external_remove_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects-external/members/": {
            "get": {
                "operationId": "user_v1_projects_external_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/": {
            "get": {
                "operationId": "user_v1_projects_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_v1_projects_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_v1_projects_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProject"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_v1_projects_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/user/v1/projects/{id}/add_member/": {
            "post": {
                "operationId": "user_v1_projects_add_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/": {
            "get": {
                "operationId": "user_v1_projects_overview_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/agents/": {
            "get": {
                "operationId": "user_v1_projects_overview_agents_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/call_logs/": {
            "get": {
                "operationId": "user_v1_projects_overview_call_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/overview/critical-categories/": {
            "get": {
                "operationId": "user_v1_projects_overview_critical_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/{id}/remove_member/": {
            "post": {
                "operationId": "user_v1_projects_remove_member_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this project.",
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/v1/projects/members/": {
            "get": {
                "operationId": "user_v1_projects_members_retrieve",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/user/webhook/supabase/": {
            "post": {
                "operationId": "user_webhook_supabase_create",
                "tags": [
                    "user"
                ],
                "security": [
                    {
                        "api_key": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/webpage/domain/": {
            "get": {
                "operationId": "webpage_domain_list",
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomDomainList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "webpage_domain_create",
                "description": "Create a new custom domain",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/domain/{organization}/": {
            "get": {
                "operationId": "webpage_domain_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "webpage_domain_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "webpage_domain_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomDomainDetail"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "webpage_domain_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/webpage/domain/{organization}/verify/": {
            "get": {
                "operationId": "webpage_domain_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/page/": {
            "post": {
                "operationId": "webpage_page_create",
                "description": "POST method to create/update a webpage\nExpected request data:\n{\n    \"domain\": \"example.com\", # Can be full URL like https://www.example.com\n    \"html_content\": \"<html>...</html>\"\n}",
                "tags": [
                    "webpage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomDomainDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/webpage/page/{organization}/": {
            "get": {
                "operationId": "webpage_page_retrieve",
                "description": "GET method to retrieve a webpage's HTML content\npk should be the organization id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomDomainDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "webpage_page_destroy",
                "description": "DELETE method to remove a webpage\npk should be the organization id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "webpage"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/edges/": {
            "get": {
                "operationId": "workflows_edges_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Edge"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_edges_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/edges/{id}/": {
            "get": {
                "operationId": "workflows_edges_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_edges_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Edge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_edges_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEdge"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Edge"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_edges_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/node-metrics/": {
            "get": {
                "operationId": "workflows_node_metrics_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeMetric"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_node_metrics_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetricCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetricCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/node-metrics/{id}/": {
            "get": {
                "operationId": "workflows_node_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_node_metrics_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_node_metrics_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNodeMetric"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeMetric"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_node_metrics_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/nodes/": {
            "get": {
                "operationId": "workflows_nodes_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_nodes_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/nodes/{id}/": {
            "get": {
                "operationId": "workflows_nodes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_nodes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Node"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_nodes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNode"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_nodes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/workflows/workflows/": {
            "get": {
                "operationId": "workflows_workflows_list",
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workflow"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workflows_workflows_create",
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/workflows/workflows/{id}/": {
            "get": {
                "operationId": "workflows_workflows_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "workflows_workflows_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workflow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "workflows_workflows_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkflow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workflow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workflows_workflows_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "workflows"
                ],
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AIAgent": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the AI agent"
                    },
                    "project": {
                        "type": "integer",
                        "description": "The project this agent belongs to"
                    },
                    "organization": {
                        "type": "integer",
                        "writeOnly": true,
                        "description": "The organization this agent belongs to"
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "A descriptive name for your agent",
                        "maxLength": 255
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number assigned to this agent for calls (must start with + followed by digits, min 8 chars)",
                        "maxLength": 15
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Specifies if this agent handles inbound calls. Set to true for inbound, false for outbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of what this agent does and how it should interact"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "default": "en",
                        "description": "The primary language this agent uses for communication (e.g. 'en' for English)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "External assistant service identifier (minimum 10 characters)",
                        "maxLength": 255
                    },
                    "chat_assistant_id": {
                        "type": "string",
                        "description": "Chat-specific assistant service identifier (minimum 10 characters)",
                        "maxLength": 255
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "WebSocket endpoint URL for real-time communication (must use ws:// or wss://)"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server"
                    },
                    "llm_system_prompt": {
                        "type": "string",
                        "description": "System prompt that defines the agent's behavior and personality"
                    },
                    "llm_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LlmModelEnum"
                            }
                        ],
                        "default": "gpt-4o",
                        "description": "The LLM model to use for simulating user responses\n\n* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `gpt-4.1` - gpt-4.1\n* `gpt-4.1-mini` - gpt-4.1-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620"
                    },
                    "llm_temperature": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "Controls randomness in responses (0.0-2.0, lower = more focused)"
                    },
                    "llm_max_tokens": {
                        "type": "integer",
                        "default": 4096,
                        "description": "Maximum length of simulated responses in tokens"
                    },
                    "predefined_metrics": {
                        "writeOnly": true,
                        "description": "predefined metrics to use for the agent"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of knowledge base files attached to the agent"
                    },
                    "transcript_provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TranscriptProviderEnum"
                            }
                        ],
                        "default": "vocera",
                        "description": "Service provider for speech-to-text transcription\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `custom` - Custom"
                    },
                    "assistant_provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AssistantProviderEnum"
                            }
                        ],
                        "default": "self_hosted",
                        "description": "Service provider for the AI assistant functionality\n\n* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `self_hosted` - Self Hosted"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "API key for VAPI service provider"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "API key for Retell service provider"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "API key for ElevenLabs voice synthesis service"
                    },
                    "custom_provider_api_key": {
                        "type": "string",
                        "description": "API key for custom service provider"
                    },
                    "custom_provider_data": {
                        "type": "string",
                        "description": "Additional configuration data for custom service provider"
                    },
                    "synthflow_api_key": {
                        "type": "string",
                        "description": "API key for Synthflow service provider"
                    },
                    "enabled_personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Personality profiles enabled for this agent"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the agent was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the agent was last updated"
                    }
                },
                "required": [
                    "agent_name",
                    "contact_number",
                    "created_at",
                    "description",
                    "inbound",
                    "knowledge_base_files",
                    "updated_at"
                ]
            },
            "AIAgentTestProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "name"
                ]
            },
            "AssistantProviderEnum": {
                "enum": [
                    "vapi",
                    "retell",
                    "vocera",
                    "self_hosted"
                ],
                "type": "string",
                "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `self_hosted` - Self Hosted"
            },
            "Billing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "text_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "non_text_runs_minutes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_logs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "num_test_cases": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "total_run_minutes": {
                        "type": "string"
                    },
                    "total_call_log_minutes": {
                        "type": "string"
                    },
                    "balance_expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "balance_expiry",
                    "call_logs_count",
                    "created_at",
                    "id",
                    "non_text_runs_minutes",
                    "organization",
                    "text_runs_count",
                    "total_call_log_minutes",
                    "total_run_minutes",
                    "updated_at"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "CallLogList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusA5dEnum"
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "readOnly": true
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "call_ended_reason",
                    "call_id",
                    "created_at",
                    "duration",
                    "id",
                    "metrics",
                    "updated_at"
                ]
            },
            "CallLogV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusA5dEnum"
                            }
                        ],
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean"
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "metadata": {},
                    "dynamic_variables": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "call_id",
                    "created_at",
                    "critical_categories",
                    "duration",
                    "id",
                    "metrics",
                    "updated_at",
                    "voice_recording_url"
                ]
            },
            "CallServiceProviderEnum": {
                "enum": [
                    "vapi",
                    "patronus"
                ],
                "type": "string",
                "description": "* `vapi` - VAPI\n* `patronus` - Patronus"
            },
            "CreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "forked_from": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageEnum"
                    },
                    "accent": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "call_service_provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CallServiceProviderEnum"
                            }
                        ],
                        "default": "vapi"
                    },
                    "temperature": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "background_noise": {
                        "type": "string"
                    },
                    "voice_model": {
                        "type": "string"
                    },
                    "voice_id": {
                        "type": "string"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "provider": {
                        "$ref": "#/components/schemas/CreatePersonalityProviderEnum"
                    }
                },
                "required": [
                    "background_noise",
                    "description",
                    "forked_from",
                    "id",
                    "model",
                    "name",
                    "project",
                    "provider_agent_id",
                    "temperature",
                    "voice_model"
                ]
            },
            "CreatePersonalityProviderEnum": {
                "enum": [
                    "11labs",
                    "cartesia"
                ],
                "type": "string",
                "description": "* `11labs` - Elevenlabs\n* `cartesia` - Cartesia"
            },
            "CriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                },
                "required": [
                    "category",
                    "id",
                    "metric"
                ]
            },
            "CriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                },
                "required": [
                    "id",
                    "scenario"
                ]
            },
            "CronJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob",
                        "maxLength": 255
                    },
                    "crontab_expression": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "scenarios": {
                        "writeOnly": true
                    },
                    "scenario_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "scenarios_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioInline"
                        },
                        "readOnly": true
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1
                    },
                    "notify_on": {
                        "$ref": "#/components/schemas/NotifyOnEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "crontab_expression",
                    "id",
                    "scenario_ids",
                    "scenarios_data",
                    "updated_at"
                ]
            },
            "CustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                },
                "required": [
                    "domain",
                    "organization",
                    "verification_token",
                    "verified"
                ]
            },
            "CustomDomainList": {
                "type": "object",
                "description": "Serializer for listing CustomDomain objects with limited fields",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                },
                "required": [
                    "domain",
                    "organization",
                    "verification_token",
                    "verified"
                ]
            },
            "CustomTokenObtainPair": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string"
                    },
                    "agent_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "agent_id",
                    "api_key"
                ]
            },
            "DiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "channel_id",
                    "id",
                    "is_verified",
                    "project",
                    "server_name"
                ]
            },
            "Edge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "source_node",
                    "target_node",
                    "updated_at"
                ]
            },
            "EvalTypeEnum": {
                "enum": [
                    "binary_workflow_adherence",
                    "binary_qualitative",
                    "continuous_qualitative",
                    "numeric",
                    "enum"
                ],
                "type": "string",
                "description": "* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
            },
            "EvaluationTriggerEnum": {
                "enum": [
                    "always",
                    "automatic",
                    "custom"
                ],
                "type": "string",
                "description": "* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
            },
            "IntervalEnum": {
                "enum": [
                    "month",
                    "year"
                ],
                "type": "string",
                "description": "* `month` - Monthly\n* `year` - Yearly"
            },
            "Invite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InviteStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "email",
                    "id",
                    "organization",
                    "organization_name",
                    "status",
                    "updated_at"
                ]
            },
            "InviteStatusEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "rejected"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `rejected` - Rejected"
            },
            "KnowledgeBaseFile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "pattern": "(?:pdf|txt|json|csv|xml|md)$"
                    },
                    "file_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "file_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "file_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "file_size": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Size in bytes"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "file",
                    "file_name",
                    "file_size",
                    "file_type",
                    "file_url",
                    "id",
                    "updated_at"
                ]
            },
            "LanguageEnum": {
                "enum": [
                    "ar",
                    "bg",
                    "zh",
                    "cs",
                    "da",
                    "nl",
                    "en",
                    "fi",
                    "fr",
                    "de",
                    "el",
                    "hi",
                    "hu",
                    "id",
                    "it",
                    "ja",
                    "ko",
                    "ms",
                    "multi",
                    "no",
                    "pl",
                    "pt",
                    "ro",
                    "ru",
                    "sk",
                    "es",
                    "sv",
                    "tr",
                    "uk",
                    "vi"
                ],
                "type": "string",
                "description": "* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
            },
            "LlmModelEnum": {
                "enum": [
                    "gpt-4o",
                    "gpt-4o-mini",
                    "gpt-4.1",
                    "gpt-4.1-mini",
                    "claude-3-5-sonnet-20240620"
                ],
                "type": "string",
                "description": "* `gpt-4o` - gpt-4o\n* `gpt-4o-mini` - gpt-4o-mini\n* `gpt-4.1` - gpt-4.1\n* `gpt-4.1-mini` - gpt-4.1-mini\n* `claude-3-5-sonnet-20240620` - claude-3-5-sonnet-20240620"
            },
            "MembershipInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "user"
                ]
            },
            "Metric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "enum_values": {},
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "MetricBasicList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "enum_values": {},
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "MetricDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "enum_values": {},
                    "audio_enabled": {
                        "type": "boolean"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "evaluation_trigger": {
                        "$ref": "#/components/schemas/EvaluationTriggerEnum"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string"
                    },
                    "priority_assignment_prompt": {
                        "type": "string"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for specific metrics"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The overall score for this metric across all test sets"
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The total score for this metric"
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Knowledge base files associated with this metric"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "custom_code": {
                        "type": "string"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenarios": {
                        "writeOnly": true
                    },
                    "reviews": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Reviews associated with the metric"
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "knowledge_base_files",
                    "name",
                    "overall_score",
                    "reviews",
                    "total_score"
                ]
            },
            "MetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "enum_values": {},
                    "audio_enabled": {
                        "type": "boolean"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluation_trigger": {
                        "$ref": "#/components/schemas/EvaluationTriggerEnum"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string"
                    },
                    "priority_assignment_prompt": {
                        "type": "string"
                    },
                    "vocera_defined_metric_code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for specific metrics"
                    },
                    "overall_score": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_score": {
                        "type": "string",
                        "readOnly": true
                    },
                    "knowledge_base_files": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "writeOnly": true
                        },
                        "writeOnly": true
                    },
                    "custom_code": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "cost",
                    "id",
                    "knowledge_base_files",
                    "name",
                    "overall_score",
                    "total_score"
                ]
            },
            "MetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_enum_values": {
                        "readOnly": true
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "explanation": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "eval_type",
                    "explanation",
                    "id",
                    "metric",
                    "metric_enum_values",
                    "metric_function_name",
                    "metric_name",
                    "metric_vocera_defined_metric_code"
                ]
            },
            "ModeEnum": {
                "enum": [
                    "same_number",
                    "different_numbers"
                ],
                "type": "string",
                "description": "* `same_number` - same_number\n* `different_numbers` - different_numbers"
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metrics",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metric": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "metrics",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer"
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "main_metric": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "main_metric",
                    "updated_at",
                    "workflow"
                ]
            },
            "NodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "metric_data",
                    "node",
                    "updated_at"
                ]
            },
            "NodeMetricCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer"
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "metric",
                    "node",
                    "updated_at"
                ]
            },
            "NotifyOnEnum": {
                "enum": [
                    "never",
                    "success",
                    "failure",
                    "both"
                ],
                "type": "string",
                "description": "* `never` - Never\n* `success` - Success\n* `failure` - Failure\n* `both` - Both"
            },
            "NullEnum": {
                "type": "null"
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_no_calls": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "syntflow_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/TimezoneEnum"
                    },
                    "is_2fa_required": {
                        "type": "boolean"
                    },
                    "skip_onboarding": {
                        "type": "boolean"
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_refill": {
                        "type": "boolean"
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "max_agents_limit",
                    "max_members_limit",
                    "members",
                    "name",
                    "onboarding_tasks",
                    "projects",
                    "retell_api_key",
                    "syntflow_api_key",
                    "updated_at",
                    "vapi_api_key"
                ]
            },
            "OverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "id"
                ]
            },
            "Pack": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/IntervalEnum"
                    },
                    "trial_period_days": {
                        "type": "string",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "runs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "call_logs_balance": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "monitoring_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "premium_slack_support": {
                        "type": "boolean"
                    },
                    "custom_api_integrations": {
                        "type": "boolean"
                    },
                    "dedicated_support_engineer": {
                        "type": "boolean"
                    },
                    "sla_hours": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "custom_feature_requests": {
                        "type": "boolean"
                    },
                    "simulate_scenarios": {
                        "type": "boolean"
                    },
                    "downloadable_reports": {
                        "type": "boolean"
                    },
                    "slack_alerts": {
                        "type": "boolean"
                    },
                    "custom_sso": {
                        "type": "boolean"
                    },
                    "dedicated_cloud_instance": {
                        "type": "boolean"
                    },
                    "on_prem_deployment": {
                        "type": "boolean"
                    },
                    "multiple_organizations": {
                        "type": "boolean"
                    },
                    "hippa_compliance": {
                        "type": "boolean"
                    },
                    "display_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "price",
                    "trial_period_days",
                    "updated_at"
                ]
            },
            "PackInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "subscription_overage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "PaginatedCallLogListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogList"
                        }
                    }
                }
            },
            "PaginatedCallLogV2List": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CallLogV2"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricCategoryList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricCategory"
                        }
                    }
                }
            },
            "PaginatedCriticalMetricScenarioList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriticalMetricScenario"
                        }
                    }
                }
            },
            "PaginatedResultList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        }
                    }
                }
            },
            "PaginatedRunListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunList"
                        }
                    }
                }
            },
            "PaginatedScenarioListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "https://api.cekura.ai/example/v1/example-external/?page=3"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioList"
                        }
                    }
                }
            },
            "PatchedCallLogV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the call in MM:SS format"
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording file"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical categories identified in the call evaluation"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusA5dEnum"
                            }
                        ],
                        "description": "Current status of the call log\n\n* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_reviewed": {
                        "type": "boolean"
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "call_ended_reason": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dropoff_point": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "user_generated_transcript": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "metadata": {},
                    "dynamic_variables": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "call_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedCreatePersonality": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "forked_from": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageEnum"
                    },
                    "accent": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "call_service_provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CallServiceProviderEnum"
                            }
                        ],
                        "default": "vapi"
                    },
                    "temperature": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "background_noise": {
                        "type": "string"
                    },
                    "voice_model": {
                        "type": "string"
                    },
                    "voice_id": {
                        "type": "string"
                    },
                    "provider_agent_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "provider": {
                        "$ref": "#/components/schemas/CreatePersonalityProviderEnum"
                    }
                }
            },
            "PatchedCriticalMetricCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "result": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "run": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "call_log": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "PatchedCustomDomainDetail": {
                "type": "object",
                "description": "Serializer for detailed view of CustomDomain objects including verification token",
                "properties": {
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "verification_token": {
                        "type": "string",
                        "readOnly": true
                    },
                    "verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                }
            },
            "PatchedDiscordServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "server_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "PatchedEdge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "source_node": {
                        "type": "integer"
                    },
                    "target_node": {
                        "type": "integer"
                    },
                    "value": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InviteStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedMetricReviewInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_enum_values": {
                        "readOnly": true
                    },
                    "eval_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_value": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "explanation": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "metric_function_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_vocera_defined_metric_code": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedNode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "workflow": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_root": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeMetric"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedNodeMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "node": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "metric_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Metric"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_agents_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_members_limit": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "max_concurrent_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_concurrent_chat_runs_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean"
                    },
                    "end_call_enabled": {
                        "type": "boolean"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean"
                    },
                    "notify_daily_report": {
                        "type": "boolean"
                    },
                    "notify_cron_failure": {
                        "type": "boolean"
                    },
                    "notify_cron_success": {
                        "type": "boolean"
                    },
                    "notify_infra_issues": {
                        "type": "boolean"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean"
                    },
                    "notify_no_calls": {
                        "type": "boolean"
                    },
                    "notify_result_webhook": {
                        "type": "boolean"
                    },
                    "notify_cronjob_webhook": {
                        "type": "boolean"
                    },
                    "notify_call_log_webhook": {
                        "type": "boolean"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean"
                    },
                    "vapi_api_key": {
                        "type": "string"
                    },
                    "retell_api_key": {
                        "type": "string"
                    },
                    "syntflow_api_key": {
                        "type": "string"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "webhook_secret": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipInline"
                        },
                        "readOnly": true
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectInline"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/TimezoneEnum"
                    },
                    "is_2fa_required": {
                        "type": "boolean"
                    },
                    "skip_onboarding": {
                        "type": "boolean"
                    },
                    "onboarding_tasks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_refill": {
                        "type": "boolean"
                    },
                    "auto_refill_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "auto_refill_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    }
                }
            },
            "PatchedOverallEvaluation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    }
                }
            },
            "PatchedPhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedPredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "enum_values": {},
                    "custom_code": {
                        "type": "string"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric"
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "description": "Cost in credits for evaluating this metric"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedProject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "Outbound timeout in seconds"
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "Max call duration in seconds"
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "Min call duration in seconds"
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "Max messages chat runs limit"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Webhook URL"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "Webhook secret"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "Evaluate relevant metrics enabled"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "End call enabled"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "Generate scenario auto assign numbers enabled"
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "Enable client side testing"
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "Should show powered by"
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "Notify on result completion"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "Notify critical workflow adherence"
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "Notify daily report"
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "Notify cron failure"
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "Notify cron success"
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "Notify infra issues"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "Notify binary workflow metrics"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "Notify latency spikes"
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "Notify no calls"
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify result webhook failed"
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "Notify result webhook success"
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook failed"
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook success"
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify call log webhook failed"
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "Notify call log webhook success"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "Forward vapi webhook"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "Forward retell webhook"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "Is send emails enabled"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "VAPI API key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "Retell API key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "Syntflow API key"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "ElevenLabs API key"
                    },
                    "is_deleted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "$ref": "#/components/schemas/Provider4cbEnum"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedRequestCriticalMetricScenario": {
                "type": "object",
                "properties": {
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    }
                }
            },
            "PatchedResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status39fEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Dictionary mapping run IDs to detailed run information including scenario, evaluation and transcript data"
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedRun": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome": {
                        "readOnly": true
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status39fEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "metadata": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    },
                    "error_message": {
                        "type": "string"
                    }
                }
            },
            "PatchedSchemaPostAIAgentExternal": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "project": {
                        "type": "integer",
                        "description": "Project ID"
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Name of the AI agent"
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number associated with the AI agent"
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether the agent handles inbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the AI agent's purpose and capabilities"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language of the agent\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "WebSocket URL for real-time communication with the agent"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of predefined metrics to evaluate the agent's"
                    }
                }
            },
            "PatchedSchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile"
                    }
                }
            },
            "PatchedSchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs to execute"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Alternative to scenarios - List of tags to filter scenario"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Required when tags are provided"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "Cron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)"
                    },
                    "timezone": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimezoneEnum"
                            }
                        ],
                        "description": "Timezone for the cronjob (default: Project timezone)\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC"
                    }
                }
            },
            "PatchedSchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI"
                    }
                }
            },
            "PatchedSchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality of the evaluator"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "expected_outcome_prompt": {
                        "type": "string"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this evaluator"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to associate with the evaluator"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for evaluator"
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for the evaluator"
                    }
                }
            },
            "PatchedSlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedTestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "scenario_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "user": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "number",
                    "phone_number_id",
                    "scenario_id",
                    "scenario_name"
                ]
            },
            "PhoneNumberInbound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "phone_number_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "common": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "common",
                    "id",
                    "number",
                    "phone_number_id"
                ]
            },
            "PredefinedMetric": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "eval_type": {
                        "$ref": "#/components/schemas/EvalTypeEnum"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "enum_values": {},
                    "custom_code": {
                        "type": "string"
                    },
                    "simulation_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for simulations"
                    },
                    "observability_enabled": {
                        "type": "boolean",
                        "description": "Enable this metric for observability"
                    },
                    "configuration": {
                        "description": "Custom configuration parameters for metric"
                    },
                    "cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,6})?$",
                        "description": "Cost in credits for evaluating this metric"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "audio_enabled",
                    "code",
                    "description",
                    "function_name",
                    "id",
                    "name",
                    "organization"
                ]
            },
            "PriorityEnum": {
                "enum": [
                    "high",
                    "medium",
                    "low",
                    "not_a_bug"
                ],
                "type": "string",
                "description": "* `high` - High\n* `medium` - Medium\n* `low` - Low\n* `not_a_bug` - Not A Bug"
            },
            "Project": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "outbound_timeout": {
                        "type": "integer",
                        "description": "Outbound timeout in seconds"
                    },
                    "max_call_duration": {
                        "type": "integer",
                        "description": "Max call duration in seconds"
                    },
                    "min_call_duration": {
                        "type": "integer",
                        "description": "Min call duration in seconds"
                    },
                    "max_messages_chat_runs_limit": {
                        "type": "integer",
                        "description": "Max messages chat runs limit"
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Webhook URL"
                    },
                    "webhook_secret": {
                        "type": "string",
                        "description": "Webhook secret"
                    },
                    "evaluate_relevant_metrics_enabled": {
                        "type": "boolean",
                        "description": "Evaluate relevant metrics enabled"
                    },
                    "end_call_enabled": {
                        "type": "boolean",
                        "description": "End call enabled"
                    },
                    "generate_scenario_auto_assign_numbers_enabled": {
                        "type": "boolean",
                        "description": "Generate scenario auto assign numbers enabled"
                    },
                    "enable_client_side_testing": {
                        "type": "boolean",
                        "description": "Enable client side testing"
                    },
                    "should_show_powered_by": {
                        "type": "boolean",
                        "description": "Should show powered by"
                    },
                    "notify_results_completion": {
                        "type": "boolean",
                        "description": "Notify on result completion"
                    },
                    "notify_critical_workflow_adherence": {
                        "type": "boolean",
                        "description": "Notify critical workflow adherence"
                    },
                    "notify_daily_report": {
                        "type": "boolean",
                        "description": "Notify daily report"
                    },
                    "notify_cron_failure": {
                        "type": "boolean",
                        "description": "Notify cron failure"
                    },
                    "notify_cron_success": {
                        "type": "boolean",
                        "description": "Notify cron success"
                    },
                    "notify_infra_issues": {
                        "type": "boolean",
                        "description": "Notify infra issues"
                    },
                    "notify_binary_workflow_metrics": {
                        "type": "boolean",
                        "description": "Notify binary workflow metrics"
                    },
                    "notify_latency_spikes": {
                        "type": "boolean",
                        "description": "Notify latency spikes"
                    },
                    "notify_no_calls": {
                        "type": "boolean",
                        "description": "Notify no calls"
                    },
                    "notify_result_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify result webhook failed"
                    },
                    "notify_result_webhook_success": {
                        "type": "boolean",
                        "description": "Notify result webhook success"
                    },
                    "notify_cronjob_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook failed"
                    },
                    "notify_cronjob_webhook_success": {
                        "type": "boolean",
                        "description": "Notify cronjob webhook success"
                    },
                    "notify_call_log_webhook_failed": {
                        "type": "boolean",
                        "description": "Notify call log webhook failed"
                    },
                    "notify_call_log_webhook_success": {
                        "type": "boolean",
                        "description": "Notify call log webhook success"
                    },
                    "forward_vapi_webhook": {
                        "type": "boolean",
                        "description": "Forward vapi webhook"
                    },
                    "forward_retell_webhook": {
                        "type": "boolean",
                        "description": "Forward retell webhook"
                    },
                    "is_send_emails_enabled": {
                        "type": "boolean",
                        "description": "Is send emails enabled"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone"
                    },
                    "vapi_api_key": {
                        "type": "string",
                        "description": "VAPI API key"
                    },
                    "retell_api_key": {
                        "type": "string",
                        "description": "Retell API key"
                    },
                    "syntflow_api_key": {
                        "type": "string",
                        "description": "Syntflow API key"
                    },
                    "elevenlabs_api_key": {
                        "type": "string",
                        "description": "ElevenLabs API key"
                    },
                    "is_deleted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "organization",
                    "updated_at"
                ]
            },
            "ProjectDefaultMetrics": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "integer"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "predefined_metrics_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "predefined_metrics_names",
                    "project",
                    "updated_at"
                ]
            },
            "ProjectInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "updated_at"
                ]
            },
            "Provider4cbEnum": {
                "enum": [
                    "vapi",
                    "retell",
                    "synthflow",
                    "elevenlabs",
                    "custom"
                ],
                "type": "string",
                "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `custom` - Custom"
            },
            "ProviderCredentialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "$ref": "#/components/schemas/Provider4cbEnum"
                    },
                    "key": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "key"
                ]
            },
            "ProviderCredentialList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "provider": {
                        "$ref": "#/components/schemas/Provider4cbEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id"
                ]
            },
            "Result": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Unique identifier for this test result"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name or description of this test result",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Foreign key reference to the AI agent that was tested"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status39fEnum"
                            }
                        ],
                        "default": "pending",
                        "description": "Current status of the test result (e.g., running, completed, failed)\n\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "default": 0.0,
                        "description": "Success rate of the test runs as a decimal (0.0 to 1.0)"
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this test was run in text mode instead of voice mode"
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of test runs associated with this result, including run details, status, scenario information, and phone numbers used"
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that met the expected outcome criteria"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of test runs that were evaluated for expected outcomes"
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of test runs associated with this result"
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that have completed successfully"
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that were marked as successful"
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of test runs that failed or encountered errors"
                    },
                    "scenario_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of scenario names used in the test runs for this result"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this test result was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when this test result was last updated"
                    }
                },
                "required": [
                    "agent",
                    "completed_runs_count",
                    "created_at",
                    "failed_runs_count",
                    "id",
                    "is_cronjob",
                    "met_expected_outcome_count",
                    "name",
                    "runs",
                    "scenario_names",
                    "success_runs_count",
                    "total_expected_outcome_count",
                    "total_runs_count",
                    "updated_at"
                ]
            },
            "ResultDetailV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status39fEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "met_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Number of runs that fully met their expected outcomes with a score of 100"
                    },
                    "total_expected_outcome_count": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Total number of runs that had expected outcomes defined"
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "run_as_text": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_cronjob": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Whether this result was created by a scheduled cronjob"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Dictionary mapping run IDs to detailed run information including scenario, evaluation and transcript data"
                    },
                    "overall_evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "completed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "success_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "failed_runs_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scenario_names": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain_logo": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "completed_runs_count",
                    "critical_categories",
                    "domain",
                    "domain_logo",
                    "failed_runs_count",
                    "id",
                    "is_cronjob",
                    "met_expected_outcome_count",
                    "metrics",
                    "overall_evaluation",
                    "run_as_text",
                    "runs",
                    "scenario_names",
                    "status",
                    "success_rate",
                    "success_runs_count",
                    "total_duration",
                    "total_expected_outcome_count",
                    "total_runs_count",
                    "updated_at"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "admin",
                    "member"
                ],
                "type": "string",
                "description": "* `admin` - Admin\n* `member` - Member"
            },
            "Run": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Personality this run belongs to"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality this run belongs to"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome": {
                        "readOnly": true
                    },
                    "success": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "evaluation": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "transcript": {
                        "type": "string",
                        "readOnly": true
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "Duration of the run in MM:SS format"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL to access the voice recording of this run"
                    },
                    "email_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status39fEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "metadata": {
                        "readOnly": true
                    },
                    "feedback": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used to make the outbound call for this run"
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of critical evaluation categories and their results for this run"
                    },
                    "error_message": {
                        "type": "string"
                    }
                },
                "required": [
                    "critical_categories",
                    "duration",
                    "email_id",
                    "evaluation",
                    "executed_at",
                    "expected_outcome",
                    "expected_outcome_prompt",
                    "id",
                    "metadata",
                    "outbound_number",
                    "personality",
                    "personality_name",
                    "scenario",
                    "scenario_name",
                    "status",
                    "success",
                    "timestamp",
                    "transcript",
                    "transcript_object",
                    "voice_recording_url"
                ]
            },
            "RunList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider_call_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "scenario": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "scenario_name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "Scenario Deleted"
                    },
                    "personality": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "duration": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status39fEnum"
                    },
                    "expected_outcome": {},
                    "success": {
                        "type": "boolean"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "executed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "metadata": {},
                    "outbound_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "critical_categories": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metrics": {
                        "type": "string",
                        "readOnly": true
                    },
                    "error_message": {
                        "type": "string"
                    }
                },
                "required": [
                    "critical_categories",
                    "duration",
                    "id",
                    "metrics",
                    "outbound_number",
                    "personality",
                    "personality_name",
                    "scenario_name",
                    "timestamp"
                ]
            },
            "RunScenariosWithWebsockets": {
                "type": "object",
                "properties": {
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScenarioWithWebsocket"
                        },
                        "description": "Scenarios with Websocket url"
                    },
                    "frequency": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Frequency to run"
                    }
                },
                "required": [
                    "frequency",
                    "scenarios"
                ]
            },
            "Scenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "tags": {},
                    "tool_ids": {
                        "description": "List of tool IDs to associate with this scenario"
                    },
                    "runs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of IDs for the last run of this scenario"
                    },
                    "metrics": {
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this scenario"
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Phone number used for outbound calls in this scenario"
                    },
                    "first_message": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "simulation_description": {
                        "type": "string"
                    },
                    "information_fields": {},
                    "expected_outcome_prompt": {
                        "type": "string"
                    },
                    "scenario_language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScenarioLanguageEnum"
                            }
                        ],
                        "description": "Language of the scenario\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario"
                    }
                },
                "required": [
                    "id",
                    "inbound_phone_number_data",
                    "metric_names",
                    "personality_name",
                    "phone_number",
                    "runs",
                    "test_profile_data"
                ]
            },
            "ScenarioInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "id",
                    "personality_name"
                ]
            },
            "ScenarioInstructionsRequest": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer"
                    },
                    "extra_instructions": {
                        "type": "string"
                    },
                    "current_instructions": {
                        "type": "string"
                    }
                },
                "required": [
                    "agent",
                    "extra_instructions"
                ]
            },
            "ScenarioInstructionsResponse": {
                "type": "object",
                "properties": {
                    "instructions": {
                        "type": "string"
                    },
                    "expected_outcome_prompt": {
                        "type": "string"
                    }
                },
                "required": [
                    "expected_outcome_prompt",
                    "instructions"
                ]
            },
            "ScenarioLanguageEnum": {
                "enum": [
                    "ar",
                    "bg",
                    "zh",
                    "cs",
                    "da",
                    "nl",
                    "en",
                    "fi",
                    "fr",
                    "de",
                    "el",
                    "hi",
                    "hu",
                    "id",
                    "it",
                    "ja",
                    "ko",
                    "ms",
                    "multi",
                    "no",
                    "pl",
                    "pt",
                    "ro",
                    "ru",
                    "sk",
                    "es",
                    "sv",
                    "tr",
                    "uk",
                    "vi"
                ],
                "type": "string",
                "description": "* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
            },
            "ScenarioList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the AI agent"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the scenario",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the personality used in this scenario"
                    },
                    "personality_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the personality used in this scenario"
                    },
                    "phone_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Detailed instructions that guide the AI agent's behavior in this scenario"
                    },
                    "scenario_language": {
                        "description": "Language code for the scenario (ISO language code)\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ScenarioLanguageEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "tags": {
                        "description": "List of tags associated with this scenario for categorization"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Foreign key reference to the AI agent that owns this scenario"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the phone number used for inbound calls"
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of metrics associated with this scenario for evaluation"
                    },
                    "metric_names": {
                        "type": "string",
                        "readOnly": true,
                        "description": "List of metric names associated with this scenario"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "The initial message that the AI agent will send when the scenario starts",
                        "maxLength": 1000
                    },
                    "tool_ids": {
                        "description": "List of tool IDs that are available for use in this scenario"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Foreign key reference to the test profile used for scenario evaluation"
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when the scenario was last updated"
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "expected_outcome_prompt",
                    "inbound_phone_number_data",
                    "instructions",
                    "metric_names",
                    "name",
                    "personality_name",
                    "phone_number",
                    "test_profile_data",
                    "updated_at"
                ]
            },
            "ScenarioWithWebsocket": {
                "type": "object",
                "properties": {
                    "scenario": {
                        "type": "integer"
                    },
                    "websocket_url": {
                        "type": "string"
                    }
                },
                "required": [
                    "scenario"
                ]
            },
            "SchemaCreateShareableLinkTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Unique token identifier for the shareable link, used for authentication and access control"
                    },
                    "shareable_link": {
                        "type": "string",
                        "description": "Complete URL for the shareable link that can be distributed to external users"
                    },
                    "custom_link": {
                        "type": "string",
                        "description": "Customized branded URL for the shareable link with organization-specific branding"
                    },
                    "custom_domain": {
                        "type": "boolean",
                        "description": "Whether the organization has whitelabel custom domain enabled for branded links"
                    }
                },
                "required": [
                    "custom_domain",
                    "custom_link",
                    "shareable_link",
                    "token"
                ]
            },
            "SchemaGenerateMetricsMetricCreate": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the AI agent to generate metrics for"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "The assistant ID to look up the agent by. Alternative to providing agent ID directly"
                    },
                    "num_metrics": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 1,
                        "description": "Number of metrics to generate"
                    }
                }
            },
            "SchemaGenerateScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "ID of the agent to generate evaluator for"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Alternative to agent_id - the assistant ID to generate evaluators for"
                    },
                    "personalities": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of personality IDs to use for generated evaluators"
                    },
                    "num_scenarios": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "description": "Number of evaluators to generate (1-100)"
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "ID of the test profile to assign to generated evaluators"
                    },
                    "extra_instructions": {
                        "type": "string",
                        "description": "Additional instructions to guide evaluator generation"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Phone number ID to use for inbound evaluator"
                    },
                    "first_message": {
                        "type": "string",
                        "default": "Hello",
                        "description": "Initial message to start the conversation",
                        "maxLength": 1000
                    },
                    "generate_expected_outcomes": {
                        "type": "boolean",
                        "default": false,
                        "description": "If true, expected outcomes will be generated for each evaluator"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to apply to all generated scenarios"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for generated evaluators"
                    },
                    "scenario_type": {
                        "enum": [
                            "happy",
                            "sad",
                            "toxicity",
                            "bias",
                            "jailbreak",
                            "hallucination",
                            "None"
                        ],
                        "type": "string",
                        "description": "Type of scenario to generate."
                    }
                },
                "required": [
                    "num_scenarios"
                ]
            },
            "SchemaPostAIAgentExternal": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "project": {
                        "type": "integer",
                        "description": "Project ID"
                    },
                    "agent_name": {
                        "type": "string",
                        "description": "Name of the AI agent"
                    },
                    "contact_number": {
                        "type": "string",
                        "description": "Phone number associated with the AI agent"
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Whether the agent handles inbound calls"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the AI agent's purpose and capabilities"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language of the agent\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "WebSocket URL for real-time communication with the agent"
                    },
                    "websocket_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Headers to be sent to the websocket server"
                    },
                    "predefined_metrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of predefined metrics to evaluate the agent's"
                    }
                },
                "required": [
                    "agent_name",
                    "assistant_id",
                    "contact_number",
                    "description",
                    "inbound",
                    "language",
                    "project"
                ]
            },
            "SchemaPostAIAgentTestProfileExternal": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the test profile"
                    },
                    "information": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the test profile"
                    }
                },
                "required": [
                    "agent",
                    "name"
                ]
            },
            "SchemaPostCallLogDetail": {
                "type": "object",
                "properties": {
                    "call_logs": {
                        "writeOnly": true,
                        "description": "List of call log IDs, int or string `all` to process"
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "ID of the agent associated with this call log"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "ID of the assistant associated with this call log"
                    }
                },
                "required": [
                    "call_logs"
                ]
            },
            "SchemaPostCopyAgent": {
                "type": "object",
                "properties": {
                    "copy_scenarios": {
                        "type": "boolean",
                        "description": "If true, scenarios will be copied"
                    }
                }
            },
            "SchemaPostCreateCallLog": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The agent ID as shown on your dashboard. Either `agent` or `assistant_id` must be provided"
                    },
                    "assistant_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The assistant ID associated with agent. Either `agent` or `assistant_id` must be provided."
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "binary",
                        "description": "The voice recording of the call"
                    },
                    "voice_recording_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "URL to the call recording audio file. Either `voice_recording` or `voice_recording_url` must be provided for detailed analysis. We do support transcript only evaluation if you don't have/want to share a recording."
                    },
                    "transcript_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TranscriptTypeEnum"
                            }
                        ],
                        "description": "For none-mono type, transcript is not required.\n [Transcript Format](/documentation/advanced/transcript-format)\n\n* `cekura` - cekura\n* `vapi` - vapi\n* `retell` - retell\n* `deepgram` - deepgram\n* `pipecat` - pipecat\n* `livekit` - livekit\n* `elevenlabs` - elevenlabs\n* `none-mono` - none-mono"
                    },
                    "transcript_json": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Transcript of the call"
                    },
                    "call_ended_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "customer_number": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "An arbitrary object for storage purpose only. You can put anything here like your internal customer id associated with the call. Not used for processing. You can later get this field from the call object."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the call occurred"
                    },
                    "dynamic_variables": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Dictionary of dynamic variables and values. These values will replace variables in double curly braces in the agent description."
                    }
                },
                "required": [
                    "call_id"
                ]
            },
            "SchemaPostCreateShareableLinkToken": {
                "type": "object",
                "properties": {
                    "expire_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Optional expiration date/time for the token (ISO 8601 format)"
                    }
                }
            },
            "SchemaPostCronJob": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for the cronjob"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of scenario IDs to execute"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Alternative to scenarios - List of tags to filter scenario"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "Required when tags are provided"
                    },
                    "crontab_expression": {
                        "type": "string",
                        "description": "Cron expression for scheduling (e.g. '0 9 * * 1-5' for weekdays at 9am)"
                    },
                    "timezone": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimezoneEnum"
                            }
                        ],
                        "description": "Timezone for the cronjob (default: Project timezone)\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC"
                    }
                },
                "required": [
                    "crontab_expression"
                ]
            },
            "SchemaPostMetricEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of what this metric evaluates"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether this metric evaluates audio content"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "External identifier for the assistant"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)"
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Type of evaluation (e.g., boolean, enum, score)"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Order in which to display this metric in the UI"
                    }
                },
                "required": [
                    "assistant_id",
                    "audio_enabled",
                    "description",
                    "display_order",
                    "enum_values",
                    "eval_type",
                    "name",
                    "prompt",
                    "type"
                ]
            },
            "SchemaPostMetricList": {
                "type": "object",
                "description": "Mixin for parsing restql query from request.\n\nNOTE: We are using `request.GET` instead of\n`request.query_params` because this might be\ncalled before DRF request is created(i.e from dispatch).\nThis means `request.query_params` might not be available\nwhen this mixin is used.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the metric",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of what the metric evaluates"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "The AI agent this metric is associated with"
                    },
                    "eval_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvalTypeEnum"
                            }
                        ],
                        "description": "Type of evaluation (e.g., boolean, enum, score)\n\n* `binary_workflow_adherence` - Binary Workflow Adherence\n* `binary_qualitative` - Binary Qualitative\n* `continuous_qualitative` - Continuous Qualitative\n* `numeric` - Numeric\n* `enum` - Enum"
                    },
                    "enum_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Possible values for enum-type metrics"
                    },
                    "audio_enabled": {
                        "type": "boolean",
                        "description": "Whether audio evaluation is enabled for this metric"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "description": "Type of metric (e.g., basic, custom_prompt, custom_code)\n\n* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The evaluation prompt used for this metric"
                    },
                    "evaluation_trigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationTriggerEnum"
                            }
                        ],
                        "description": "The evaluation trigger used for this metric\n\n* `always` - Always\n* `automatic` - Automatic\n* `custom` - Custom"
                    },
                    "evaluation_trigger_prompt": {
                        "type": "string",
                        "description": "The evaluation trigger prompt used for this metric"
                    }
                },
                "required": [
                    "agent",
                    "description",
                    "eval_type",
                    "name"
                ]
            },
            "SchemaPostReRunResultDetail": {
                "type": "object",
                "properties": {
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of run IDs",
                        "minItems": 1
                    },
                    "metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of metric IDs to evaluate",
                        "minItems": 1
                    }
                },
                "required": [
                    "metric_ids",
                    "run_ids"
                ]
            },
            "SchemaPostRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Prompt to improve"
                    },
                    "category_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of category IDs"
                    },
                    "workflow_metric_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of workflow metric IDs"
                    },
                    "run_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of run IDs to analyze (max 3)",
                        "maxItems": 3
                    }
                },
                "required": [
                    "prompt",
                    "run_ids"
                ]
            },
            "SchemaPostRunScenarios": {
                "type": "object",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent this evaluator is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of evaluator IDs to run. Either evaluators or tags must be provided."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to filter evaluators to run. Either evaluators or tags must be provided."
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "The number of times each evaluator will run"
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for result"
                    },
                    "outbound_phone_number": {
                        "type": "string",
                        "description": "\nOverride the phone number to use for outbound calls.\nExample: \"+1234567890\"\n"
                    },
                    "personality_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "ID of the personality to override for this run. If not provided, uses the scenario's default personality."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "default": "same_number",
                        "description": "Using same or different phone numbers for each evaluation\n\n* `same_number` - same_number\n* `different_numbers` - different_numbers"
                    }
                }
            },
            "SchemaPostRunScenariosText": {
                "type": "object",
                "description": "Schema for the run_scenarios_text endpoint, which runs scenarios in text mode.",
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "description": "The AI agent this evaluator is associated with"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "name": {
                        "type": "string",
                        "description": "Label text for result"
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of evaluator IDs to run. Either evaluators or tags must be provided."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to filter evaluators to run. Either evaluators or tags must be provided."
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 1,
                        "description": "The number of times each evaluator will run"
                    },
                    "personality_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "ID of the personality to override for this run. If not provided, uses the scenario's default personality."
                    },
                    "websocket_url": {
                        "type": "string"
                    }
                }
            },
            "SchemaPostScenario": {
                "type": "object",
                "properties": {
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80
                    },
                    "personality": {
                        "type": "integer",
                        "description": "The personality of the evaluator"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "expected_outcome_prompt": {
                        "type": "string"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "description": "List of metric IDs to associate with this evaluator"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to associate with the evaluator"
                    },
                    "tool_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool IDs to use for evaluator"
                    },
                    "test_profile": {
                        "type": "integer",
                        "description": "The test profile ID to use for the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": "integer",
                        "description": "The inbound phone number ID to use for the evaluator"
                    }
                },
                "required": [
                    "personality"
                ]
            },
            "SchemaPostSimulateScenario": {
                "type": "object",
                "properties": {
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality to use in the simulation"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the agent to use in the simulation"
                    },
                    "assistant_id": {
                        "type": "string",
                        "description": "Assistant ID to use in the simulation"
                    },
                    "transcript_json": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "JSON representation of the conversation transcript"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the simulated scenario"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Prompt describing the expected outcome of the scenario"
                    }
                },
                "required": [
                    "transcript_json"
                ]
            },
            "SchemaResponseRunImprovePrompt": {
                "type": "object",
                "properties": {
                    "improved_prompt": {
                        "type": "string",
                        "description": "Improved prompt for the AI agent"
                    },
                    "summary_of_changes": {
                        "type": "string",
                        "description": "Summary of changes made to the prompt"
                    }
                },
                "required": [
                    "improved_prompt",
                    "summary_of_changes"
                ]
            },
            "SchemaScenario": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the evaluator"
                    },
                    "agent": {
                        "type": "integer",
                        "description": "ID of the AI agent this scenario belongs to"
                    },
                    "assistant_id": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Alternative to agent ID - the assistant ID to use for this scenario"
                    },
                    "personality": {
                        "type": "integer",
                        "description": "ID of the personality"
                    },
                    "personality_name": {
                        "type": "string",
                        "description": "Name of the personality"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags of the evaluators"
                    },
                    "tool_ids": {
                        "description": "List of tool IDs to associate with this scenario"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of run IDs"
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of metric IDs"
                    },
                    "metric_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of metric names"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number eg: +17776666333"
                    },
                    "first_message": {
                        "type": "string",
                        "description": "First message of the evaluator"
                    },
                    "inbound_phone_number": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "inbound_phone_number_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberInbound"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the phone number used for inbound calls"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Instructions of the evaluator"
                    },
                    "simulation_description": {
                        "type": "string"
                    },
                    "information_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Information fields of the evaluator"
                    },
                    "expected_outcome_prompt": {
                        "type": "string",
                        "description": "Expected outcome prompt of the evaluator"
                    },
                    "scenario_language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScenarioLanguageEnum"
                            }
                        ],
                        "description": "Language of the scenario\n\n* `ar` - Arabic\n* `bg` - Bulgarian\n* `zh` - Chinese Simplified\n* `cs` - Czech\n* `da` - Danish\n* `nl` - Dutch\n* `en` - English\n* `fi` - Finnish\n* `fr` - French\n* `de` - German\n* `el` - Greek\n* `hi` - Hindi\n* `hu` - Hungarian\n* `id` - Indonesian\n* `it` - Italian\n* `ja` - Japanese\n* `ko` - Korean\n* `ms` - Malay\n* `multi` - Multilingual\n* `no` - Norwegian\n* `pl` - Polish\n* `pt` - Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `es` - Spanish\n* `sv` - Swedish\n* `tr` - Turkish\n* `uk` - Ukrainian\n* `vi` - Vietnamese"
                    },
                    "test_profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "test_profile_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AIAgentTestProfile"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the test profile associated with this scenario"
                    }
                },
                "required": [
                    "id",
                    "inbound_phone_number_data",
                    "test_profile_data"
                ]
            },
            "SlackWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channel_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "is_verified",
                    "organization",
                    "team_name"
                ]
            },
            "SourceModelEnum": {
                "enum": [
                    "CallLog",
                    "Run"
                ],
                "type": "string",
                "description": "* `CallLog` - Call Log\n* `Run` - Run"
            },
            "Status39fEnum": {
                "enum": [
                    "running",
                    "completed",
                    "failed",
                    "pending",
                    "in_progress",
                    "evaluating",
                    "in_queue",
                    "timeout"
                ],
                "type": "string",
                "description": "* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `pending` - Pending\n* `in_progress` - In Progress\n* `evaluating` - Evaluating\n* `in_queue` - In Queue\n* `timeout` - Timeout"
            },
            "StatusA5dEnum": {
                "enum": [
                    "success",
                    "failure",
                    "reviewed_success",
                    "reviewed_failure"
                ],
                "type": "string",
                "description": "* `success` - Success\n* `failure` - Failure\n* `reviewed_success` - Reviewed Success\n* `reviewed_failure` - Reviewed Failure"
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "stripe_subscription_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_trial": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pack": {
                        "$ref": "#/components/schemas/PackInline"
                    },
                    "last_payment_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "expire_at",
                    "id",
                    "is_trial",
                    "last_payment_at",
                    "pack",
                    "stripe_subscription_id",
                    "updated_at"
                ]
            },
            "TestSetDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript": {
                        "type": "string"
                    },
                    "transcript_object": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "voice_recording": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "source_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "metric_reviews": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "duration",
                    "id",
                    "metric_reviews",
                    "source_id",
                    "source_model",
                    "updated_at",
                    "voice_recording",
                    "voice_recording_url"
                ]
            },
            "TestSetList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "transcript_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_end_reason": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "duration": {
                        "type": "string"
                    },
                    "has_recording": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source_model": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SourceModelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "source_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "duration",
                    "has_recording",
                    "id",
                    "transcript_short",
                    "updated_at"
                ]
            },
            "TimezoneEnum": {
                "enum": [
                    "Africa/Abidjan",
                    "Africa/Accra",
                    "Africa/Addis_Ababa",
                    "Africa/Algiers",
                    "Africa/Asmara",
                    "Africa/Bamako",
                    "Africa/Bangui",
                    "Africa/Banjul",
                    "Africa/Bissau",
                    "Africa/Blantyre",
                    "Africa/Brazzaville",
                    "Africa/Bujumbura",
                    "Africa/Cairo",
                    "Africa/Casablanca",
                    "Africa/Ceuta",
                    "Africa/Conakry",
                    "Africa/Dakar",
                    "Africa/Dar_es_Salaam",
                    "Africa/Djibouti",
                    "Africa/Douala",
                    "Africa/El_Aaiun",
                    "Africa/Freetown",
                    "Africa/Gaborone",
                    "Africa/Harare",
                    "Africa/Johannesburg",
                    "Africa/Juba",
                    "Africa/Kampala",
                    "Africa/Khartoum",
                    "Africa/Kigali",
                    "Africa/Kinshasa",
                    "Africa/Lagos",
                    "Africa/Libreville",
                    "Africa/Lome",
                    "Africa/Luanda",
                    "Africa/Lubumbashi",
                    "Africa/Lusaka",
                    "Africa/Malabo",
                    "Africa/Maputo",
                    "Africa/Maseru",
                    "Africa/Mbabane",
                    "Africa/Mogadishu",
                    "Africa/Monrovia",
                    "Africa/Nairobi",
                    "Africa/Ndjamena",
                    "Africa/Niamey",
                    "Africa/Nouakchott",
                    "Africa/Ouagadougou",
                    "Africa/Porto-Novo",
                    "Africa/Sao_Tome",
                    "Africa/Tripoli",
                    "Africa/Tunis",
                    "Africa/Windhoek",
                    "America/Adak",
                    "America/Anchorage",
                    "America/Chicago",
                    "America/Denver",
                    "America/Los_Angeles",
                    "America/New_York",
                    "America/Phoenix",
                    "America/Sao_Paulo",
                    "Asia/Dubai",
                    "Asia/Hong_Kong",
                    "Asia/Kolkata",
                    "Asia/Seoul",
                    "Asia/Shanghai",
                    "Asia/Singapore",
                    "Asia/Tokyo",
                    "Australia/Melbourne",
                    "Australia/Perth",
                    "Australia/Sydney",
                    "Europe/Amsterdam",
                    "Europe/Berlin",
                    "Europe/London",
                    "Europe/Madrid",
                    "Europe/Moscow",
                    "Europe/Paris",
                    "Europe/Rome",
                    "Pacific/Auckland",
                    "Pacific/Honolulu",
                    "US/Central",
                    "US/Eastern",
                    "US/Mountain",
                    "US/Pacific",
                    "UTC"
                ],
                "type": "string",
                "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Chicago` - America/Chicago\n* `America/Denver` - America/Denver\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/New_York` - America/New_York\n* `America/Phoenix` - America/Phoenix\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Tokyo` - Asia/Tokyo\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/Perth` - Australia/Perth\n* `Australia/Sydney` - Australia/Sydney\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/London` - Europe/London\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Paris` - Europe/Paris\n* `Europe/Rome` - Europe/Rome\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `US/Central` - US/Central\n* `US/Eastern` - US/Eastern\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `UTC` - UTC"
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TranscriptProviderEnum": {
                "enum": [
                    "vapi",
                    "retell",
                    "vocera",
                    "synthflow",
                    "elevenlabs",
                    "custom"
                ],
                "type": "string",
                "description": "* `vapi` - Vapi\n* `retell` - Retell\n* `vocera` - Vocera\n* `synthflow` - Synthflow\n* `elevenlabs` - Elevenlabs\n* `custom` - Custom"
            },
            "TranscriptTypeEnum": {
                "enum": [
                    "cekura",
                    "vapi",
                    "retell",
                    "deepgram",
                    "pipecat",
                    "livekit",
                    "elevenlabs",
                    "none-mono"
                ],
                "type": "string",
                "description": "* `cekura` - cekura\n* `vapi` - vapi\n* `retell` - retell\n* `deepgram` - deepgram\n* `pipecat` - pipecat\n* `livekit` - livekit\n* `elevenlabs` - elevenlabs\n* `none-mono` - none-mono"
            },
            "TypeEnum": {
                "enum": [
                    "basic",
                    "custom_prompt",
                    "custom_code"
                ],
                "type": "string",
                "description": "* `basic` - Basic\n* `custom_prompt` - Custom Prompt\n* `custom_code` - Custom Code"
            },
            "UserAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "key",
                    "organization_name",
                    "project_name"
                ]
            },
            "UserInline": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    }
                },
                "required": [
                    "email",
                    "id",
                    "name"
                ]
            },
            "UserMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserInline"
                            }
                        ],
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "is_email_notify_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "organization_name",
                    "project_name",
                    "updated_at",
                    "user"
                ]
            },
            "Workflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "id",
                    "name",
                    "updated_at"
                ]
            },
            "WorkflowDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "agent": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeInline"
                        },
                        "readOnly": true
                    },
                    "edges": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "agent",
                    "created_at",
                    "edges",
                    "id",
                    "name",
                    "nodes",
                    "updated_at"
                ]
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "X-CEKURA-API-KEY",
                "in": "header",
                "description": "API Key Authentication. It should be included in the header of each request."
            }
        }
    },
    "servers": [
        {
            "url": "https://api.cekura.ai"
        }
    ]
}